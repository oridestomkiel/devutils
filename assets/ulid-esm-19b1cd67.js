var e="undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{};const n="0123456789ABCDEFGHJKMNPQRSTVWXYZ",t="0123456789ABCDEFGHJKMNPQRSTVWXYZ",r="7ZZZZZZZZZZZZZZZZZZZZZZZZZ",o="00000000000000000000000000",i=10,a=0xffffffffffff,s=/^[0-7][0-9a-hjkmnp-tv-zA-HJKMNP-TV-Z]{25}$/,f=/^[0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$/;var c,l;(l=c||(c={})).Base32IncorrectEncoding="B32_ENC_INVALID",l.DecodeTimeInvalidCharacter="DEC_TIME_CHAR",l.DecodeTimeValueMalformed="DEC_TIME_MALFORMED",l.EncodeTimeNegative="ENC_TIME_NEG",l.EncodeTimeSizeExceeded="ENC_TIME_SIZE_EXCEED",l.EncodeTimeValueMalformed="ENC_TIME_MALFORMED",l.PRNGDetectFailure="PRNG_DETECT",l.ULIDInvalid="ULID_INVALID",l.Unexpected="UNEXPECTED",l.UUIDInvalid="UUID_INVALID";class d extends Error{constructor(e,n){super(`${n} (${e})`),this.name="ULIDError",this.code=e}}function u(e){let n=Math.floor(32*e());return 32===n&&(n=31),t.charAt(n)}function I(e,n,t){return n>e.length-1?e:e.substr(0,n)+t+e.substr(n+1)}function m(e){return e.replace(/i/gi,"1").replace(/l/gi,"1").replace(/o/gi,"0").replace(/-/g,"")}function E(e){let n,r,o,i=e.length,a=e;for(;!n&&i-- >=0;){if(r=a[i],o=t.indexOf(r),-1===o)throw new d(c.Base32IncorrectEncoding,"Incorrectly encoded string");31!==o?n=I(a,i,t[o+1]):a=I(a,i,t[0])}if("string"==typeof n)return n;throw new d(c.Base32IncorrectEncoding,"Failed incrementing string")}function p(e){if(26!==e.length)throw new d(c.DecodeTimeValueMalformed,"Malformed ULID");const n=e.substr(0,10).toUpperCase().split("").reverse().reduce(((e,n,r)=>{const o=t.indexOf(n);if(-1===o)throw new d(c.DecodeTimeInvalidCharacter,`Time decode error: Invalid character: ${n}`);return e+o*Math.pow(32,r)}),0);if(n>a)throw new d(c.DecodeTimeValueMalformed,`Malformed ULID: timestamp too large: ${n}`);return n}function w(n){const t="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:"undefined"!=typeof window?window:void 0!==e?e:"undefined"!=typeof globalThis?globalThis:null,r=t&&(t.crypto||t.msCrypto)||null;if("function"==typeof(null==r?void 0:r.getRandomValues))return()=>{const e=new Uint8Array(1);return r.getRandomValues(e),e[0]/255};if("function"==typeof(null==r?void 0:r.randomBytes))return()=>r.randomBytes(1).readUInt8()/255;throw new d(c.PRNGDetectFailure,"Failed to find a reliable PRNG")}function D(e,n){let t="";for(;e>0;e--)t=u(n)+t;return t}function g(e,n=10){if(isNaN(e))throw new d(c.EncodeTimeValueMalformed,`Time must be a number: ${e}`);if(e>a)throw new d(c.EncodeTimeSizeExceeded,`Cannot encode a time larger than ${a}: ${e}`);if(e<0)throw new d(c.EncodeTimeNegative,`Time must be positive: ${e}`);if(!1===Number.isInteger(e))throw new d(c.EncodeTimeValueMalformed,`Time must be an integer: ${e}`);let r,o="";for(let i=n;i>0;i--)r=e%32,o=t.charAt(r)+o,e=(e-r)/32;return o}function h(e){return"string"==typeof e&&26===e.length&&e.toUpperCase().split("").every((e=>-1!==t.indexOf(e)))}function U(e){const n=e||w();let t,r=0;return function(e){const o=!e||isNaN(e)?Date.now():e;if(o<=r){const e=t=E(t);return g(r,10)+e}r=o;const i=t=D(16,n);return g(o,10)+i}}function T(e,n){const t=n||w();return g(!e||isNaN(e)?Date.now():e,10)+D(16,t)}function Z(e){if(!s.test(e))throw new d(c.ULIDInvalid,`Invalid ULID: ${e}`);const t=function(e){const t=e.toUpperCase().split("").reverse().join(""),r=[];let o=0,i=0;for(const a of t){const e=n.indexOf(a);if(-1===e)throw new Error(`Invalid base 32 character found in string: ${a}`);for(i|=e<<o,o+=5;o>=8;)r.unshift(255&i),i>>>=8,o-=8}return(o>=5||i>0)&&r.unshift(255&i),new Uint8Array(r)}(e);let r=Array.from(t).map((e=>e.toString(16).padStart(2,"0"))).join("");return r=r.substring(0,8)+"-"+r.substring(8,12)+"-"+r.substring(12,16)+"-"+r.substring(16,20)+"-"+r.substring(20),r.toUpperCase()}function M(e){if(!f.test(e))throw new d(c.UUIDInvalid,`Invalid UUID: ${e}`);const t=e.replace(/-/g,"").match(/.{1,2}/g);if(!t)throw new d(c.Unexpected,`Failed parsing UUID bytes: ${e}`);return function(e){const t=[];let r=0,o=0;const i=new Uint8Array(e.slice().reverse());for(const n of i)for(o|=n<<r,r+=8;r>=5;)t.unshift(31&o),o>>>=5,r-=5;return r>0&&t.unshift(31&o),t.map((e=>n.charAt(e))).join("")}(new Uint8Array(t.map((e=>parseInt(e,16)))))}const N=null;export{r as MAX_ULID,o as MIN_ULID,i as TIME_LEN,a as TIME_MAX,d as ULIDError,c as ULIDErrorCode,p as decodeTime,N as default,g as encodeTime,m as fixULIDBase32,E as incrementBase32,h as isValid,U as monotonicFactory,T as ulid,Z as ulidToUUID,M as uuidToULID};
