import{b as e}from"./include-partial-062af8a1.js";async function n(e,t="pt"){try{const n=e.slug||e.name||"unknown";e.slug||console.warn(`⚠️ tool.slug está indefinido! Usando fallback "${n}"`);const r=await fetch(`/devutils/i18n/tools/${n}/${t}.json`),a=await r.json();e.i18n=a,e.lang=t}catch(n){console.warn(`⚠️ Tradução não encontrada para ${e.slug||"undefined"}/${t}`),e.i18n={}}}const r={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="p-4 rounded bg-gray-100 dark:bg-gray-800 text-sm space-y-4 text-gray-800 dark:text-white">\n    <p>${t("intro")}</p>\n\n    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">\n      <div>\n        <label class="block text-sm mb-1">${t("label.state")}</label>\n        <select id="cepUf" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded">\n          <option value="">${t("option.random")}</option>\n        </select>\n      </div>\n      <div>\n        <label class="block text-sm mb-1">${t("label.city")}</label>\n        <select id="cepCidade" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded" disabled>\n          <option value="">${t("label.city.selectState")}</option>\n        </select>\n      </div>\n    </div>\n\n    <div class="flex items-center gap-4">\n      <label class="block text-sm">${t("label.maskCep")}</label>\n      <label class="inline-flex items-center gap-1">\n        <input type="radio" name="pontuar" value="sim" checked /> ${t("yes")}\n      </label>\n      <label class="inline-flex items-center gap-1">\n        <input type="radio" name="pontuar" value="nao" /> ${t("no")}\n      </label>\n    </div>\n\n    <button id="btnGerarCep" class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white">\n      ${t("generate")}\n    </button>\n\n    <div id="resultadoCepWrapper" class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-4 hidden">\n      <div id="resultadoCep" class="space-y-4">\n        ${["cep","address","neighborhood","city","state"].map((n=>`\n          <div>\n            <label class="block text-sm mb-1">${t("label.result."+n)}</label>\n            <div class="flex gap-2">\n              <input id="out${n}" readonly class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-green-700 dark:text-green-400 rounded" />\n              <button data-copy="out${n}" class="px-2 py-1 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 rounded">${e("copy")}</button>\n            </div>\n          </div>`)).join("")}\n      </div>\n\n      <div class="space-y-2">\n        <label class="block text-sm mb-1">${t("label.result.json")}</label>\n        <div class="relative">\n          <pre id="outJson" class="h-full p-3 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 text-green-700 dark:text-green-400 rounded text-xs overflow-auto whitespace-pre-wrap"></pre>\n          <button id="copyJson" class="absolute top-2 right-2 px-2 py-1 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 rounded">${e("copy")}</button>\n        </div>\n      </div>\n    </div>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("cepUf"),r=document.getElementById("cepCidade"),a=document.getElementById("btnGerarCep"),o=document.getElementById("resultadoCepWrapper"),d={cep:document.getElementById("outcep"),address:document.getElementById("outaddress"),neighborhood:document.getElementById("outneighborhood"),city:document.getElementById("outcity"),state:document.getElementById("outstate")};fetch("https://servicodados.ibge.gov.br/api/v1/localidades/estados").then((e=>e.json())).then((e=>{e.sort(((e,t)=>e.nome.localeCompare(t.nome))),e.forEach((e=>{const t=document.createElement("option");t.value=e.sigla,t.textContent=e.nome,n.appendChild(t)}))})),n.addEventListener("change",(()=>{const e=n.value;r.innerHTML=`<option value="">${t("option.random.city")}</option>`,r.disabled=!0,e&&fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${e}/municipios`).then((e=>e.json())).then((e=>{e.sort(((e,t)=>e.nome.localeCompare(t.nome))),e.forEach((e=>{const t=document.createElement("option");t.value=e.id,t.textContent=e.nome,r.appendChild(t)})),r.disabled=!1}))})),a.addEventListener("click",(()=>{const e=n.value,a=r.value,l="sim"===document.querySelector("input[name='pontuar']:checked").value;o.classList.remove("hidden"),Object.values(d).forEach((e=>e.value=t("loading"))),document.getElementById("outJson").textContent=t("json.loading");const i=new URLSearchParams;e&&i.append("uf",e),a&&i.append("cidade",a),i.append("pontuar",l?"1":"0"),fetch(`https://devutils.tools/api/address-generator.json?${i.toString()}`).then((e=>e.json())).then((e=>{d.cep.value=e.cep,d.address.value=e.endereco,d.neighborhood.value=e.bairro,d.city.value=e.cidade,d.state.value=e.estado,document.getElementById("outJson").textContent=JSON.stringify(e,null,2)})).catch((()=>{Object.values(d).forEach((e=>e.value=t("error"))),document.getElementById("outJson").textContent=t("error.fetch")}))})),document.addEventListener("click",(t=>{if(t.target.matches("button[data-copy]")){const n=t.target.getAttribute("data-copy"),r=document.getElementById(n).value;navigator.clipboard.writeText(r).then((()=>{t.target.textContent=e("copied"),setTimeout((()=>t.target.textContent=e("copy")),1500)}))}if("copyJson"===t.target.id){const n=document.getElementById("outJson").textContent;navigator.clipboard.writeText(n).then((()=>{t.target.textContent=e("copied"),setTimeout((()=>t.target.textContent=e("copy")),1500)}))}}))}},a=Object.freeze(Object.defineProperty({__proto__:null,default:r},Symbol.toStringTag,{value:"Module"})),o={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"2.3.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div id="jwtInputGroup" class="mb-4 text-gray-900 dark:text-white">\n    <textarea\n      id="jwtInput"\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      rows="4"\n      placeholder="${e("placeholder.jwt")}"\n    ></textarea>\n  </div>\n\n  <button\n    id="jwtClearBtn"\n    class="mb-3 hidden bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-white px-3 py-1 rounded text-sm"\n  >\n    ${e("clear")}\n  </button>\n\n  <div id="jwtOutputGroup" class="hidden">\n    <div\n      id="jwtVisual"\n      class="font-mono text-sm bg-white dark:bg-gray-900 text-gray-900 dark:text-green-400 p-3 rounded mb-3 break-words whitespace-pre-wrap border border-gray-300 dark:border-gray-600"\n    ></div>\n\n    <div\n      id="jwtStatus"\n      class="text-base font-semibold font-mono mb-4 p-3 hidden border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-white rounded"\n    ></div>\n\n    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">\n      <div class="bg-gray-100 dark:bg-gray-900 rounded p-3 border border-gray-300 dark:border-gray-600">\n        <div class="text-gray-500 dark:text-gray-400 mb-1">${e("header")}</div>\n        <pre id="jwtHeader" class="text-sm p-3 min-h-[10rem] mb-2 whitespace-pre-wrap break-words bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded"></pre>\n        <button id="copyHeaderBtn" class="mt-1 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-white px-2 py-1 rounded">\n          ${e("copy.header")}\n        </button>\n      </div>\n\n      <div class="bg-gray-100 dark:bg-gray-900 rounded p-3 border border-gray-300 dark:border-gray-600">\n        <div class="text-gray-500 dark:text-gray-400 mb-1">${e("payload")}</div>\n        <pre id="jwtPayload" class="text-sm p-3 min-h-[10rem] mb-2 whitespace-pre-wrap break-words bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded"></pre>\n        <button id="copyPayloadBtn" class="mt-1 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-white px-2 py-1 rounded">\n          ${e("copy.payload")}\n        </button>\n      </div>\n    </div>\n\n    <div class="mb-2 text-sm text-gray-500 dark:text-gray-400">${e("signature.title")}</div>\n    <input\n      id="jwtSecret"\n      type="text"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      placeholder="${e("signature.placeholder")}"\n    />\n\n    <div id="jwtSigStatus" class="text-red-600 dark:text-red-400 text-sm mb-3 hidden"></div>\n  </div>\n`},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},t=document.getElementById("jwtInput"),n=document.getElementById("jwtInputGroup"),r=document.getElementById("jwtOutputGroup"),a=document.getElementById("jwtClearBtn"),o=document.getElementById("jwtVisual"),d=document.getElementById("jwtHeader"),l=document.getElementById("jwtPayload"),i=document.getElementById("jwtStatus"),s=document.getElementById("jwtSigStatus"),c=document.getElementById("jwtSecret"),g=e=>navigator.clipboard.writeText(e),u=e=>{try{const t=e.replace(/-/g,"+").replace(/_/g,"/"),n=t+"=".repeat((4-t.length%4)%4),r=atob(n),a=Uint8Array.from([...r].map((e=>e.charCodeAt(0))));return new TextDecoder("utf-8").decode(a)}catch(t){return null}},p=e=>("string"!=typeof e&&(e=JSON.stringify(e,null,2)),(e=e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")).replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\\s*:)?|\b(true|false|null)\b|\b\d+\b)/g,(e=>{let t="text-green-400";return/^"/.test(e)?t=/:$/.test(e)?"text-purple-400":"text-yellow-300":/true|false/.test(e)?t="text-blue-400":/null/.test(e)&&(t="text-gray-400"),`<span class="${t}">${e}</span>`}))),b=async(t,n)=>{if(!window.CryptoJS){const e=document.createElement("script");return e.src="./vendor/crypto-js.min.js",e.onload=()=>b(t,n),void document.head.appendChild(e)}const r=t.split(".");if(3!==r.length)return;CryptoJS.HmacSHA256(r[0]+"."+r[1],n).toString(CryptoJS.enc.Base64url)===r[2]?(s.classList.remove("text-red-400"),s.classList.add("text-green-400"),s.textContent=e("signature.valid")):(s.classList.remove("text-green-400"),s.classList.add("text-red-400"),s.textContent=e("signature.invalid")),s.classList.remove("hidden")},y=()=>{const g=t.value.trim(),y=(e=>{const t=e.split(".");if(3!==t.length)return null;const[n,r]=t,a=u(n),o=u(r);if(!a||!o)return null;try{return{header:JSON.parse(a),payload:JSON.parse(o),signature:t[2]}}catch{return null}})(g);return g?(n.classList.add("hidden"),r.classList.remove("hidden"),a.classList.remove("hidden"),o.innerHTML=(e=>{const t=e.split(".");return 3!==t.length?"":`<span class="text-red-400">${t[0]}</span><span class="text-gray-500">.</span><span class="text-purple-400">${t[1]}</span><span class="text-gray-500">.</span><span class="text-blue-400">${t[2]}</span>`})(g),y?(d.innerHTML=p(y.header),l.innerHTML=p(y.payload),i.textContent=e("jwt.valid"),i.className="text-green-400 text-sm font-mono mb-2",void(c.value.trim()?b(g,c.value.trim()):s.classList.add("hidden"))):(i.textContent=e("jwt.invalid"),i.className="text-red-400 text-sm font-mono mb-2",d.innerHTML="",l.innerHTML="",void s.classList.add("hidden"))):(n.classList.remove("hidden"),r.classList.add("hidden"),a.classList.add("hidden"),o.innerHTML="",d.innerHTML="",l.innerHTML="",i.classList.add("hidden"),void s.classList.add("hidden"))};t.addEventListener("input",y),c.addEventListener("input",y),a.addEventListener("click",(()=>{t.value="",c.value="",y()})),document.getElementById("copyHeaderBtn").addEventListener("click",(()=>{g(d.textContent)})),document.getElementById("copyPayloadBtn").addEventListener("click",(()=>{g(l.textContent)}))}},d=Object.freeze(Object.defineProperty({__proto__:null,default:o},Symbol.toStringTag,{value:"Module"})),l={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="qrInput"\n    class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n    rows="3"\n    placeholder="${t("placeholder.input")}"\n  ></textarea>\n\n  <div class="grid grid-cols-2 gap-2 mb-2">\n    <div>\n      <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${t("label.size")}</label>\n      <input\n        type="number"\n        id="qrSize"\n        value="256"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n      />\n    </div>\n    <div>\n      <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${t("label.margin")}</label>\n      <input\n        type="number"\n        id="qrMargin"\n        value="2"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n      />\n    </div>\n  </div>\n\n  <div class="grid grid-cols-2 gap-2 mb-2">\n    <div>\n      <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${t("label.color.dark")}</label>\n      <input\n        type="color"\n        id="qrDark"\n        value="#000000"\n        class="w-full h-10 rounded border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-700"\n      />\n    </div>\n    <div>\n      <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${t("label.color.light")}</label>\n      <input\n        type="color"\n        id="qrLight"\n        value="#ffffff"\n        class="w-full h-10 rounded border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-700"\n      />\n    </div>\n  </div>\n\n  <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${t("label.logo")}</label>\n  <input\n    id="qrLogoUrl"\n    class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n    placeholder="${t("placeholder.logo")}"\n  />\n\n  <div class="flex flex-wrap gap-2 mb-4">\n    <button id="qrGenerateBtn" class="bg-indigo-600 hover:bg-indigo-700 px-4 py-1 rounded text-white dark:bg-indigo-500 dark:hover:bg-indigo-600">\n      ${e("generate")}\n    </button>\n    <button id="qrDownloadPng" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600">\n      ${e("download")} PNG\n    </button>\n    <button id="qrDownloadSvg" class="bg-yellow-600 hover:bg-yellow-700 px-4 py-1 rounded text-white dark:bg-yellow-500 dark:hover:bg-yellow-600">\n      ${t("export.svg")}\n    </button>\n  </div>\n\n  <div class="relative w-fit" id="qrContainer"></div>\n    `},init(){const e=(e,t)=>{const n=document.createElement("script");n.src=e,n.onload=t,document.head.appendChild(n)};function t(){let e=null;document.getElementById("qrGenerateBtn").addEventListener("click",(()=>{const t=document.getElementById("qrInput").value,n=parseInt(document.getElementById("qrSize").value),r=parseInt(document.getElementById("qrMargin").value),a=document.getElementById("qrDark").value,o=document.getElementById("qrLight").value,d=document.getElementById("qrLogoUrl").value,l=document.getElementById("qrContainer");l.innerHTML="",e=new QRCodeStyling({width:n,height:n,data:t,image:d||void 0,margin:r,dotsOptions:{color:a,type:"square"},backgroundOptions:{color:o},imageOptions:{crossOrigin:"anonymous",margin:4}}),e.append(l)})),document.getElementById("qrDownloadPng").addEventListener("click",(()=>{e&&e.download({extension:"png"})})),document.getElementById("qrDownloadSvg").addEventListener("click",(()=>{e&&e.download({extension:"svg"})}))}e("./vendor/qrcode.min.js",(()=>{e("./vendor/qr-code-styling.js",t)}))}},i=Object.freeze(Object.defineProperty({__proto__:null,default:l},Symbol.toStringTag,{value:"Module"})),s={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="p-4 rounded text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n    <div>\n      <label class="block mb-1">${t("label.original")}</label>\n      <textarea\n        id="inputTexto"\n        rows="5"\n        maxlength="10000"\n        class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        placeholder="${t("placeholder.list")}"\n      ></textarea>\n      <div class="text-xs text-gray-600 mt-1 dark:text-gray-400">\n        <span id="charCount">0</span>/10.000 caracteres\n      </div>\n    </div>\n\n    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">\n      <div>\n        <label class="block mb-1">${t("label.sortType")}</label>\n        <select id="tipoOrdem" class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n          <option value="asc">${t("option.asc")}</option>\n          <option value="desc">${t("option.desc")}</option>\n        </select>\n      </div>\n      <div>\n        <label class="block mb-1">${t("label.separator")}</label>\n        <select id="separador" class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n          <option value="\\n">${t("option.linebreak")}</option>\n          <option value=" ">${t("option.space")}</option>\n          <option value=",">${t("option.comma")}</option>\n          <option value=";">${t("option.semicolon")}</option>\n        </select>\n      </div>\n    </div>\n\n    <div class="flex items-center gap-2">\n      <input type="checkbox" id="removerDuplicados" class="accent-indigo-600" />\n      <label for="removerDuplicados">${t("label.removeDuplicates")}</label>\n    </div>\n\n    <button\n      id="btnOrdenar"\n      class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white dark:bg-indigo-500 dark:hover:bg-indigo-600"\n    >\n      ${t("button.sort")}\n    </button>\n\n    <div>\n      <label class="block mb-1 mt-4">${t("label.sorted")}</label>\n      <textarea\n        id="resultado"\n        rows="5"\n        readonly\n        class="w-full p-2 rounded bg-white border border-gray-300 text-green-600 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n      ></textarea>\n      <div class="flex gap-2 mt-2">\n        <button\n          id="btnCopiar"\n          class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n        >\n          ${e("copy")}\n        </button>\n        <button\n          id="btnDownload"\n          class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n        >\n          ${t("button.download")}\n        </button>\n      </div>\n    </div>\n  </div>\n    `},init(){const t=document.getElementById("inputTexto"),n=document.getElementById("resultado");t.addEventListener("input",(()=>{document.getElementById("charCount").textContent=t.value.length})),document.getElementById("btnOrdenar").addEventListener("click",(()=>{const e=document.getElementById("tipoOrdem").value,r=document.getElementById("separador").value,a=document.getElementById("removerDuplicados").checked;let o=t.value.split(new RegExp(r));o=o.map((e=>e.trim())).filter((e=>e.length>0)),a&&(o=[...new Set(o)]),o.sort(((t,n)=>"asc"===e?t.localeCompare(n):n.localeCompare(t)));const d="\\n"===r?o.join("\n"):o.join(r);n.value=d})),document.getElementById("btnCopiar").addEventListener("click",(()=>{const t=document.getElementById("btnCopiar");navigator.clipboard.writeText(n.value).then((()=>{t.textContent=e("copied"),setTimeout((()=>t.textContent=e("copy")),1500)}))})),document.getElementById("btnDownload").addEventListener("click",(()=>{const e=new Blob([n.value],{type:"text/plain"}),t=document.createElement("a");t.href=URL.createObjectURL(e),t.download="ordenado.txt",t.click()}))}},c=Object.freeze(Object.defineProperty({__proto__:null,default:s},Symbol.toStringTag,{value:"Module"})),g={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="asciiInput"\n    class="w-full p-2 rounded mb-2 bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-white"\n    rows="3"\n    placeholder="${t("placeholder")}"\n  ></textarea>\n\n  <div class="flex gap-2">\n    <button\n      id="asciiEncodeBtn"\n      class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded"\n    >\n      ${t("encode")}\n    </button>\n    <button\n      id="asciiDecodeBtn"\n      class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded"\n    >\n      ${t("decode")}\n    </button>\n  </div>\n\n  <div class="mt-2 flex gap-2">\n    <input\n      id="asciiOutput"\n      type="text"\n      readonly\n      class="p-2 rounded w-full bg-white dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-green-700 dark:text-green-400"\n      value=""\n    />\n    <button\n      id="asciiCopyBtn"\n      class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white px-2 py-1 rounded"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n`},init(){const t=document.getElementById("asciiOutput");document.getElementById("asciiEncodeBtn").addEventListener("click",(()=>{const e=[...document.getElementById("asciiInput").value].map((e=>e.charCodeAt(0))).join(" ");t.value=e})),document.getElementById("asciiDecodeBtn").addEventListener("click",(()=>{const e=document.getElementById("asciiInput").value;try{const n=e.trim().split(/\s+/).map((e=>String.fromCharCode(Number(e))));t.value=n.join("")}catch(n){t.value=this.i18n["ascii.decodeError"]??"Erro ao decodificar."}})),document.getElementById("asciiCopyBtn").addEventListener("click",(()=>{navigator.clipboard.writeText(t.value).then((()=>{const t=document.getElementById("asciiCopyBtn"),n=t.innerText;t.innerText=e("copied"),setTimeout((()=>t.innerText=n),1500)}))}))}},u=Object.freeze(Object.defineProperty({__proto__:null,default:g},Symbol.toStringTag,{value:"Module"})),p={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="grid grid-cols-2 gap-2 mb-3 text-gray-900 dark:text-white">\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("label.ratio")}</label>\n      <select id="ratioSelect" class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">\n        <option value="16/9">${t("option.ratio.16_9")}</option>\n        <option value="4/3">${t("option.ratio.4_3")}</option>\n        <option value="1/1">${t("option.ratio.1_1")}</option>\n        <option value="21/9">${t("option.ratio.21_9")}</option>\n        <option value="custom">${t("option.ratio.custom")}</option>\n      </select>\n    </div>\n\n    <div id="customRatioWrapper" class="hidden">\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("label.ratio.custom")}</label>\n      <input\n        type="text"\n        id="customRatio"\n        placeholder="ex: 3/2"\n        class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      />\n    </div>\n\n    <div class="col-span-2">\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("label.ratio.mode")}</label>\n      <select id="ratioMode" class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">\n        <option value="modern">${t("option.mode.modern")}</option>\n        <option value="fallback">${t("option.mode.fallback")}</option>\n      </select>\n    </div>\n  </div>\n\n  <button id="ratioCopy" class="bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded">\n    ${e("copy")}\n  </button>\n\n  <div class="mt-4 border border-gray-300 dark:border-gray-700 bg-gray-100 dark:bg-gray-800 p-4 rounded">\n    <div id="ratioPreview"\n      class="bg-blue-300 w-full max-w-sm mx-auto rounded overflow-hidden relative aspect-video">\n      <div class="absolute inset-0 flex items-center justify-center font-bold text-black dark:text-white text-xl">\n        ${t("preview.label")}\n      </div>\n    </div>\n  </div>\n\n  <pre id="ratioCSS"\n    class="mt-2 text-green-700 dark:text-green-400 bg-white dark:bg-gray-900 p-3 rounded whitespace-pre-wrap break-words text-sm border border-gray-300 dark:border-gray-700"></pre>\n    `},init(){const t=document.getElementById("ratioSelect"),n=document.getElementById("customRatio"),r=document.getElementById("customRatioWrapper"),a=document.getElementById("ratioMode"),o=document.getElementById("ratioPreview"),d=document.getElementById("ratioCSS"),l=document.getElementById("ratioCopy"),i=()=>{const e="custom"===t.value?n.value:t.value,r=(e=>{const t=e.split("/");return 2===t.length?+t[0]/+t[1]:1})(e||"1/1");let l="";if("modern"===a.value)l=`\n  .aspect-box {\n    aspect-ratio: ${e};\n    width: 100%;\n  }`.trim(),o.style.aspectRatio=e,o.style.paddingTop="";else{const e=1/r*100;l=`\n  .aspect-box {\n    position: relative;\n    width: 100%;\n    padding-top: ${e.toFixed(2)}%;\n  }\n  .aspect-box > * {\n    position: absolute;\n    top: 0; left: 0; right: 0; bottom: 0;\n  }`.trim(),o.style.aspectRatio="",o.style.paddingTop=`${e.toFixed(2)}%`}d.innerText=l};t.addEventListener("change",(()=>{r.classList.toggle("hidden","custom"!==t.value),i()})),[n,a].forEach((e=>e.addEventListener("input",i))),l.addEventListener("click",(()=>{const t=d.innerText;t&&navigator.clipboard.writeText(t).then((()=>{l.innerText=e("copied"),setTimeout((()=>l.innerText=e("copy")),1500)}))})),i()}},b=Object.freeze(Object.defineProperty({__proto__:null,default:p},Symbol.toStringTag,{value:"Module"})),y={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="b58Input"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      rows="3"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2">\n      <button\n        id="b58Encode"\n        class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded"\n      >\n        ${t("encode")}\n      </button>\n      <button\n        id="b58Decode"\n        class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded"\n      >\n        ${t("decode")}\n      </button>\n    </div>\n\n    <div class="mt-2 flex gap-2">\n      <input\n        id="b58Output"\n        type="text"\n        value=""\n        readonly\n        class="p-2 rounded w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n      />\n      <button\n        id="b58CopyBtn"\n        class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",r={};for(let e=0;e<58;e++)r[n[e]]=e;const a=document.getElementById("b58Encode"),o=document.getElementById("b58Decode"),d=document.getElementById("b58Input"),l=document.getElementById("b58Output"),i=document.getElementById("b58CopyBtn");a.addEventListener("click",(()=>{const e=d.value,t=function(e){let t=[0];for(let n=0;n<e.length;++n){let r=e[n];for(let e=0;e<t.length;++e)r+=t[e]<<8,t[e]=r%58,r=r/58|0;for(;r;)t.push(r%58),r=r/58|0}for(let n=0;n<e.length&&0===e[n];++n)t.push(0);return t.reverse().map((e=>n[e])).join("")}((new TextEncoder).encode(e));l.value=t})),o.addEventListener("click",(()=>{try{const e=function(e){if(0===e.length)return new Uint8Array;let t=[0];for(let a=0;a<e.length;a++){const n=e[a];if(!(n in r))throw new Error("invalid");let o=r[n];for(let e=0;e<t.length;++e)o+=58*t[e],t[e]=255&o,o>>=8;for(;o;)t.push(255&o),o>>=8}let n=0;for(;"1"===e[n];)n++;return new Uint8Array(Array(n).fill(0).concat(t.reverse()))}(d.value),t=(new TextDecoder).decode(e);l.value=t}catch(e){l.value=`${t("error.decode")}: ${e.message}`}})),i.addEventListener("click",(()=>{navigator.clipboard.writeText(l.value).then((()=>{i.innerText,i.innerText=e("copied"),setTimeout((()=>i.innerText=e("copy")),1500)}))}))}},m=Object.freeze(Object.defineProperty({__proto__:null,default:y},Symbol.toStringTag,{value:"Module"})),v={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="base64Input"\n    class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    rows="3"\n    placeholder="${t("placeholder")}"\n  ></textarea>\n\n  <div class="flex gap-2">\n    <button\n      id="base64EncodeBtn"\n      class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded"\n    >\n      ${t("encode")}\n    </button>\n    <button\n      id="base64DecodeBtn"\n      class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded"\n    >\n      ${t("decode")}\n    </button>\n  </div>\n\n  <div class="mt-2 flex gap-2">\n    <input\n      id="base64Output"\n      type="text"\n      value=""\n      readonly\n      class="p-2 rounded w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n    />\n    <button\n      id="base64CopyBtn"\n      class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("base64Input"),r=document.getElementById("base64Output"),a=document.getElementById("base64EncodeBtn"),o=document.getElementById("base64DecodeBtn"),d=document.getElementById("base64CopyBtn");a.addEventListener("click",(()=>{const e=n.value;r.value=btoa(e)})),o.addEventListener("click",(()=>{try{const e=n.value;r.value=atob(e)}catch{r.value=t("error.decode")}})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{d.innerText,d.innerText=e("copied"),setTimeout((()=>d.innerText=e("copy")),1500)}))}))}},h=Object.freeze(Object.defineProperty({__proto__:null,default:v},Symbol.toStringTag,{value:"Module"})),x={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="b64HexInput"\n    class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    rows="4"\n    placeholder="${t("placeholder")}"\n  ></textarea>\n\n  <div class="flex gap-2">\n    <button\n      id="b64ToHexBtn"\n      class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded"\n    >\n      ${t("b64.to.hex")}\n    </button>\n    <button\n      id="hexToB64Btn"\n      class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded"\n    >\n      ${t("hex.to.b64")}\n    </button>\n  </div>\n\n  <div class="mt-2 flex gap-2">\n    <input\n      id="b64HexOutput"\n      type="text"\n      value=""\n      readonly\n      class="p-2 rounded w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n    />\n    <button\n      id="b64HexCopyBtn"\n      class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("b64HexInput"),r=document.getElementById("b64HexOutput"),a=document.getElementById("b64ToHexBtn"),o=document.getElementById("hexToB64Btn"),d=document.getElementById("b64HexCopyBtn");a.addEventListener("click",(()=>{try{const e=n.value.trim(),t=[...atob(e)].map((e=>e.charCodeAt(0)));r.value=(e=>e.map((e=>e.toString(16).padStart(2,"0"))).join(""))(t)}catch(e){r.value=`${t("error.prefix")}: ${e.message}`}})),o.addEventListener("click",(()=>{try{const e=(e=>e.match(/.{1,2}/g).map((e=>parseInt(e,16))))(n.value.replace(/\s+/g,"")),t=String.fromCharCode(...e);r.value=btoa(t)}catch(e){r.value=`${t("error.prefix")}: ${e.message}`}})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{d.innerText,d.innerText=e("copied"),setTimeout((()=>d.innerText=e("copy")),1500)}))}))}},w=Object.freeze(Object.defineProperty({__proto__:null,default:x},Symbol.toStringTag,{value:"Module"})),k={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="base64ImgInput"\n    class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n    rows="6"\n    placeholder="${e("placeholder")}"\n  ></textarea>\n\n  <div\n    id="base64ImgPreview"\n    class="flex justify-center items-center min-h-[200px] bg-gray-100 dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded mb-2"\n  >\n    <span class="text-sm text-gray-600 dark:text-gray-400">${e("preview.label")}</span>\n  </div>\n\n  <div class="flex justify-end">\n    <button\n      id="base64DownloadBtn"\n      class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded hidden"\n    >\n      ${e("download")}\n    </button>\n  </div>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},t=document.getElementById("base64ImgInput"),n=document.getElementById("base64ImgPreview"),r=document.getElementById("base64DownloadBtn");t.addEventListener("input",(()=>{const a=t.value.trim();if(!a.startsWith("data:image"))return n.innerHTML=`<span class="text-sm text-red-400">${e("error.invalid")}</span>`,void r.classList.add("hidden");const o=document.createElement("img");o.src=a,o.alt="Imagem Base64",o.className="max-w-full max-h-96 rounded",n.innerHTML="",n.appendChild(o),r.classList.remove("hidden"),r.onclick=()=>{const e=document.createElement("a");e.href=a,e.download="imagem-base64.png",e.click()}}))}},f=Object.freeze(Object.defineProperty({__proto__:null,default:k},Symbol.toStringTag,{value:"Module"})),B={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="p-4 rounded bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white text-sm space-y-4">\n    <div id="loadingBcrypt" class="text-center py-8">\n      <p class="text-yellow-600 dark:text-yellow-400">${t("loading")}</p>\n      <p class="text-xs text-gray-600 dark:text-gray-400 mt-2">${t("loading.sub")}</p>\n    </div>\n\n    <div id="mainContent" class="hidden">\n      <div class="space-y-6">\n        <div>\n          <h2 class="text-lg font-bold mb-2">${t("section.generate")}</h2>\n          <div class="space-y-4">\n            <div>\n              <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("label.text")}</label>\n              <input id="textoParaHash" type="text" class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" />\n            </div>\n            <div>\n              <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("label.rounds")}</label>\n              <div class="flex items-center gap-2">\n                <input id="numeroRodadas" type="number" min="4" max="31" value="12" class="w-20 p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" />\n                <div class="flex gap-1">\n                  <button id="btnDiminuir" class="px-3 py-1 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white rounded">-</button>\n                  <button id="btnAumentar" class="px-3 py-1 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white rounded">+</button>\n                </div>\n              </div>\n              <p id="dicaRodadas" class="text-xs mt-1 text-gray-600 dark:text-gray-400"></p>\n            </div>\n            <button id="btnGerarHash" class="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded text-sm w-full">${t("generate")}</button>\n          </div>\n\n          <div id="resultadoContainer" class="hidden">\n            <div class="mt-4 p-4 bg-gray-200 dark:bg-gray-900 rounded">\n              <textarea id="hashResultado" readonly class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-green-700 dark:text-green-400 font-mono mb-2" rows="2"></textarea>\n              <button id="btnCopiarHash" class="bg-gray-300 dark:bg-gray-700 hover:bg-gray-400 dark:hover:bg-gray-600 text-gray-900 dark:text-white px-3 py-1 rounded text-sm">${e("copy")}</button>\n              <p id="infoRodadas" class="text-xs mt-2 text-gray-600 dark:text-gray-400"></p>\n            </div>\n          </div>\n        </div>\n\n        <div class="border-t border-gray-300 dark:border-gray-700 pt-4">\n          <h2 class="text-lg font-bold mb-2">${t("section.verify")}</h2>\n          <div class="space-y-4">\n            <div>\n              <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("label.original")}</label>\n              <input id="textoOriginal" type="text" class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" />\n            </div>\n            <div>\n              <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("label.hash")}</label>\n              <input id="hashParaVerificar" type="text" class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-mono" />\n            </div>\n            <button id="btnVerificarHash" class="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded text-sm w-full">${t("verify")}</button>\n            <p id="resultadoVerificacao" class="text-sm text-center mt-2 hidden"></p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div id="errorContainer" class="hidden text-center py-8">\n      <p class="text-red-600 dark:text-red-400">${t("error.load")}</p>\n      <p class="text-xs text-gray-600 dark:text-gray-400 mt-2" id="errorDetail"></p>\n      <button id="retryButton" class="mt-4 bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded text-sm">${t("retry")}</button>\n    </div>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("loadingBcrypt"),r=document.getElementById("mainContent"),a=document.getElementById("errorContainer"),o=document.getElementById("retryButton"),d=document.getElementById("errorDetail"),l=()=>{n.classList.remove("hidden"),r.classList.add("hidden"),a.classList.add("hidden");const o=document.querySelector('script[src*="bcryptjs"]');o&&o.remove();const l=document.createElement("script");l.src="./vendor/bcrypt.min.js",l.async=!0,l.onload=()=>{var o;const l=null==(o=window.dcodeIO)?void 0:o.bcrypt;if(!l||"function"!=typeof l.hashSync)return n.classList.add("hidden"),d.textContent=t("error.scope"),void a.classList.remove("hidden");n.classList.add("hidden"),r.classList.remove("hidden"),function(n){const r=document.getElementById("textoParaHash"),a=document.getElementById("numeroRodadas"),o=document.getElementById("btnGerarHash"),d=document.getElementById("btnCopiarHash"),l=document.getElementById("btnAumentar"),i=document.getElementById("btnDiminuir"),s=document.getElementById("hashResultado"),c=document.getElementById("resultadoContainer"),g=document.getElementById("infoRodadas"),u=document.getElementById("dicaRodadas"),p=document.getElementById("textoOriginal"),b=document.getElementById("hashParaVerificar"),y=document.getElementById("btnVerificarHash"),m=document.getElementById("resultadoVerificacao"),v=()=>{const e=parseInt(a.value);e<8?(u.textContent=t("rounds.low"),u.className="text-xs mt-1 text-yellow-400"):e<12?(u.textContent=t("rounds.medium"),u.className="text-xs mt-1 text-blue-400"):(u.textContent=t("rounds.high"),u.className="text-xs mt-1 text-green-400")};i.onclick=()=>{const e=parseInt(a.value);e>4&&(a.value=e-1),v()},l.onclick=()=>{const e=parseInt(a.value);e<31&&(a.value=e+1),v()},a.onchange=v,v(),o.onclick=()=>{const e=r.value.trim(),d=parseInt(a.value);if(!e)return alert(t("input.empty"));p.value="",b.value="",m.classList.add("hidden"),o.disabled=!0,o.textContent=`${t("generate")}...`,setTimeout((()=>{try{const r=n.genSaltSync(d),a=n.hashSync(e,r);s.value=a,g.textContent=t("generated.with").replace("{rounds}",d),c.classList.remove("hidden"),p.value=e,b.value=a,y.click()}catch(r){alert(t("error.gerar"))}finally{o.disabled=!1,o.textContent=t("generate")}}),50)},d.onclick=()=>{navigator.clipboard.writeText(s.value).then((()=>{d.textContent=e("copied"),setTimeout((()=>d.textContent=e("copy")),1500)}))},y.onclick=()=>{const e=p.value.trim(),r=b.value.trim();if(e&&r)try{const a=n.compareSync(e,r);m.textContent=t(a?"match.ok":"match.fail"),m.className=a?"text-green-400 text-sm text-center mt-2":"text-red-400 text-sm text-center mt-2",m.classList.remove("hidden")}catch{m.textContent=t("match.error"),m.className="text-red-400 text-sm text-center mt-2"}else alert(t("input.verify.empty"))}}(l)},l.onerror=()=>{n.classList.add("hidden"),d.textContent=t("error.network"),a.classList.remove("hidden")},document.head.appendChild(l)};o.addEventListener("click",l),l()}},_=Object.freeze(Object.defineProperty({__proto__:null,default:B},Symbol.toStringTag,{value:"Module"})),I={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="binDecInput"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      rows="3"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2">\n      <button\n        id="binToDecBtn"\n        class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded"\n      >\n        ${t("bin.to.dec")}\n      </button>\n      <button\n        id="decToBinBtn"\n        class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded"\n      >\n        ${t("dec.to.bin")}\n      </button>\n    </div>\n\n    <div class="mt-2 flex gap-2">\n      <input\n        id="binDecOutput"\n        type="text"\n        value=""\n        readonly\n        class="p-2 rounded w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n      />\n      <button\n        id="binDecCopyBtn"\n        class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("binDecInput"),r=document.getElementById("binDecOutput"),a=document.getElementById("binToDecBtn"),o=document.getElementById("decToBinBtn"),d=document.getElementById("binDecCopyBtn");a.addEventListener("click",(()=>{try{const e=n.value.trim().split(/\s+/).map((e=>parseInt(e,2))).join(" ");r.value=e}catch(e){r.value=`${t("error.prefix")}: ${e.message}`}})),o.addEventListener("click",(()=>{try{const e=n.value.trim().split(/\s+/).map((e=>parseInt(e,10).toString(2))).join(" ");r.value=e}catch(e){r.value=`${t("error.prefix")}: ${e.message}`}})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{d.innerText,d.innerText=e("copied"),setTimeout((()=>{d.innerText=e("copy")}),1500)}))}))}},E=Object.freeze(Object.defineProperty({__proto__:null,default:I},Symbol.toStringTag,{value:"Module"})),$={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="boletoInput"\n    class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    rows="2"\n    placeholder="${t("placeholder")}"\n  ></textarea>\n\n  <button\n    id="boletoValidateBtn"\n    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n  >\n    ${t("validate")}\n  </button>\n\n  <div class="mt-2 flex gap-2">\n    <input\n      id="boletoOutput"\n      type="text"\n      value=""\n      readonly\n      class="p-2 rounded w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n    />\n    <button\n      id="boletoCopyBtn"\n      class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("boletoInput"),r=document.getElementById("boletoOutput"),a=document.getElementById("boletoValidateBtn"),o=document.getElementById("boletoCopyBtn"),d=e=>{let t=0,n=2;for(let a=e.length-1;a>=0;a--){let r=e[a]*n;r>9&&(r=Math.floor(r/10)+r%10),t+=r,n=2===n?1:2}const r=t%10;return 0===r?0:10-r};a.addEventListener("click",(()=>{const e=n.value.replace(/\D/g,"");if(r.value="",47!==e.length&&48!==e.length)return void(r.value=t("error.length"));if(!(e=>{if(47===e.length)return[{campo:e.slice(0,9),dv:e[9]},{campo:e.slice(10,20),dv:e[20]},{campo:e.slice(21,31),dv:e[31]}].every((e=>d(e.campo)===parseInt(e.dv,10)));if(48===e.length)return[{campo:e.slice(0,11),dv:e[11]},{campo:e.slice(12,23),dv:e[23]},{campo:e.slice(24,35),dv:e[35]},{campo:e.slice(36,47),dv:e[47]}].every((e=>d(e.campo)===parseInt(e.dv,10)));return!1})(e))return void(r.value=t("error.dv"));let a="";a=47===e.length?e.slice(37,47):e.slice(4,15),r.value=t("success").replace("{valor}",(parseInt(a,10)/100).toLocaleString("pt-BR",{style:"currency",currency:"BRL"}))})),o.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{o.innerText,o.innerText=e("copied"),setTimeout((()=>{o.innerText=e("copy")}),1500)}))}))}},T=Object.freeze(Object.defineProperty({__proto__:null,default:$},Symbol.toStringTag,{value:"Module"})),L={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="grid grid-cols-2 gap-2 mb-3">\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("label.topLeft")}</label>\n      <input type="number" id="radiusTL" class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="8" />\n    </div>\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("label.topRight")}</label>\n      <input type="number" id="radiusTR" class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="8" />\n    </div>\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("label.bottomRight")}</label>\n      <input type="number" id="radiusBR" class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="8" />\n    </div>\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("label.bottomLeft")}</label>\n      <input type="number" id="radiusBL" class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="8" />\n    </div>\n  </div>\n\n  <button id="radiusGenBtn" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-1 rounded">\n    ${t("generate")}\n  </button>\n  <button id="radiusCopyBtn" class="bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded ml-2">\n    ${e("copy")}\n  </button>\n\n  <div id="radiusPreview" class="mt-4 border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-800 p-10 flex items-center justify-center rounded">\n    <div id="radiusBox" class="w-32 h-20 bg-gray-200 dark:bg-gray-600 text-black dark:text-white font-bold flex items-center justify-center">\n      ${t("preview")}\n    </div>\n  </div>\n\n  <pre id="radiusCSS" class="mt-2 text-green-700 dark:text-green-400 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 p-3 rounded whitespace-pre-wrap break-words text-sm"></pre>\n    `},init(){const t=document.getElementById("radiusGenBtn"),n=document.getElementById("radiusCopyBtn");t.addEventListener("click",(()=>{const e=document.getElementById("radiusTL").value,t=document.getElementById("radiusTR").value,n=document.getElementById("radiusBR").value,r=document.getElementById("radiusBL").value,a=`border-radius: ${e}px ${t}px ${n}px ${r}px;`,o=document.getElementById("radiusBox"),d=document.getElementById("radiusCSS");o.style.borderRadius=`${e}px ${t}px ${n}px ${r}px`,d.innerText=a})),n.addEventListener("click",(()=>{const t=document.getElementById("radiusCSS").innerText;t&&navigator.clipboard.writeText(t).then((()=>{n.innerText=e("copied"),setTimeout((()=>n.innerText=e("copy")),1500)}))}))}},j=Object.freeze(Object.defineProperty({__proto__:null,default:L},Symbol.toStringTag,{value:"Module"})),C={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <input\n    id="caseInput"\n    type="text"\n    class="w-full p-2 mb-4 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    placeholder="${t("placeholder.input")}"\n  />\n\n  <div class="flex gap-2 items-center mb-2">\n    <label class="w-[120px] text-gray-700 dark:text-gray-300"><strong>${t("label.camel")}</strong></label>\n    <input\n      id="camelOutput"\n      type="text"\n      readonly\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n    />\n    <button\n      id="camelCopyBtn"\n      class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n\n  <div class="flex gap-2 items-center mb-2">\n    <label class="w-[120px] text-gray-700 dark:text-gray-300"><strong>${t("label.snake")}</strong></label>\n    <input\n      id="snakeOutput"\n      type="text"\n      readonly\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n    />\n    <button\n      id="snakeCopyBtn"\n      class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n\n  <div class="flex gap-2 items-center">\n    <label class="w-[120px] text-gray-700 dark:text-gray-300"><strong>${t("label.kebab")}</strong></label>\n    <input\n      id="kebabOutput"\n      type="text"\n      readonly\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n    />\n    <button\n      id="kebabCopyBtn"\n      class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=document.getElementById("caseInput"),n=document.getElementById("camelOutput"),r=document.getElementById("snakeOutput"),a=document.getElementById("kebabOutput"),o=document.getElementById("camelCopyBtn"),d=document.getElementById("snakeCopyBtn"),l=document.getElementById("kebabCopyBtn");t.addEventListener("input",(()=>{const e=t.value.replace(/([a-z0-9])([A-Z])/g,"$1 $2").replace(/[-_]/g," ").toLowerCase().trim();n.value=(e=>e.split(" ").map(((e,t)=>0===t?e:e.charAt(0).toUpperCase()+e.slice(1))).join(""))(e),r.value=(e=>e.split(" ").join("_"))(e),a.value=(e=>e.split(" ").join("-"))(e)}));const i=(t,n)=>{t.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{t.innerText,t.innerText=e("copied"),setTimeout((()=>t.innerText=e("copy")),1500)}))}))};i(o,n),i(d,r),i(l,a)}},S=Object.freeze(Object.defineProperty({__proto__:null,default:C},Symbol.toStringTag,{value:"Module"})),O={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <select id="charcodeMode"\n    class="mb-2 p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">\n    <option value="to">${t("mode.to")}</option>\n    <option value="from">${t("mode.from")}</option>\n  </select>\n\n  <textarea\n    id="charcodeInput"\n    class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    rows="5"\n    placeholder="${t("placeholder")}"\n  ></textarea>\n\n  <div class="flex gap-2 mb-2">\n    <button\n      id="charcodeBtn"\n      class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded"\n    >${t("convert")}</button>\n    <button\n      id="charcodeClear"\n      class="bg-gray-200 dark:bg-gray-600 hover:bg-gray-300 dark:hover:bg-gray-500 text-gray-900 dark:text-white px-3 py-1 rounded hidden"\n    >${t("clear")}</button>\n    <button\n      id="charcodeCopy"\n      class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white px-3 py-1 rounded hidden"\n    >${e("copy")}</button>\n  </div>\n\n  <pre\n    id="charcodeOutput"\n    class="text-green-700 dark:text-green-400 bg-white dark:bg-gray-900 whitespace-pre-wrap break-words p-2 rounded border border-gray-300 dark:border-gray-700 hidden"\n  ></pre>\n\n  <p class="text-sm text-gray-600 dark:text-gray-400">\n    ${t("reference")}:\n    <a href="https://wikipedia.org/wiki/Plane_(Unicode)" target="_blank" class="underline text-blue-600 dark:text-blue-400">\n      ${t("link")}\n    </a>\n  </p>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("charcodeInput"),r=document.getElementById("charcodeOutput"),a=document.getElementById("charcodeMode"),o=document.getElementById("charcodeBtn"),d=document.getElementById("charcodeClear"),l=document.getElementById("charcodeCopy"),i=e=>{r.innerText=e,r.classList.remove("hidden"),d.classList.remove("hidden"),l.classList.remove("hidden")};o.addEventListener("click",(()=>{const e=n.value.trim();if(e)if("to"===a.value){const t=Array.from(e).map((e=>e.codePointAt(0).toString(16).padStart(4,"0"))).join(" ");i(t)}else try{const t=e.split(/\s+/).map((e=>String.fromCodePoint(parseInt(e,16))));i(t.join(""))}catch{i(t("error"))}})),d.addEventListener("click",(()=>{n.value="",r.innerText="",r.classList.add("hidden"),d.classList.add("hidden"),l.classList.add("hidden")})),l.addEventListener("click",(()=>{const t=r.innerText;t&&navigator.clipboard.writeText(t).then((()=>{l.innerText,l.innerText=e("copied"),setTimeout((()=>l.innerText=e("copy")),1500)}))}))}},M=Object.freeze(Object.defineProperty({__proto__:null,default:O},Symbol.toStringTag,{value:"Module"})),D={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.1.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="mb-4">\n    <textarea\n      id="deepseekPrompt"\n      class="w-full p-2 rounded text-sm font-mono bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n      rows="4"\n      placeholder="${e("placeholder.input")}"\n    ></textarea>\n  </div>\n\n  <div class="flex gap-2 mb-4">\n    <button\n      id="deepseekSendBtn"\n      class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm text-white"\n    >\n      ${e("send")}\n    </button>\n    <button\n      id="deepseekClearBtn"\n      class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-4 py-2 rounded text-sm text-gray-900 dark:text-white hidden"\n    >\n      ${e("clear")}\n    </button>\n  </div>\n\n  <pre\n    id="deepseekOutput"\n    class="bg-gray-100 dark:bg-gray-900 text-green-700 dark:text-green-400 p-4 rounded text-sm whitespace-pre-wrap break-words hidden border border-gray-300 dark:border-gray-700"\n  ></pre>\n    `},init(){const e=document.getElementById("deepseekPrompt"),t=document.getElementById("deepseekSendBtn"),n=document.getElementById("deepseekClearBtn"),r=document.getElementById("deepseekOutput");t.addEventListener("click",(async()=>{const t=e.value.trim();if(!t)return;r.textContent="",r.classList.remove("hidden"),n.classList.remove("hidden");const a=(await fetch("https://services.devutils.tools/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:t})})).body.getReader(),o=new TextDecoder("utf-8");for(;;){const{done:e,value:t}=await a.read();if(e)break;r.textContent+=o.decode(t,{stream:!0})}})),n.addEventListener("click",(()=>{e.value="",r.classList.add("hidden"),r.textContent="",n.classList.add("hidden")}))}},A=Object.freeze(Object.defineProperty({__proto__:null,default:D},Symbol.toStringTag,{value:"Module"})),P={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">\n    <textarea\n      id="diffOriginal"\n      rows="12"\n      placeholder="${e("placeholder.original")}"\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm font-mono"\n    ></textarea>\n    <textarea\n      id="diffModified"\n      rows="12"\n      placeholder="${e("placeholder.modified")}"\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm font-mono"\n    ></textarea>\n  </div>\n\n  <button\n    id="diffCompareBtn"\n    class="mt-4 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n  >\n    ${e("compare")}\n  </button>\n\n  <div id="diffHtmlOutput" class="mt-4 text-sm overflow-auto bg-gray-100 dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded p-4"></div>\n    `},init(){const e=document.createElement("style");e.innerHTML="\n      .d2h-wrapper {\n        background-color: #1f2937 !important;\n        color: #e5e7eb !important;\n      }\n      .d2h-code-line,\n      .d2h-code-linenumber {\n        background-color: #1f2937 !important;\n        color: #e5e7eb !important;\n      }\n      .d2h-del {\n        background-color: #7f1d1d !important;\n        color: #fee2e2 !important;\n      }\n      .d2h-ins {\n        background-color: #065f46 !important;\n        color: #d1fae5 !important;\n      }\n      .d2h-file-header {\n        background-color: #111827 !important;\n        color: #cbd5e1 !important;\n      }\n      .d2h-tag {\n        background-color: #374151 !important;\n        color: #93c5fd !important;\n        border: none;\n      }\n      .d2h-diff-txt {\n        color: #d1d5db !important;\n      }\n      .d2h-code-line del,\n      .d2h-code-side-line del,\n      .d2h-code-line-ctn del {\n        background-color: #7f1d1d !important;\n        color: #fee2e2 !important;\n        text-decoration: none !important;\n        padding: 1px 4px;\n        border-radius: 4px;\n      }\n      .d2h-code-line ins,\n      .d2h-code-side-line ins,\n      .d2h-code-line-ctn ins {\n        background-color: #065f46 !important;\n        color: #d1fae5 !important;\n        text-decoration: none !important;\n        padding: 1px 4px;\n        border-radius: 4px;\n      }\n    ",document.head.appendChild(e);const t=e=>{const t=e=>new Promise((t=>{const n=document.createElement("script");n.src=e,n.onload=t,document.head.appendChild(n)}));window.Diff2Html&&window.Diff?e():((e=>{const t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.appendChild(t)})("./vendor/diff2html.min.css"),Promise.all([t("./vendor/diff.min.js"),t("./vendor/diff2html.min.js")]).then(e))};document.getElementById("diffCompareBtn").addEventListener("click",(()=>{const e=document.getElementById("diffOriginal").value.trim(),n=document.getElementById("diffModified").value.trim();t((()=>{const t=window.Diff.createTwoFilesPatch("original.txt","modificado.txt",e,n,"",""),r=window.Diff2Html.html(t,{drawFileList:!1,matching:"lines",outputFormat:"side-by-side"});document.getElementById("diffHtmlOutput").innerHTML=r}))}))}},U=Object.freeze(Object.defineProperty({__proto__:null,default:P},Symbol.toStringTag,{value:"Module"})),z={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">\n    <textarea\n      id="diffOriginalV2"\n      rows="12"\n      placeholder="${e("placeholder.original")}"\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm font-mono"\n    ></textarea>\n    <textarea\n      id="diffModifiedV2"\n      rows="12"\n      placeholder="${e("placeholder.modified")}"\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white text-sm font-mono"\n    ></textarea>\n  </div>\n\n  <button\n    id="diffCompareBtnV2"\n    class="mt-4 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n  >\n    ${e("compare")}\n  </button>\n\n  <div id="diffHtmlOutputV2"\n    class="mt-4 text-sm overflow-auto bg-gray-100 dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded p-4">\n  </div>\n    `},init(){const e=document.createElement("style");e.innerHTML="\n      .d2h-wrapper {\n        background-color: #1f2937 !important;\n        color: #e5e7eb !important;\n      }\n      .d2h-code-line,\n      .d2h-code-linenumber {\n        background-color: #1f2937 !important;\n        color: #e5e7eb !important;\n      }\n      .d2h-del {\n        background-color: #7f1d1d !important;\n        color: #fee2e2 !important;\n      }\n      .d2h-ins {\n        background-color: #065f46 !important;\n        color: #d1fae5 !important;\n      }\n      .d2h-file-header {\n        background-color: #111827 !important;\n        color: #cbd5e1 !important;\n      }\n      .d2h-tag {\n        background-color: #374151 !important;\n        color: #93c5fd !important;\n        border: none;\n      }\n      .d2h-diff-txt {\n        color: #d1d5db !important;\n      }\n      .d2h-code-line del,\n      .d2h-code-side-line del,\n      .d2h-code-line-ctn del {\n        background-color: #7f1d1d !important;\n        color: #fee2e2 !important;\n        text-decoration: none !important;\n        padding: 1px 4px;\n        border-radius: 4px;\n      }\n      .d2h-code-line ins,\n      .d2h-code-side-line ins,\n      .d2h-code-line-ctn ins {\n        background-color: #065f46 !important;\n        color: #d1fae5 !important;\n        text-decoration: none !important;\n        padding: 1px 4px;\n        border-radius: 4px;\n      }\n    ",document.head.appendChild(e);const t=e=>{const t=e=>new Promise((t=>{const n=document.createElement("script");n.src=e,n.onload=t,document.head.appendChild(n)}));window.Diff2Html&&window.Diff?e():((e=>{const t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.appendChild(t)})("./vendor/diff2html.min.css"),Promise.all([t("./vendor/diff.min.js"),t(",/vendor/diff2html.min.js")]).then(e))};document.getElementById("diffCompareBtnV2").addEventListener("click",(()=>{const e=document.getElementById("diffOriginalV2").value.trim(),n=document.getElementById("diffModifiedV2").value.trim();t((()=>{const t=window.Diff.createTwoFilesPatch("original.txt","modificado.txt",e,n,"",""),r=window.Diff2Html.html(t,{drawFileList:!1,matching:"lines",outputFormat:"line-by-line"});document.getElementById("diffHtmlOutputV2").innerHTML=r}))}))}},R=Object.freeze(Object.defineProperty({__proto__:null,default:z},Symbol.toStringTag,{value:"Module"})),H={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="codeMinInput"\n    class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    rows="6"\n    placeholder="${e("placeholder.input")}"\n  ></textarea>\n\n  <button\n    id="minifyBtn"\n    class="bg-teal-600 hover:bg-teal-700 text-white px-4 py-1 rounded"\n  >\n    ${e("minify")}\n  </button>\n\n  <div class="mt-2 flex gap-2">\n    <textarea\n      id="minifyOutput"\n      rows="6"\n      readonly\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400"\n      placeholder="${e("placeholder.output")}"\n    ></textarea>\n    <button\n      id="minifyCopyBtn"\n      class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const e=document.getElementById("codeMinInput"),t=document.getElementById("minifyOutput"),n=document.getElementById("minifyBtn"),r=document.getElementById("minifyCopyBtn");n.addEventListener("click",(()=>{var n;const r=e.value.replace(/\/\*[\s\S]*?\*\/|\/\/.*/g,"").replace(/\s{2,}/g," ").replace(/\n/g,"").replace(/\s*([{};:,])\s*/g,"$1").trim();t.value=r||((null==(n=this.i18n)?void 0:n.empty)??"Nada pra minificar.")})),r.addEventListener("click",(()=>{navigator.clipboard.writeText(t.value).then((()=>{var e;r.innerText,r.innerText=(null==(e=this.i18n)?void 0:e.copied)??"Copiado!",setTimeout((()=>{var e;return r.innerText=(null==(e=this.i18n)?void 0:e.copy)??"Copiar"}),1500)}))}))}},J=Object.freeze(Object.defineProperty({__proto__:null,default:H},Symbol.toStringTag,{value:"Module"})),N={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <input\n      id="colorInput"\n      type="text"\n      placeholder="${e("placeholder.input")}"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    />\n\n    <button\n      id="colorConvertBtn"\n      class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-1 rounded"\n    >\n      ${e("button.convert")}\n    </button>\n\n    <div\n      id="colorPreview"\n      class="w-full h-12 rounded mb-2 mt-4 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800"\n    ></div>\n\n    <div class="mt-2 flex gap-2">\n      <textarea\n        id="colorOutput"\n        rows="3"\n        readonly\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400"\n        placeholder="Resultados da conversão"\n      ></textarea>\n      <button\n        id="colorCopyBtn"\n        class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n      >\n        ${e("button.copy")}\n      </button>\n    </div>\n    `},init(){const e=document.getElementById("colorInput"),n=document.getElementById("colorPreview"),r=document.getElementById("colorOutput"),a=document.getElementById("colorConvertBtn"),o=document.getElementById("colorCopyBtn");a.addEventListener("click",(()=>{var a;const o=e.value.trim();let d,l,i;const s=/^#?([a-f\d]{6}|[a-f\d]{3})$/i.test(o),c=/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/i.test(o);if(s){let e=o.replace("#","");3===e.length&&(e=e.split("").map((e=>e+e)).join("")),d=parseInt(e.slice(0,2),16),l=parseInt(e.slice(2,4),16),i=parseInt(e.slice(4,6),16)}else{if(!c)return r.value=(null==(a=this.i18n)?void 0:a["output.invalid"])??"Formato inválido. Use #RRGGBB ou rgb(r,g,b)",void(n.style.background="transparent");[d,l,i]=o.match(/\d+/g).map(Number)}const g=`#${[d,l,i].map((e=>e.toString(16).padStart(2,"0"))).join("")}`,u=`rgb(${d}, ${l}, ${i})`,p=((e,t,n)=>{e/=255,t/=255,n/=255;const r=Math.max(e,t,n),a=Math.min(e,t,n);let o,d,l=(r+a)/2;if(r===a)o=d=0;else{const i=r-a;switch(d=l>.5?i/(2-r-a):i/(r+a),r){case e:o=(t-n)/i+(t<n?6:0);break;case t:o=(n-e)/i+2;break;case n:o=(e-t)/i+4}o/=6}return`hsl(${Math.round(360*o)}, ${Math.round(100*d)}%, ${Math.round(100*l)}%)`})(d,l,i);r.value=`${t("output.label.hex")}: ${g}\n${t("output.label.rgb")}: ${u}\n${t("output.label.hsl")}: ${p}`,n.style.background=u})),o.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{const e=o.innerText;o.innerText="Copiado!",setTimeout((()=>{o.innerText=e}),1500)}))}))}},q=Object.freeze(Object.defineProperty({__proto__:null,default:N},Symbol.toStringTag,{value:"Module"})),F={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <input\n      id="paletteInput"\n      type="color"\n      class="w-full h-10 rounded mb-2 border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700"\n    />\n\n    <button\n      id="paletteGenBtn"\n      class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded"\n    >\n      ${e("button.generate")}\n    </button>\n\n    <div id="paletteOutput" class="grid grid-cols-5 gap-2 mt-4"></div>\n\n    <div class="mt-4 flex gap-2">\n      <textarea\n        id="paletteColors"\n        rows="3"\n        readonly\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 text-green-700 dark:text-green-400 text-sm"\n        placeholder="${e("placeholder.output")}"\n      ></textarea>\n      <button\n        id="paletteCopyBtn"\n        class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n      >\n        ${e("button.copy")}\n      </button>\n    </div>\n    `},init(){const e=document.getElementById("paletteInput"),t=document.getElementById("paletteOutput"),n=document.getElementById("paletteGenBtn"),r=document.getElementById("paletteColors"),a=document.getElementById("paletteCopyBtn");n.addEventListener("click",(()=>{const n=e.value;t.innerHTML="";const a=[];[-60,-30,0,30,60].forEach((e=>{const r=((e,t)=>{let n=!1;"#"===e[0]&&(e=e.slice(1),n=!0);let r=parseInt(e,16);return(n?"#":"")+(Math.min(255,Math.max(0,(r>>16)+t))<<16|Math.min(255,Math.max(0,(r>>8&255)+t))<<8|Math.min(255,Math.max(0,(255&r)+t))).toString(16).padStart(6,"0")})(n,e);a.push(r);const o=document.createElement("div");o.className="h-16 rounded flex items-center justify-center",o.style.backgroundColor=r,o.title=r,o.innerHTML=`<span class="text-xs text-white drop-shadow">${r}</span>`,t.appendChild(o)})),r.value=a.join("\n")})),a.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{const e=a.innerText;a.innerText="Copiado!",setTimeout((()=>{a.innerText=e}),1500)}))}))}},V=Object.freeze(Object.defineProperty({__proto__:null,default:F},Symbol.toStringTag,{value:"Module"})),G={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded bg-white text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n      <div>\n        <label class="block mb-1">${e("label.input")}</label>\n        <textarea\n          id="inputTexto"\n          rows="6"\n          class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n          placeholder="${e("placeholder.input")}"\n        ></textarea>\n      </div>\n\n      <button\n        id="btnConverter"\n        class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white dark:bg-indigo-500 dark:hover:bg-indigo-600"\n      >\n        ${e("button.convert")}\n      </button>\n\n      <div>\n        <label class="block mb-1 mt-4">${e("label.output")}</label>\n        <textarea\n          id="resultado"\n          rows="6"\n          readonly\n          class="w-full p-2 rounded bg-white border border-gray-300 text-green-600 font-mono dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        ></textarea>\n\n        <div class="flex gap-2 mt-2">\n          <button\n            id="btnCopiar"\n            class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n          >\n            ${e("button.copy")}\n          </button>\n          <button\n            id="btnLimpar"\n            class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n          >\n            ${e("button.clear")}\n          </button>\n        </div>\n      </div>\n    </div>\n    `},init(){const e=document.getElementById("inputTexto"),t=document.getElementById("resultado");document.getElementById("btnConverter").addEventListener("click",(()=>{const n=e.value.replace(/\n/g,"\\n");t.value=n})),document.getElementById("btnCopiar").addEventListener("click",(()=>{navigator.clipboard.writeText(t.value).then((()=>{const e=document.getElementById("btnCopiar");e.textContent="Copiado!",setTimeout((()=>e.textContent="Copiar"),1500)}))})),document.getElementById("btnLimpar").addEventListener("click",(()=>{e.value="",t.value=""}))}},Y=Object.freeze(Object.defineProperty({__proto__:null,default:G},Symbol.toStringTag,{value:"Module"})),X={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-800 text-sm space-y-4">\n      <div>\n        <label class="block mb-2 text-gray-700 dark:text-gray-300">${e("label.selectBrand")}</label>\n        <select id="ccBrand" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded">\n          <option value="visa">Visa</option>\n          <option value="mastercard">MasterCard</option>\n          <option value="amex">American Express</option>\n          <option value="discover">Discover</option>\n          <option value="diners">Diners Club</option>\n          <option value="jcb">JCB</option>\n        </select>\n      </div>\n\n      <button id="btnGerar" class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white">\n        ${e("button.generate")}\n      </button>\n\n      <div>\n        <label class="block mt-4 mb-1 text-gray-700 dark:text-gray-300">${e("label.number")}</label>\n        <div class="flex gap-2 items-center">\n          <input id="numCartao" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 rounded text-green-700 dark:text-green-400" readonly />\n          <button id="copyNum" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-3 rounded h-[36px] flex items-center justify-center">📋</button>\n          <span id="copiadoNum" class="text-xs text-green-700 dark:text-green-400 hidden">${e("copied")}</span>\n        </div>\n\n        <label class="block mt-4 mb-1 text-gray-700 dark:text-gray-300">${e("label.expiry")}</label>\n        <div class="flex gap-2 items-center">\n          <input id="validade" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 rounded text-green-700 dark:text-green-400" readonly />\n          <button id="copyVal" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-3 rounded h-[36px] flex items-center justify-center">📋</button>\n          <span id="copiadoVal" class="text-xs text-green-700 dark:text-green-400 hidden">${e("copied")}</span>\n        </div>\n\n        <label class="block mt-4 mb-1 text-gray-700 dark:text-gray-300">${e("label.cvv")}</label>\n        <div class="flex gap-2 items-center">\n          <input id="cvv" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 rounded text-green-700 dark:text-green-400" readonly />\n          <button id="copyCvv" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-3 rounded h-[36px] flex items-center justify-center">📋</button>\n          <span id="copiadoCvv" class="text-xs text-green-700 dark:text-green-400 hidden">${e("copied")}</span>\n        </div>\n      </div>\n    </div>\n    `},init(){const e={visa:{prefixos:["4"],tamanho:16},mastercard:{prefixos:["51","52","53","54","55"],tamanho:16},amex:{prefixos:["34","37"],tamanho:15},discover:{prefixos:["6011","65"],tamanho:16},diners:{prefixos:["300","301","305","36","38"],tamanho:14},jcb:{prefixos:["35"],tamanho:16}},t=()=>{const t=document.getElementById("ccBrand").value,n=e[t];return((e,t)=>{let n=e;for(;n.length<t-1;)n+=Math.floor(10*Math.random());let r=0,a=!0;for(let o=n.length-1;o>=0;o--){let e=parseInt(n[o]);a&&(e*=2,e>9&&(e-=9)),r+=e,a=!a}return n+(10-r%10)%10})(n.prefixos[Math.floor(Math.random()*n.prefixos.length)],n.tamanho)},n=(e,t)=>{const n=document.getElementById(e);navigator.clipboard.writeText(n.value).then((()=>{const e=document.getElementById(t);e.classList.remove("hidden"),setTimeout((()=>e.classList.add("hidden")),1500)}))};document.getElementById("btnGerar").addEventListener("click",(()=>{const e=t();document.getElementById("numCartao").value=(e=>e.replace(/(\d{4})(?=\d)/g,"$1 ").trim())(e),document.getElementById("validade").value=(()=>{const e=(new Date).getFullYear()+Math.floor(5*Math.random())+1;return`${String(Math.floor(12*Math.random())+1).padStart(2,"0")}/${e}`})(),document.getElementById("cvv").value=String(Math.floor(100+900*Math.random()))})),document.getElementById("copyNum").addEventListener("click",(()=>n("numCartao","copiadoNum"))),document.getElementById("copyVal").addEventListener("click",(()=>n("validade","copiadoVal"))),document.getElementById("copyCvv").addEventListener("click",(()=>n("cvv","copiadoCvv")))}},W=Object.freeze(Object.defineProperty({__proto__:null,default:X},Symbol.toStringTag,{value:"Module"})),Q={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded text-sm space-y-4 text-gray-800 dark:bg-gray-800 dark:text-white">\n      <div>\n        <label class="block mb-1">${e("label.input")}</label>\n        <input\n          type="text"\n          id="cardNumber"\n          placeholder="${e("placeholder.input")}"\n          class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        />\n      </div>\n\n      <button id="btnValidar" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm text-white">\n        ${e("button.validate")}\n      </button>\n\n      <div id="resultado" class="text-sm font-semibold mt-2 text-green-600 dark:text-green-400"></div>\n    </div>\n    `},init(){const e=document.getElementById("cardNumber"),t=document.getElementById("resultado"),n=e=>{var t;const n={visa:/^4[0-9]{12}(?:[0-9]{3})?$/,mastercard:/^5[1-5][0-9]{14}$/,amex:/^3[47][0-9]{13}$/,discover:/^6(?:011|5[0-9]{2})[0-9]{12}$/,diners:/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,jcb:/^(?:2131|1800|35\d{3})\d{11}$/};for(const[r,a]of Object.entries(n))if(a.test(e))return r.toUpperCase();return(null==(t=this.i18n)?void 0:t["brand.unknown"])??"Desconhecida"};document.getElementById("btnValidar").addEventListener("click",(()=>{var r,a,o;const d=e.value.replace(/\s+/g,"");if(!d.match(/^\d{12,19}$/))return t.textContent=(null==(r=this.i18n)?void 0:r["result.error"])??"Número inválido ou incompleto.",void(t.className="text-sm font-semibold text-yellow-400 mt-2");const l=n.call(this,d);(e=>{const t=e.replace(/\D/g,"");let n=0,r=!1;for(let a=t.length-1;a>=0;a--){let e=parseInt(t[a]);r&&(e*=2,e>9&&(e-=9)),n+=e,r=!r}return n%10==0})(d)?(t.textContent=`${(null==(a=this.i18n)?void 0:a["result.valid"])??"Válido"} (${l})`,t.className="text-sm font-semibold text-green-400 mt-2"):(t.textContent=`${(null==(o=this.i18n)?void 0:o["result.invalid"])??"Inválido"} (${l})`,t.className="text-sm font-semibold text-red-400 mt-2")}))}},K=Object.freeze(Object.defineProperty({__proto__:null,default:Q},Symbol.toStringTag,{value:"Module"})),Z={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <input\n      id="cronInput"\n      type="text"\n      placeholder="${e("placeholder.input")}"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    />\n\n    <button\n      id="cronExplainBtn"\n      class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-1 rounded"\n    >\n      ${e("button.explain")}\n    </button>\n\n    <div class="mt-2 flex gap-2">\n      <textarea\n        id="cronOutput"\n        rows="5"\n        readonly\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400"\n        placeholder="${e("placeholder.output")}"\n      ></textarea>\n      <button\n        id="cronCopyBtn"\n        class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n      >\n        Copiar\n      </button>\n    </div>\n\n    <small class="block mt-4 text-gray-500 dark:text-gray-400">\n      ${e("format.hint")}\n    </small>\n    `},init(){var e;const t=document.getElementById("cronInput"),n=document.getElementById("cronOutput"),r=document.getElementById("cronExplainBtn"),a=document.getElementById("cronCopyBtn"),o=(null==(e=this.i18n)?void 0:e.labels)||[];r.addEventListener("click",(()=>{var e;const r=t.value.trim().split(" ");5===r.length?n.value=r.map(((e,t)=>`${o[t]??`Campo ${t+1}`}: ${e}`)).join("\n"):n.value=(null==(e=this.i18n)?void 0:e.invalid)??"Expressão inválida. Deve ter 5 campos."})),a.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{var e;const t=a.innerText;a.innerText=(null==(e=this.i18n)?void 0:e.copied)??"Copiado!",setTimeout((()=>a.innerText=t),1500)}))}))}},ee=Object.freeze(Object.defineProperty({__proto__:null,default:Z},Symbol.toStringTag,{value:"Module"})),te={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},render(){const t=e,n=this.i18n.options||{},r=this.i18n.categories||{};return`\n  <div class="grid grid-cols-2 gap-2 mb-3 text-gray-900 dark:text-white">\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${(e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e})("animationType")}</label>\n      <select id="animType" class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">\n        <optgroup label="${r.basic}">\n          <option value="fade">${n.fade}</option>\n          <option value="scale">${n.scale}</option>\n          <option value="rotate">${n.rotate}</option>\n        </optgroup>\n        <optgroup label="${r.slides}">\n          <option value="slide-left">${n["slide-left"]}</option>\n          <option value="slide-right">${n["slide-right"]}</option>\n          <option value="slide-up">${n["slide-up"]}</option>\n          <option value="slide-down">${n["slide-down"]}</option>\n        </optgroup>\n        <optgroup label="${r.dynamic}">\n          <option value="bounce">${n.bounce}</option>\n          <option value="shake">${n.shake}</option>\n          <option value="flip">${n.flip}</option>\n          <option value="flip-x">${n["flip-x"]}</option>\n        </optgroup>\n        <optgroup label="${r.visual}">\n          <option value="blur-in">${n["blur-in"]}</option>\n          <option value="opacity-pulse">${n["opacity-pulse"]}</option>\n          <option value="zoom-in">${n["zoom-in"]}</option>\n          <option value="zoom-out">${n["zoom-out"]}</option>\n        </optgroup>\n        <optgroup label="${r.loop}">\n          <option value="float">${n.float}</option>\n          <option value="wave">${n.wave}</option>\n          <option value="pulse">${n.pulse}</option>\n        </optgroup>\n      </select>\n    </div>\n\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("duration")}</label>\n      <input type="number" id="animDuration"\n        class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        value="1" step="0.1" />\n    </div>\n\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("delay")}</label>\n      <input type="number" id="animDelay"\n        class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        value="0" step="0.1" />\n    </div>\n\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("easing")}</label>\n      <select id="animEase"\n        class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">\n        <option value="ease">${t("ease")}</option>\n        <option value="ease-in">${t("ease-in")}</option>\n        <option value="ease-out">${t("ease-out")}</option>\n        <option value="ease-in-out">${t("ease-in-out")}</option>\n        <option value="linear">${t("linear")}</option>\n      </select>\n    </div>\n\n    <div>\n      <label class="text-sm text-gray-700 dark:text-gray-300">${t("repeat")}</label>\n      <select id="animRepeat"\n        class="w-full p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">\n        <option value="infinite">${t("infinite")}</option>\n        <option value="1">1x</option>\n        <option value="2">2x</option>\n        <option value="3">3x</option>\n      </select>\n    </div>\n  </div>\n\n  <button id="animGenBtn"\n    class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-1 rounded">${t("generate")}</button>\n  <button id="animCopyBtn"\n    class="bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded ml-2">${t("copyCss")}</button>\n\n  <div id="animPreview"\n    class="mt-4 bg-gray-100 dark:bg-gray-800 border border-gray-300 dark:border-gray-600 p-10 flex items-center justify-center rounded">\n    <div id="animBox"\n      class="w-32 h-20 bg-blue-500 text-white font-bold flex items-center justify-center rounded">\n      ${t("previewLabel")}\n    </div>\n  </div>\n\n  <pre id="animCSS"\n    class="mt-2 text-green-600 dark:text-green-400 bg-white dark:bg-gray-900 border border-gray-300 dark:border-gray-700 p-3 rounded whitespace-pre-wrap break-words text-sm"\n    placeholder="${t("placeholder")}"></pre>\n  `},init(){document.getElementById("animGenBtn").addEventListener("click",(()=>{const e=document.getElementById("animType").value,t=document.getElementById("animDuration").value,n=document.getElementById("animDelay").value,r=document.getElementById("animEase").value,a=document.getElementById("animRepeat").value,o=`anim_${e}`,d=(e=>({fade:"0% { opacity: 0; } 100% { opacity: 1; }",scale:"0% { transform: scale(1); } 100% { transform: scale(1.2); }",rotate:"0% { transform: rotate(0); } 100% { transform: rotate(360deg); }","slide-left":"0% { transform: translateX(-100%); } 100% { transform: translateX(0); }","slide-right":"0% { transform: translateX(100%); } 100% { transform: translateX(0); }","slide-up":"0% { transform: translateY(100%); } 100% { transform: translateY(0); }","slide-down":"0% { transform: translateY(-100%); } 100% { transform: translateY(0); }",bounce:"0%, 100% { transform: translateY(0); } 50% { transform: translateY(-30%); }",shake:"0%, 100% { transform: translateX(0); } 25% { transform: translateX(-5px); } 75% { transform: translateX(5px); }",flip:"0% { transform: rotateY(0); } 100% { transform: rotateY(180deg); }","flip-x":"0% { transform: rotateX(0); } 100% { transform: rotateX(180deg); }","blur-in":"0% { filter: blur(8px); opacity: 0; } 100% { filter: blur(0); opacity: 1; }","opacity-pulse":"0%, 100% { opacity: 1; } 50% { opacity: 0.4; }","zoom-in":"0% { transform: scale(0.5); opacity: 0; } 100% { transform: scale(1); opacity: 1; }","zoom-out":"0% { transform: scale(1.2); opacity: 1; } 100% { transform: scale(0.6); opacity: 0; }",float:"0%, 100% { transform: translateY(0); } 50% { transform: translateY(-10px); }",wave:"0%, 100% { transform: rotate(0deg); } 50% { transform: rotate(10deg); }",pulse:"0%, 100% { transform: scale(1); } 50% { transform: scale(1.1); }"}[e]||""))(e),l=`\n@keyframes ${o} {\n  ${d}\n}\n\n.element {\n  animation: ${o} ${t}s ${r} ${n}s ${a};\n}`.trim(),i=document.getElementById("animBox"),s=document.getElementById("animCSS");i.style.animation="none",i.offsetWidth,i.style.animation=`${o} ${t}s ${r} ${n}s ${a}`,i.style.transformOrigin="center";const c=document.getElementById("__anim_style_block");c&&c.remove();const g=document.createElement("style");g.id="__anim_style_block",g.innerHTML=`@keyframes ${o} { ${d} }`,document.head.appendChild(g),s.innerText=l})),document.getElementById("animCopyBtn").addEventListener("click",(()=>{const t=document.getElementById("animCSS").innerText;t&&navigator.clipboard.writeText(t).then((()=>{const t=e,n=document.getElementById("animCopyBtn"),r=n.innerText;n.innerText=t("copied"),setTimeout((()=>n.innerText=r),1500)}))}))}},ne=Object.freeze(Object.defineProperty({__proto__:null,default:te},Symbol.toStringTag,{value:"Module"})),re={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n    <div id="btnContainer">\n      <div class="grid grid-cols-2 gap-2 mb-3">\n        <div><label>${e("bg")}</label><input type="color" id="btnBg" class="w-full h-10 rounded" value="#4f46e5" /></div>\n        <div><label>${e("text")}</label><input type="color" id="btnText" class="w-full h-10 rounded" value="#ffffff" /></div>\n        <div><label>${e("paddingY")}</label><input type="number" id="btnPy" value="10" class="input" /></div>\n        <div><label>${e("paddingX")}</label><input type="number" id="btnPx" value="20" class="input" /></div>\n        <div><label>${e("radius")}</label><input type="number" id="btnRadius" value="8" class="input" /></div>\n        <div><label>${e("shadowColor")}</label><input type="color" id="btnShadowColor" value="#000000" class="w-full h-10 rounded" /></div>\n        <div><label>${e("shadowOpacity")}</label><input type="range" id="btnShadowAlpha" min="0" max="1" step="0.01" value="0.2" class="w-full" /><span id="btnShadowAlphaValue" class="text-center block">0.20</span></div>\n        <div><label>${e("offsetX")}</label><input type="number" id="btnShadowX" value="0" class="input" /></div>\n        <div><label>${e("offsetY")}</label><input type="number" id="btnShadowY" value="2" class="input" /></div>\n        <div><label>${e("blur")}</label><input type="number" id="btnShadowBlur" value="6" class="input" /></div>\n        <div><label>${e("spread")}</label><input type="number" id="btnShadowSpread" value="0" class="input" /></div>\n        <div class="col-span-2"><label>${e("hover")}</label><input type="color" id="btnHover" class="w-full h-10 rounded" value="#4338ca" /></div>\n      </div>\n\n      <button id="btnCopy" class="bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded">${e("copy")}</button>\n\n      <div class="mt-4 bg-gray-100 dark:bg-gray-800 border p-6 rounded text-center">\n        <button id="btnPreview" class="btn-preview font-bold">${e("preview")}</button>\n      </div>\n\n      <pre id="btnCSS" class="mt-2 text-green-700 dark:text-green-400 bg-white border dark:bg-gray-900 p-3 rounded whitespace-pre-wrap text-sm"></pre>\n    </div>\n    `},init(){const e=e=>document.getElementById(e),t=e("btnPreview"),n=e("btnCSS"),r=e("btnCopy"),a=e("btnShadowAlphaValue"),o=()=>{const r=e("btnBg").value,o=e("btnText").value,d=e("btnPy").value,l=e("btnPx").value,i=e("btnRadius").value,s=e("btnHover").value,c=e("btnShadowColor").value,g=parseFloat(e("btnShadowAlpha").value),u=`${e("btnShadowX").value}px ${e("btnShadowY").value}px ${e("btnShadowBlur").value}px ${e("btnShadowSpread").value}px ${`rgba(${(e=>{const t=e.replace("#",""),n=parseInt(t,16);return`${n>>16&255}, ${n>>8&255}, ${255&n}`})(c)}, ${g})`}`;a.innerText=g.toFixed(2);const p=`\n#btnContainer .btn-preview {\n  background: ${r};\n  color: ${o};\n  padding: ${d}px ${l}px;\n  border: none;\n  border-radius: ${i}px;\n  box-shadow: ${u};\n  cursor: pointer;\n  font-weight: bold;\n  transition: background 0.3s ease;\n}\n#btnContainer .btn-preview:hover {\n  background: ${s};\n}`.trim();Object.assign(t.style,{background:r,color:o,padding:`${d}px ${l}px`,borderRadius:`${i}px`,boxShadow:u}),t.onmouseover=()=>t.style.background=s,t.onmouseout=()=>t.style.background=r,n.innerText=p};["btnBg","btnText","btnPy","btnPx","btnRadius","btnShadowColor","btnShadowAlpha","btnShadowX","btnShadowY","btnShadowBlur","btnShadowSpread","btnHover"].forEach((t=>e(t).addEventListener("input",o))),r.addEventListener("click",(()=>{navigator.clipboard.writeText(n.innerText).then((()=>{var e,t;const n=r.innerText;r.innerText=(null==(t=null==(e=this.i18n)?void 0:e.labels)?void 0:t.copied)??"Copiado!",setTimeout((()=>r.innerText=n),1500)}))})),o()}},ae=Object.freeze(Object.defineProperty({__proto__:null,default:re},Symbol.toStringTag,{value:"Module"})),oe={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n    <div class="grid grid-cols-3 gap-2 mb-3">\n      <div>\n        <label class="text-sm">${e("min")}</label>\n        <input type="text" id="clampMin" class="input" value="1rem" />\n      </div>\n      <div>\n        <label class="text-sm">${e("ideal")}</label>\n        <input type="text" id="clampIdeal" class="input" value="2vw" />\n      </div>\n      <div>\n        <label class="text-sm">${e("max")}</label>\n        <input type="text" id="clampMax" class="input" value="2.5rem" />\n      </div>\n    </div>\n\n    <label class="text-sm mb-1">${e("property")}</label>\n    <select id="clampProperty" class="input mb-3">\n      <option value="font-size">font-size</option>\n      <option value="padding">padding</option>\n      <option value="margin">margin</option>\n      <option value="gap">gap</option>\n      <option value="height">height</option>\n      <option value="width">width</option>\n    </select>\n\n    <button id="clampGenBtn" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-1 rounded">${e("generate")}</button>\n    <button id="clampCopyBtn" class="bg-green-600 hover:bg-green-700 text-white px-4 py-1 rounded ml-2">${e("copy")}</button>\n\n    <div id="clampPreview" class="mt-4 border p-10 flex items-center justify-center rounded text-center">\n      <div id="clampBox" class="text-black dark:text-white font-bold">${e("preview")}</div>\n    </div>\n\n    <pre id="clampCSS" class="mt-2 text-green-700 dark:text-green-400 bg-white border dark:bg-gray-900 p-3 rounded whitespace-pre-wrap text-sm"></pre>\n    `},init(){const e=e=>document.getElementById(e),t=e("clampGenBtn"),n=e("clampCopyBtn");t.addEventListener("click",(()=>{const t=e("clampMin").value.trim(),n=e("clampIdeal").value.trim(),r=e("clampMax").value.trim(),a=e("clampProperty").value,o=`${a}: clamp(${t}, ${n}, ${r});`,d=e("clampBox"),l=e("clampCSS");["fontSize","padding","margin","gap","height","width"].forEach((e=>{d.style[e]=""}));const i=a.replace(/-([a-z])/g,((e,t)=>t.toUpperCase()));d.style[i]=`clamp(${t}, ${n}, ${r})`,l.innerText=o})),n.addEventListener("click",(()=>{const t=e("clampCSS").innerText;t&&navigator.clipboard.writeText(t).then((()=>{var e,t;const r=n.innerText;n.innerText=(null==(t=null==(e=this.i18n)?void 0:e.labels)?void 0:t.copied)??"Copiado!",setTimeout((()=>n.innerText=r),1500)}))}))}},de=Object.freeze(Object.defineProperty({__proto__:null,default:oe},Symbol.toStringTag,{value:"Module"})),le={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-4">\n      ${[{id:"blur",min:0,max:20,step:1,unit:"px",val:0},{id:"brightness",min:.1,max:2,step:.1,unit:"",val:1},{id:"contrast",min:.1,max:2,step:.1,unit:"",val:1},{id:"grayscale",min:0,max:100,step:1,unit:"%",val:0},{id:"hue",min:0,max:360,step:1,unit:"deg",val:0},{id:"invert",min:0,max:100,step:1,unit:"%",val:0},{id:"sepia",min:0,max:100,step:1,unit:"%",val:0},{id:"saturate",min:0,max:200,step:1,unit:"%",val:100}].map((t=>`\n        <div>\n          <label class="text-sm block">${e(t.id)}</label>\n          <input type="range" id="f_${t.id}" min="${t.min}" max="${t.max}" step="${t.step}" value="${t.val}" class="w-full" />\n          <span id="v_${t.id}" class="text-sm block text-center">${t.val}${t.unit}</span>\n        </div>\n      `)).join("")}\n    </div>\n\n    <div class="flex gap-2 mb-3">\n      <button id="filterCopy" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white">${e("copy")}</button>\n      <button id="filterRefresh" class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white">${e("refresh")}</button>\n      <label class="text-sm flex items-center gap-2">\n        <input type="file" id="filterUpload" accept="image/*" class="hidden" />\n        <span class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-3 py-1 rounded cursor-pointer">${e("upload")}</span>\n      </label>\n    </div>\n\n    <div class="grid grid-cols-2 gap-4 items-center mb-4">\n      <div class="h-56 overflow-hidden border rounded relative bg-white dark:bg-gray-800">\n        <img id="filterImage" src="" class="w-full h-full object-cover" />\n      </div>\n      <div class="bg-gray-100 dark:bg-white h-56 flex items-center justify-center rounded border">\n        <p id="filterText" class="text-black font-bold text-3xl">${e("previewText")}</p>\n      </div>\n    </div>\n\n    <pre id="filterCSS" class="text-green-600 dark:text-green-400 bg-white border dark:bg-gray-900 p-3 rounded whitespace-pre-wrap break-words text-sm"></pre>\n    `},init(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e},t=[{id:"blur",unit:"px"},{id:"brightness",unit:""},{id:"contrast",unit:""},{id:"grayscale",unit:"%"},{id:"hue",unit:"deg"},{id:"invert",unit:"%"},{id:"sepia",unit:"%"},{id:"saturate",unit:"%"}],n=document.getElementById("filterImage"),r=document.getElementById("filterText"),a=document.getElementById("filterCSS"),o=document.getElementById("filterCopy"),d=document.getElementById("filterRefresh"),l=document.getElementById("filterUpload"),i=()=>{const e=t.map((e=>{const t=document.getElementById("f_"+e.id).value;return document.getElementById("v_"+e.id).innerText=`${t}${e.unit}`,`${"hue"===e.id?"hue-rotate":e.id}(${t}${e.unit})`})).join(" ");n.style.filter=e,r.style.filter=e,a.innerText=`filter: ${e};`},s=()=>{fetch("https://api.unsplash.com/photos/random?query=landscape&orientation=landscape",{headers:{Authorization:"Client-ID qqX-zCJJ74tXG59lFDJOO9vk_FPejIPyfSD0R33_CXc"}}).then((e=>e.json())).then((e=>{var t;(null==(t=e.urls)?void 0:t.regular)&&(n.src=e.urls.regular)}))};t.forEach((e=>{document.getElementById("f_"+e.id).addEventListener("input",i)})),l.addEventListener("change",(e=>{const t=e.target.files[0];if(!t)return;const r=new FileReader;r.onload=e=>n.src=e.target.result,r.readAsDataURL(t)})),d.addEventListener("click",s),o.addEventListener("click",(()=>{const t=a.innerText;navigator.clipboard.writeText(t).then((()=>{const t=o.innerText;o.innerText=e("copied"),setTimeout((()=>o.innerText=t),1500)}))})),i(),s()}},ie=Object.freeze(Object.defineProperty({__proto__:null,default:le},Symbol.toStringTag,{value:"Module"})),se={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-3">\n      <div>\n        <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${e("color1")}</label>\n        <input type="color" id="gradColor1" value="#ff6b6b" class="w-full h-10 rounded" />\n      </div>\n      <div>\n        <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${e("color2")}</label>\n        <input type="color" id="gradColor2" value="#6b6bff" class="w-full h-10 rounded" />\n      </div>\n    </div>\n\n    <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${e("direction")}</label>\n    <select id="gradDirection" class="w-full p-2 bg-gray-200 dark:bg-gray-700 text-black dark:text-white rounded mb-3">\n      <option value="to right">⬅️ → Direita</option>\n      <option value="to left">➡️ ← Esquerda</option>\n      <option value="to bottom">⬆️ ↓ Baixo</option>\n      <option value="to top">⬇️ ↑ Cima</option>\n      <option value="135deg">↘️ Diagonal (135°)</option>\n      <option value="45deg">↗️ Diagonal (45°)</option>\n    </select>\n\n    <button id="gradGenBtn" class="bg-purple-600 hover:bg-purple-700 px-4 py-1 rounded text-white">${e("generate")}</button>\n    <button id="gradCopyBtn" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded ml-2 text-white">${e("copy")}</button>\n\n    <div id="gradPreview" class="mt-4 h-32 rounded shadow-inner border border-gray-300 dark:border-gray-600"></div>\n    <pre id="gradCSS" class="mt-2 text-green-700 dark:text-green-400 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 p-3 rounded whitespace-pre-wrap break-words text-sm"></pre>\n    `},init(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e},t=document.getElementById("gradGenBtn"),n=document.getElementById("gradCopyBtn");t.addEventListener("click",(()=>{const e=document.getElementById("gradColor1").value,t=document.getElementById("gradColor2").value,n=`background: linear-gradient(${document.getElementById("gradDirection").value}, ${e}, ${t});`;document.getElementById("gradPreview").style.background=n,document.getElementById("gradCSS").innerText=n})),n.addEventListener("click",(()=>{const t=document.getElementById("gradCSS").innerText;t&&navigator.clipboard.writeText(t).then((()=>{n.innerText=e("copied"),setTimeout((()=>n.innerText=e("copy")),1500)}))}))}},ce=Object.freeze(Object.defineProperty({__proto__:null,default:se},Symbol.toStringTag,{value:"Module"})),ge={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-3">\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${e("horizontal")}</label>\n        <input type="number" id="shadowX" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" value="4" />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${e("vertical")}</label>\n        <input type="number" id="shadowY" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" value="4" />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${e("blur")}</label>\n        <input type="number" id="shadowBlur" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" value="10" />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${e("spread")}</label>\n        <input type="number" id="shadowSpread" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" value="0" />\n      </div>\n      <div class="col-span-2">\n        <label class="text-sm text-gray-800 dark:text-gray-300">${e("color")}</label>\n        <input type="color" id="shadowColor" class="w-full h-10 rounded border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-700" value="#000000" />\n      </div>\n    </div>\n\n    <button id="shadowGenBtn" class="bg-purple-600 hover:bg-purple-700 px-4 py-1 rounded text-white dark:bg-purple-500 dark:hover:bg-purple-600">${e("generate")}</button>\n    <button id="shadowCopyBtn" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded ml-2 text-white dark:bg-green-500 dark:hover:bg-green-600">${e("copy")}</button>\n\n    <div id="shadowPreview" class="mt-4 bg-white border border-gray-300 dark:bg-black dark:border-gray-700 p-10 flex items-center justify-center rounded">\n      <div id="shadowBox" class="w-32 h-20 bg-gray-200 text-black font-bold flex items-center justify-center rounded">\n        Preview\n      </div>\n    </div>\n\n    <pre id="shadowCSS" class="mt-2 text-green-600 bg-white border border-gray-300 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"></pre>\n    `},init(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e},t=document.getElementById("shadowGenBtn"),n=document.getElementById("shadowCopyBtn");t.addEventListener("click",(()=>{const e=`box-shadow: ${document.getElementById("shadowX").value}px ${document.getElementById("shadowY").value}px ${document.getElementById("shadowBlur").value}px ${document.getElementById("shadowSpread").value}px ${document.getElementById("shadowColor").value};`;document.getElementById("shadowBox").style.boxShadow=e,document.getElementById("shadowCSS").innerText=e})),n.addEventListener("click",(()=>{const t=document.getElementById("shadowCSS").innerText;t&&navigator.clipboard.writeText(t).then((()=>{n.innerText=e("copied"),setTimeout((()=>n.innerText=e("copy")),1500)}))}))}},ue=Object.freeze(Object.defineProperty({__proto__:null,default:ge},Symbol.toStringTag,{value:"Module"})),pe={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n  <datalist id="cssVarSuggestions">\n    <option value="--color-primary"></option>\n    <option value="--color-secondary"></option>\n    <option value="--text-color"></option>\n    <option value="--bg-color"></option>\n    <option value="--font-size"></option>\n    <option value="--font-weight"></option>\n    <option value="--line-height"></option>\n    <option value="--spacing-xs"></option>\n    <option value="--spacing-sm"></option>\n    <option value="--spacing-md"></option>\n    <option value="--spacing-lg"></option>\n    <option value="--spacing-xl"></option>\n    <option value="--padding"></option>\n    <option value="--margin"></option>\n    <option value="--radius"></option>\n    <option value="--border-width"></option>\n    <option value="--z-index"></option>\n    <option value="--transition-speed"></option>\n    <option value="--shadow"></option>\n    <option value="--opacity"></option>\n    <option value="--container-width"></option>\n    <option value="--gap"></option>\n  </datalist>\n\n  <div id="varList" class="space-y-2 mb-4">\n    <div class="grid grid-cols-2 gap-2">\n      <input type="text" list="cssVarSuggestions" class="var-name p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="--bg-color" />\n      <input type="text" class="var-value p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="#1e3a8a" />\n    </div>\n    <div class="grid grid-cols-2 gap-2">\n      <input type="text" list="cssVarSuggestions" class="var-name p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="--text-color" />\n      <input type="text" class="var-value p-1 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" value="#ffffff" />\n    </div>\n  </div>\n\n  <button id="addVar" class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded mb-3">${e("addVar")}</button>\n  <button id="copyVars" class="bg-green-600 hover:bg-green-700 text-white px-3 py-1 rounded mb-3 ml-2">${e("copy")}</button>\n\n  <div class="mt-4 p-6 border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-800" id="varsPreviewWrapper">\n    <div id="varsPreview" class="p-6 rounded font-bold" style="background: var(--bg-color); color: var(--text-color);">\n      ${e("previewText")}\n    </div>\n  </div>\n\n  <pre id="varsCSS" class="mt-4 text-green-700 dark:text-green-400 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 p-3 rounded whitespace-pre-wrap break-words text-sm"></pre>\n  `},init(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e},t=document.getElementById("varList"),n=document.getElementById("varsPreview"),r=document.getElementById("varsCSS"),a=document.getElementById("copyVars"),o=document.getElementById("addVar"),d=()=>{const e={};t.querySelectorAll(".var-name").forEach(((n,r)=>{const a=n.value.trim(),o=t.querySelectorAll(".var-value")[r].value.trim();a&&o&&(e[a]=o)}));const a=`:root {\n${Object.entries(e).map((([e,t])=>`  ${e}: ${t};`)).join("\n")}\n}`;r.innerText=a,Object.entries(e).forEach((([e,t])=>{n.style.setProperty(e,t)}))};t.addEventListener("input",d),o.addEventListener("click",(()=>{const e=document.createElement("div");e.className="grid grid-cols-2 gap-2",e.innerHTML='\n        <input type="text" list="cssVarSuggestions" class="var-name p-1 bg-gray-700 text-white rounded" placeholder="--nome" />\n        <input type="text" class="var-value p-1 bg-gray-700 text-white rounded" placeholder="valor" />\n      ',t.appendChild(e)})),a.addEventListener("click",(()=>{const t=r.innerText;navigator.clipboard.writeText(t).then((()=>{a.innerText=e("copied"),setTimeout((()=>a.innerText=e("copy")),1500)}))})),d()}},be=Object.freeze(Object.defineProperty({__proto__:null,default:pe},Symbol.toStringTag,{value:"Module"})),ye={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n  <div class="grid grid-cols-2 gap-2 mb-2">\n    <input\n      id="csvRows"\n      type="number"\n      min="1"\n      value="10"\n      class="p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      placeholder="Linhas"\n    />\n    <input\n      id="csvCols"\n      type="number"\n      min="1"\n      value="5"\n      class="p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      placeholder="Colunas"\n    />\n  </div>\n\n  <button\n    id="csvGenBtn"\n    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n  >\n    ${e("generate")}\n  </button>\n\n  <div class="mt-2 flex gap-2">\n    <textarea\n      id="csvOutput"\n      class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-green-400"\n      rows="6"\n      readonly\n      placeholder="${e("placeholder")}"\n    ></textarea>\n    <button\n      id="csvCopyBtn"\n      class="px-2 py-1 rounded self-start bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n\n  <button\n    id="csvDownloadBtn"\n    class="mt-2 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded"\n  >\n    ${e("download")}\n  </button>\n  `},init(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e},t=document.getElementById("csvRows"),n=document.getElementById("csvCols"),r=document.getElementById("csvOutput"),a=document.getElementById("csvGenBtn"),o=document.getElementById("csvCopyBtn"),d=document.getElementById("csvDownloadBtn");a.addEventListener("click",(()=>{const e=parseInt(t.value,10),a=parseInt(n.value,10),o=[];o.push(Array.from({length:a},((e,t)=>`col_${t+1}`)).join(","));for(let t=0;t<e;t++){const e=Array.from({length:a},(()=>Math.random().toString(36).substring(2,8)));o.push(e.join(","))}r.value=o.join("\n")})),o.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{o.innerText,o.innerText=e("copied"),setTimeout((()=>{o.innerText=e("copy")}),1500)}))})),d.addEventListener("click",(()=>{const e=new Blob([r.value],{type:"text/csv;charset=utf-8;"}),t=URL.createObjectURL(e),n=document.createElement("a");n.href=t,n.download="dados.csv",document.body.appendChild(n),n.click(),document.body.removeChild(n)}))}},me=Object.freeze(Object.defineProperty({__proto__:null,default:ye},Symbol.toStringTag,{value:"Module"})),ve={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e};return`\n      <textarea\n        id="csvJsonInput"\n        class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        rows="6"\n        placeholder="${e("placeholderInput")}"\n      ></textarea>\n\n      <div class="flex gap-2">\n        <button\n          id="csvToJsonBtn"\n          class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded"\n        >\n          ${e("csvToJson")}\n        </button>\n        <button\n          id="jsonToCsvBtn"\n          class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded"\n        >\n          ${e("jsonToCsv")}\n        </button>\n      </div>\n\n      <div class="mt-2 flex gap-2">\n        <textarea\n          id="csvJsonOutput"\n          rows="6"\n          readonly\n          class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 text-sm"\n          placeholder="${e("placeholderOutput")}"\n        ></textarea>\n        <button\n          id="csvJsonCopyBtn"\n          class="px-2 py-1 rounded self-start bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    `},init(){const e=e=>{var t,n;return(null==(n=null==(t=this.i18n)?void 0:t.labels)?void 0:n[e])??e},t=document.getElementById("csvJsonInput"),n=document.getElementById("csvJsonOutput"),r=document.getElementById("csvJsonCopyBtn"),a=document.getElementById("csvToJsonBtn"),o=document.getElementById("jsonToCsvBtn");a.addEventListener("click",(()=>{try{const e=t.value.trim(),[r,...a]=e.split("\n"),o=r.split(","),d=a.map((e=>{const t=e.split(",");return o.reduce(((e,n,r)=>{var a;return e[n.trim()]=(null==(a=t[r])?void 0:a.trim())??"",e}),{})}));n.value=JSON.stringify(d,null,2)}catch(r){n.value=`${e("error")}: ${r.message}`}})),o.addEventListener("click",(()=>{try{const e=JSON.parse(t.value.trim());if(!Array.isArray(e))throw new Error("JSON deve ser um array de objetos.");const r=Object.keys(e[0]),a=[r.join(","),...e.map((e=>r.map((t=>JSON.stringify(e[t]??""))).join(",")))].join("\n");n.value=a}catch(r){n.value=`${e("error")}: ${r.message}`}})),r.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{r.innerText,r.innerText=e("copied"),setTimeout((()=>{r.innerText=e("copy")}),1500)}))}))}},he=Object.freeze(Object.defineProperty({__proto__:null,default:ve},Symbol.toStringTag,{value:"Module"})),xe={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea\n        id="csvToJsonInput"\n        class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        rows="6"\n        placeholder="${e("placeholderInput")}"\n      ></textarea>\n\n      <button\n        id="csvToJsonBtn"\n        class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-1 rounded"\n      >\n        ${e("convertBtn")}\n      </button>\n\n      <div class="mt-2 flex gap-2">\n        <textarea\n          id="csvToJsonOutput"\n          rows="6"\n          readonly\n          class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 text-sm"\n          placeholder="${e("placeholderOutput")}"\n        ></textarea>\n        <button\n          id="csvToJsonCopyBtn"\n          class="px-2 py-1 rounded self-start bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n        >\n          ${e("copyBtn")}\n        </button>\n      </div>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},t=document.getElementById("csvToJsonInput"),n=document.getElementById("csvToJsonOutput"),r=document.getElementById("csvToJsonBtn"),a=document.getElementById("csvToJsonCopyBtn");r.addEventListener("click",(()=>{const r=t.value.trim();try{const[e,...t]=r.split("\n");if(!e)throw new Error("CSV sem cabeçalho.");const a=e.split(",").map((e=>e.trim())),o=t.map((e=>{const t=e.split(",").map((e=>e.trim()));return Object.fromEntries(a.map(((e,n)=>[e,t[n]??""])))}));n.value=JSON.stringify(o,null,2)}catch(a){n.value=`${e("errorPrefix")}: ${a.message}`}})),a.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{a.innerText,a.innerText=e("copiedMsg"),setTimeout((()=>{a.innerText=e("copyBtn")}),1500)}))}))}},we=Object.freeze(Object.defineProperty({__proto__:null,default:xe},Symbol.toStringTag,{value:"Module"})),ke={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.0.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded bg-gray-100 dark:bg-gray-800 text-sm space-y-4 text-gray-900 dark:text-white">\n      <label class="block mb-1">${t("label.curl")}</label>\n      <textarea\n        id="curlInput"\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white h-32 font-mono"\n        placeholder="${t("placeholder.curl")}"\n      ></textarea>\n\n      <div class="flex items-center justify-between gap-2">\n        <label class="block">${t("label.language")}</label>\n        <select\n          id="langSelect"\n          class="flex-1 p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        >\n          <option value="ansible">Ansible</option>\n          <option value="csharp">C#</option>\n          <option value="dart">Dart</option>\n          <option value="elixir">Elixir</option>\n          <option value="go">Go</option>\n          <option value="java">Java</option>\n          <option value="javascript">JavaScript (fetch)</option>\n          <option value="kotlin">Kotlin</option>\n          <option value="lua">Lua</option>\n          <option value="node">Node.js</option>\n          <option value="objc">Objective-C</option>\n          <option value="perl">Perl</option>\n          <option value="php">PHP</option>\n          <option value="python">Python (requests)</option>\n          <option value="r">R</option>\n          <option value="ruby">Ruby</option>\n          <option value="rust">Rust</option>\n          <option value="swift">Swift</option>\n          <option value="wget">Wget</option>\n        </select>\n      </div>\n\n      <button\n        id="btnConvertCurl"\n        class="w-full px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded"\n      >\n        ${t("button.convert")}\n      </button>\n\n      <div>\n        <label class="block mb-1">${t("label.output")}</label>\n        <textarea\n          id="curlCodeOutput"\n          readonly\n          class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 h-40 font-mono"\n        ></textarea>\n        <button\n          id="btnCopyCurlCode"\n          class="mt-2 px-3 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("curlInput"),r=document.getElementById("curlCodeOutput"),a=document.getElementById("btnConvertCurl"),o=document.getElementById("btnCopyCurlCode"),d=document.getElementById("langSelect");a.onclick=async()=>{const e=n.value.trim(),a=d.value;if(e.startsWith("curl "))try{const n=await fetch("https://services.devutils.tools/curl2code",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({curl:e,lang:a})}),o=await n.json();r.value=o.code||`// ${t("error.empty")}`}catch(o){r.value=`// ${t("error.failed")}: ${o.message}`}else r.value=`// ${t("error.invalid")}`},o.onclick=()=>{navigator.clipboard.writeText(r.value).then((()=>{const t=o.innerText;o.innerText=e("copied"),setTimeout((()=>o.innerText=t),1500)}))}}},fe=Object.freeze(Object.defineProperty({__proto__:null,default:ke},Symbol.toStringTag,{value:"Module"})),Be={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <input\n      id="cfInput"\n      type="text"\n      placeholder="${t("placeholder.input")}"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    />\n\n    <select\n      id="cfCurrency"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n    >\n      <option value="BRL">${t("option.brl")}</option>\n      <option value="USD">${t("option.usd")}</option>\n      <option value="EUR">${t("option.eur")}</option>\n    </select>\n\n    <button\n      id="cfFormatBtn"\n      class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n    >\n      ${t("button.format")}\n    </button>\n\n    <div class="mt-2 flex gap-2">\n      <input\n        id="cfOutput"\n        type="text"\n        value=""\n        readonly\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-gray-100 dark:bg-gray-900 text-green-700 dark:text-green-400"\n        placeholder="${t("placeholder.output")}"\n      />\n      <button\n        id="cfCopyBtn"\n        class="px-2 py-1 rounded self-start bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("cfInput"),r=document.getElementById("cfCurrency"),a=document.getElementById("cfFormatBtn"),o=document.getElementById("cfOutput"),d=document.getElementById("cfCopyBtn");a.addEventListener("click",(()=>{const e=parseFloat(n.value.replace(",","."));if(isNaN(e))return void(o.value=`❌ ${t("error.invalidValue")}`);const a=r.value,d=e.toLocaleString({BRL:"pt-BR",USD:"en-US",EUR:"de-DE"}[a],{style:"currency",currency:a});o.value=`${d}`})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(o.value).then((()=>{const t=d.innerText;d.innerText=e("copied"),setTimeout((()=>{d.innerText=t}),1500)}))}))}},_e=Object.freeze(Object.defineProperty({__proto__:null,default:Be},Symbol.toStringTag,{value:"Module"})),Ie={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="dataUrlInput"\n    class="w-full p-2 mb-2 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-green-400 border border-gray-300 dark:border-gray-600"\n    rows="6"\n    placeholder="${t("placeholder")}"\n  ></textarea>\n\n  <div class="flex flex-wrap gap-2 mb-4">\n    <button id="viewImageBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">\n      ${t("view")}\n    </button>\n    <button id="copyDataUrlBtn" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-3 py-1 rounded text-gray-900 dark:text-white hidden">\n      ${e("copy")}\n    </button>\n    <button id="downloadDataUrlBtn" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-3 py-1 rounded text-gray-900 dark:text-white hidden">\n      ${t("download")}\n    </button>\n    <button id="clearDataUrlBtn" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-3 py-1 rounded text-gray-900 dark:text-white">\n      ${t("clear")}\n    </button>\n  </div>\n\n  <div id="dataUrlInfo" class="text-sm text-gray-600 dark:text-gray-400 mb-2 hidden"></div>\n\n  <div\n    id="dataUrlPreview"\n    class="hidden flex justify-center items-center min-h-[200px] rounded overflow-hidden border border-gray-300 dark:border-gray-700 bg-gray-100 dark:bg-gray-900"\n  ></div>\n`},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("dataUrlInput"),r=document.getElementById("dataUrlPreview"),a=document.getElementById("dataUrlInfo"),o=document.getElementById("viewImageBtn"),d=document.getElementById("copyDataUrlBtn"),l=document.getElementById("downloadDataUrlBtn"),i=document.getElementById("clearDataUrlBtn");o.addEventListener("click",(()=>{var e;const o=n.value.trim();if(!o.startsWith("data:image/")||!o.includes("base64,"))return r.classList.remove("hidden"),r.innerHTML=`<span class="text-sm text-red-400">${t("invalidFormat")}</span>`,a.classList.add("hidden"),d.classList.add("hidden"),void l.classList.add("hidden");const i=(null==(e=o.match(/^data:(image\/[a-zA-Z]+);base64,/i))?void 0:e[1])||"unknown",s=o.split("base64,")[1]||"",c=(Math.round(3*s.length/4)/1024).toFixed(1),g=new Image;g.src=o,g.alt="Preview",g.className="max-w-full max-h-[300px]",g.onload=()=>{r.innerHTML="",r.appendChild(g),r.classList.remove("hidden"),a.innerHTML=`\n          <div class="mb-1 text-green-400">✔️ ${t("imageDetected")}</div>\n          • ${t("type")}: <code>${i}</code><br />\n          • ${t("size")}: ${c} KB<br />\n          • ${t("dimensions")}: ${g.naturalWidth} x ${g.naturalHeight} px\n        `,a.classList.remove("hidden"),d.classList.remove("hidden"),l.classList.remove("hidden")}})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{const t=d.textContent;d.textContent=e("copied"),setTimeout((()=>d.textContent=t),1500)}))})),l.addEventListener("click",(()=>{var e;const t=((null==(e=n.value.match(/^data:(image\/[a-zA-Z]+);base64,/i))?void 0:e[1])||"image/png").split("/")[1],r=document.createElement("a");r.href=n.value,r.download=`imagem.${t}`,r.click()})),i.addEventListener("click",(()=>{n.value="",r.innerHTML="",r.classList.add("hidden"),a.innerHTML="",a.classList.add("hidden"),d.classList.add("hidden"),l.classList.add("hidden")}))}},Ee=Object.freeze(Object.defineProperty({__proto__:null,default:Ie},Symbol.toStringTag,{value:"Module"})),$e={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${t("startDate")}:</label>\n  <input\n    id="startDate"\n    type="datetime-local"\n    class="w-full p-2 rounded mb-3 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n  />\n\n  <label class="block text-sm text-gray-800 dark:text-gray-300 mb-1">${t("endDate")}:</label>\n  <input\n    id="endDate"\n    type="datetime-local"\n    class="w-full p-2 rounded mb-3 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n  />\n\n  <button\n    id="diffBtn"\n    class="bg-pink-600 hover:bg-pink-700 px-4 py-1 rounded text-white"\n  >\n    ${t("calculate")}\n  </button>\n\n  <div class="mt-4 flex gap-2">\n    <textarea\n      id="diffResult"\n      rows="4"\n      readonly\n      class="p-2 rounded w-full whitespace-pre-wrap text-sm bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-700"\n      placeholder="${t("resultPlaceholder")}"\n    ></textarea>\n\n    <button\n      id="diffCopyBtn"\n      class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-2 py-1 rounded self-start text-gray-800 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("startDate"),r=document.getElementById("endDate"),a=document.getElementById("diffBtn"),o=document.getElementById("diffResult"),d=document.getElementById("diffCopyBtn");a.addEventListener("click",(()=>{const e=new Date(n.value),a=new Date(r.value);if(isNaN(e)||isNaN(a))return void(o.value=t("invalidDates"));const d=Math.abs(a-e),l=Math.floor(d/6e4),i=Math.floor(d/36e5),s=Math.floor(d/864e5);o.value=`${t("difference")}:\n- ${s} ${t("days")}\n- ${i} ${t("hours")}\n- ${l} ${t("minutes")}`})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(o.value).then((()=>{const t=d.innerText;d.innerText=e("copied"),setTimeout((()=>{d.innerText=t}),1500)}))}))}},Te=Object.freeze(Object.defineProperty({__proto__:null,default:$e},Symbol.toStringTag,{value:"Module"})),Le={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <input\n    id="dateBase"\n    type="date"\n    class="w-full p-2 rounded mb-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n  />\n\n  <div class="grid grid-cols-2 gap-2 mb-2">\n    <input\n      id="dateDelta"\n      type="number"\n      class="p-2 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n      placeholder="${t("value")}"\n    />\n    <select\n      id="dateUnit"\n      class="p-2 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n    >\n      <option value="days">${t("days")}</option>\n      <option value="months">${t("months")}</option>\n      <option value="years">${t("years")}</option>\n    </select>\n\n    <select\n      id="dateDirection"\n      class="p-2 rounded col-span-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n    >\n      <option value="add">${t("add")}</option>\n      <option value="sub">${t("subtract")}</option>\n    </select>\n  </div>\n\n  <button\n    id="dateDeltaBtn"\n    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded w-full"\n  >\n    ${t("calculate")}\n  </button>\n\n  <div class="mt-2 flex gap-2">\n    <input\n      id="dateDeltaOut"\n      type="text"\n      value=""\n      readonly\n      class="p-2 text-center w-full rounded bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-700"\n      placeholder="${t("resultPlaceholder")}"\n    />\n    <button\n      id="dateDeltaCopyBtn"\n      class="px-2 py-1 rounded self-start bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("dateBase"),r=document.getElementById("dateDelta"),a=document.getElementById("dateUnit"),o=document.getElementById("dateDirection"),d=document.getElementById("dateDeltaBtn"),l=document.getElementById("dateDeltaOut"),i=document.getElementById("dateDeltaCopyBtn");d.addEventListener("click",(()=>{const e=n.value,d=parseInt(r.value,10),i=a.value,s=o.value;if(!e||isNaN(d))return void(l.value=t("invalidInput"));const[c,g,u]=e.split("-"),p=new Date(c,g-1,u),b="add"===s?d:-d;switch(i){case"days":p.setDate(p.getDate()+b);break;case"months":p.setMonth(p.getMonth()+b);break;case"years":p.setFullYear(p.getFullYear()+b)}const y=p.toLocaleDateString("pt-BR",{weekday:"long",year:"numeric",month:"long",day:"numeric"});l.value=y})),i.addEventListener("click",(()=>{navigator.clipboard.writeText(l.value).then((()=>{const t=i.innerText;i.innerText=e("copied"),setTimeout((()=>{i.innerText=t}),1500)}))}))}},je=Object.freeze(Object.defineProperty({__proto__:null,default:Le},Symbol.toStringTag,{value:"Module"})),Ce={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <label class="block text-sm text-gray-900 dark:text-gray-300 mb-1">\n    ${t("label")}\n  </label>\n\n  <input\n    id="dtInput"\n    type="datetime-local"\n    class="w-full p-2 mb-2 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n  />\n\n  <button\n    id="dtToTsBtn"\n    class="w-full px-4 py-2 rounded bg-blue-600 hover:bg-blue-700 text-white"\n  >\n    ${t("convert")}\n  </button>\n\n  <div class="mt-2 flex gap-2">\n    <input\n      id="tsOutput"\n      type="text"\n      readonly\n      class="p-2 text-sm w-full rounded bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-700"\n      placeholder="${t("placeholder")}"\n    />\n    <button\n      id="tsCopyBtn"\n      class="px-2 py-1 rounded self-start bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("dtInput"),r=document.getElementById("dtToTsBtn"),a=document.getElementById("tsOutput"),o=document.getElementById("tsCopyBtn");r.addEventListener("click",(()=>{const e=n.value;if(!e)return void(a.value=t("error"));const r=Math.floor(new Date(e).getTime()/1e3);a.value=`${r}`})),o.addEventListener("click",(()=>{navigator.clipboard.writeText(a.value).then((()=>{const t=o.innerText;o.innerText=e("copied"),setTimeout((()=>{o.innerText=t}),1500)}))}))}},Se=Object.freeze(Object.defineProperty({__proto__:null,default:Ce},Symbol.toStringTag,{value:"Module"})),Oe={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <textarea\n    id="decimalTextInput"\n    class="w-full p-2 rounded mb-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600"\n    rows="4"\n    placeholder="${t("placeholder")}"\n  ></textarea>\n\n  <div class="flex gap-2">\n    <button\n      id="textToDecimalBtn"\n      class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white"\n    >\n      ${t("textToDecimal")}\n    </button>\n    <button\n      id="decimalToTextBtn"\n      class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white"\n    >\n      ${t("decimalToText")}\n    </button>\n  </div>\n\n  <div class="mt-2 flex gap-2">\n    <textarea\n      id="decimalTextOutput"\n      rows="3"\n      readonly\n      class="p-2 rounded w-full text-sm bg-gray-100 dark:bg-gray-900 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-700"\n      placeholder="${t("outputPlaceholder")}"\n    ></textarea>\n    <button\n      id="decimalCopyBtn"\n      class="px-2 py-1 rounded self-start bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n    >\n      ${e("copy")}\n    </button>\n  </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("decimalTextInput"),r=document.getElementById("decimalTextOutput"),a=document.getElementById("decimalCopyBtn");document.getElementById("textToDecimalBtn").addEventListener("click",(()=>{const e=[...n.value].map((e=>e.charCodeAt(0))).join(" ");r.value=e})),document.getElementById("decimalToTextBtn").addEventListener("click",(()=>{const e=n.value.trim();try{const t=e.split(/\s+/).map((e=>String.fromCharCode(parseInt(e,10)))).join("");r.value=t}catch(a){r.value=t("decodeError")}})),a.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{const t=a.innerText;a.innerText=e("copied"),setTimeout((()=>{a.innerText=t}),1500)}))}))}},Me=Object.freeze(Object.defineProperty({__proto__:null,default:Oe},Symbol.toStringTag,{value:"Module"})),De={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="p-4 rounded bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white text-sm space-y-4">\n    <div class="flex items-center gap-4">\n      <label><input type="radio" name="modoBarra" value="escape" checked> ${t("escape")}</label>\n      <label><input type="radio" name="modoBarra" value="unescape"> ${t("unescape")}</label>\n    </div>\n\n    <div>\n      <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("inputLabel")}</label>\n      <textarea\n        id="entradaBarra"\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white h-32 font-mono"\n      ></textarea>\n    </div>\n\n    <button\n      id="btnConverterBarra"\n      class="px-4 py-2 text-white bg-blue-600 hover:bg-blue-700 rounded"\n    >\n      ${t("convert")}\n    </button>\n\n    <div>\n      <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("outputLabel")}</label>\n      <textarea\n        id="saidaBarra"\n        readonly\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 h-32 font-mono"\n      ></textarea>\n      <button\n        id="btnCopiarBarra"\n        class="mt-2 px-3 py-1 text-white bg-gray-700 hover:bg-gray-600 rounded"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n  </div>\n    `},init(){const t=document.getElementById("entradaBarra"),n=document.getElementById("saidaBarra"),r=document.getElementById("btnConverterBarra"),a=document.getElementById("btnCopiarBarra");r.onclick=()=>{const e=document.querySelector('input[name="modoBarra"]:checked').value;n.value="escape"===e?t.value.replace(/\\/g,"\\\\").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t").replace(/"/g,'\\"').replace(/'/g,"\\'"):(e=>e.replace(/\\\\/g,"\\").replace(/\\n/g,"\n").replace(/\\r/g,"\r").replace(/\\t/g,"\t").replace(/\\"/g,'"').replace(/\\'/g,"'"))(t.value)},a.onclick=()=>{navigator.clipboard.writeText(n.value).then((()=>{const t=a.textContent;a.textContent=e("copied"),setTimeout((()=>a.textContent=t),1500)}))}}},Ae=Object.freeze(Object.defineProperty({__proto__:null,default:De},Symbol.toStringTag,{value:"Module"})),Pe={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="p-4 rounded bg-gray-100 dark:bg-gray-800 text-sm space-y-4">\n    <div>\n      <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("inputLabel")}</label>\n      <textarea id="inputEmailTexto" rows="6" class="w-full p-2 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600" placeholder="${t("placeholder")}"></textarea>\n    </div>\n\n    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">\n      <div>\n        <label class="block mb-1 text-gray-700 dark:text-gray-300">${t("sortLabel")}</label>\n        <select id="ordenarPor" class="w-full p-2 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600">\n          <option value="alfabeto">${t("sortAlphabetical")}</option>\n          <option value="dominio">${t("sortDomain")}</option>\n        </select>\n      </div>\n    </div>\n\n    <button id="btnExtrair" class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white">\n      ${t("extract")}\n    </button>\n\n    <div>\n      <label class="block mb-1 mt-4 text-gray-700 dark:text-gray-300">${t("outputLabel")}</label>\n      <textarea id="resultadoEmails" rows="6" readonly class="w-full p-2 rounded bg-white dark:bg-gray-700 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-600"></textarea>\n      <div class="flex gap-2 mt-2">\n        <button id="btnCopiarEmails" class="bg-gray-300 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 px-3 py-1 rounded text-sm text-gray-900 dark:text-white">${e("copy")}</button>\n        <button id="btnDownloadEmails" class="bg-gray-300 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 px-3 py-1 rounded text-sm text-gray-900 dark:text-white">${t("download")}</button>\n      </div>\n    </div>\n  </div>\n    `},init(){const t=document.getElementById("inputEmailTexto"),n=document.getElementById("resultadoEmails");document.getElementById("btnExtrair").addEventListener("click",(()=>{const e=t.value,r=document.getElementById("ordenarPor").value,a=[...e.matchAll(/[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}/gi)].map((e=>e[0]));let o=[...[...new Set(a)]];"alfabeto"===r?o.sort(((e,t)=>e.localeCompare(t))):"dominio"===r&&o.sort(((e,t)=>{const n=e.split("@")[1],r=t.split("@")[1];return n.localeCompare(r)||e.localeCompare(t)})),n.value=o.join("\n")})),document.getElementById("btnCopiarEmails").addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{const t=document.getElementById("btnCopiarEmails"),n=t.textContent;t.textContent=e("copied"),setTimeout((()=>t.textContent=n),1500)}))})),document.getElementById("btnDownloadEmails").addEventListener("click",(()=>{const e=new Blob([n.value],{type:"text/plain"}),t=document.createElement("a");t.href=URL.createObjectURL(e),t.download="emails-extraidos.txt",t.click()}))}},Ue=Object.freeze(Object.defineProperty({__proto__:null,default:Pe},Symbol.toStringTag,{value:"Module"})),ze={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="grid grid-cols-2 gap-2 mb-2">\n    <input \n      id="fakeUserQtd" \n      type="number" \n      min="1" \n      value="5" \n      class="p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded" \n      placeholder="${t("quantity")}" \n    />\n    <input \n      id="fakeUserDomain" \n      type="text" \n      value="exemplo.com" \n      class="p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded" \n      placeholder="${t("emailDomain")}" \n    />\n  </div>\n  <button id="fakeUserGenBtn" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white">${t("generate")}</button>\n  <textarea \n    id="fakeUserOutput" \n    class="w-full p-2 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-600 rounded mt-2" \n    rows="6" \n    readonly \n    placeholder="${t("outputPlaceholder")}"\n  ></textarea>\n  <button id="fakeUserCopyBtn" class="mt-2 bg-green-600 hover:bg-green-700 px-4 py-2 rounded text-white">${e("copy")}</button>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=["João","Maria","Carlos","Ana","Lucas","Paula","Pedro","Larissa","Gabriel","Juliana"],r=["Silva","Souza","Pereira","Costa","Santos","Oliveira","Ferreira","Almeida"],a=document.getElementById("fakeUserGenBtn"),o=document.getElementById("fakeUserQtd"),d=document.getElementById("fakeUserDomain"),l=document.getElementById("fakeUserOutput"),i=document.getElementById("fakeUserCopyBtn");a.addEventListener("click",(()=>{const e=parseInt(o.value,10),a=d.value.trim();if(!a||e<=0)return void(l.value=t("errorInput"));const i=Array.from({length:e},(()=>{const e=`${n[Math.floor(Math.random()*n.length)]} ${r[Math.floor(Math.random()*r.length)]}`,t=`(${Math.floor(11+89*Math.random())}) ${Math.floor(9e4+1e4*Math.random())}-${Math.floor(1e3+9e3*Math.random())}`,o=((e,t)=>`${e.toLowerCase().replace(/[^a-z]/g,"")}${Math.floor(1e3*Math.random())}@${t}`)(e,a);return`${e} | ${o} | ${t}`}));l.value=i.join("\n")})),i.addEventListener("click",(()=>{navigator.clipboard.writeText(l.value).then((()=>{i.innerText,i.innerText=e("copied"),setTimeout((()=>{i.innerText=e("copy")}),1500)}))}))}},Re=Object.freeze(Object.defineProperty({__proto__:null,default:ze},Symbol.toStringTag,{value:"Module"})),He={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="mb-2">\n    <label class="text-sm text-gray-700 dark:text-gray-300 mb-1 block">${t("amountLabel")}</label>\n    <input id="fakeCount" type="number" min="1" max="100" value="5" class="w-full p-2 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600" />\n  </div>\n\n  <div id="fakeFields" class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-2 text-sm text-gray-900 dark:text-white mb-4"></div>\n\n  <div class="flex gap-2 mb-4">\n    <button id="generateFakeJsonBtn" class="bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-white">\n      ${t("generate")}\n    </button>\n    <button id="downloadFakeJsonBtn" class="bg-gray-300 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 px-3 py-1 rounded text-gray-900 dark:text-white hidden">\n      ${e("download")}\n    </button>\n    <button id="copyFakeJsonBtn" class="bg-gray-300 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 px-3 py-1 rounded text-gray-900 dark:text-white hidden">\n      ${e("copy")}\n    </button>\n  </div>\n\n  <textarea id="fakeJsonOutput" class="w-full p-2 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-600 rounded" rows="10" readonly></textarea>\n    `},async init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("fakeFields"),r=document.getElementById("fakeCount"),a=document.getElementById("fakeJsonOutput"),o=document.getElementById("downloadFakeJsonBtn"),d=document.getElementById("copyFakeJsonBtn");let l={};try{const e=await fetch("/data/fakepessoa.json");l=await e.json()}catch(i){return void(a.value=t("loadError"))}Object.keys(l).forEach((e=>{const t=document.createElement("label");t.className="flex items-center gap-2",t.innerHTML=`\n        <input type="checkbox" value="${e}" checked class="form-checkbox text-green-500 bg-gray-700" />\n        <span>${e.replace(/_/g," ")}</span>\n      `,n.appendChild(t)})),document.getElementById("generateFakeJsonBtn").addEventListener("click",(()=>{const e=Array.from(n.querySelectorAll("input:checked")).map((e=>e.value)),t=parseInt(r.value,10),i=[];for(let n=0;n<t;n++){const t={};e.forEach((e=>{const n=l[e];t[e]=n[Math.floor(Math.random()*n.length)]})),i.push(t)}a.value=JSON.stringify(i,null,2),o.classList.remove("hidden"),d.classList.remove("hidden")})),o.addEventListener("click",(()=>{const e=new Blob([a.value],{type:"application/json"}),t=URL.createObjectURL(e),n=document.createElement("a");n.href=t,n.download="dados-ficticios.json",n.click(),URL.revokeObjectURL(t)})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(a.value).then((()=>{d.textContent,d.textContent=e("copied"),setTimeout((()=>{d.textContent=e("copy")}),1500)}))}))}},Je=Object.freeze(Object.defineProperty({__proto__:null,default:He},Symbol.toStringTag,{value:"Module"})),Ne={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">\n      <div>\n        <label class="block text-sm mb-1 text-gray-700 dark:text-gray-300">${e("originalFile")}</label>\n        <input\n          type="file"\n          id="fileOriginalV3"\n          class="w-full rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white p-1"\n        />\n      </div>\n      <div>\n        <label class="block text-sm mb-1 text-gray-700 dark:text-gray-300">${e("modifiedFile")}</label>\n        <input\n          type="file"\n          id="fileModifiedV3"\n          class="w-full rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 text-gray-900 dark:text-white p-1"\n        />\n      </div>\n    </div>\n\n    <button\n      id="diffCompareBtnV3"\n      class="mt-4 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n    >\n      ${e("compare")}\n    </button>\n\n    <div\n      id="diffHtmlOutputV3"\n      class="mt-4 text-sm overflow-auto bg-gray-100 dark:bg-gray-900 border border-gray-300 dark:border-gray-700 rounded p-4"\n    ></div>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},t=document.createElement("style");t.innerHTML="\n      .d2h-wrapper {\n        background-color: #1f2937 !important;\n        color: #e5e7eb !important;\n      }\n      .d2h-code-line,\n      .d2h-code-linenumber {\n        background-color: #1f2937 !important;\n        color: #e5e7eb !important;\n      }\n      .d2h-del {\n        background-color: #7f1d1d !important;\n        color: #fee2e2 !important;\n      }\n      .d2h-ins {\n        background-color: #065f46 !important;\n        color: #d1fae5 !important;\n      }\n      .d2h-file-header {\n        background-color: #111827 !important;\n        color: #cbd5e1 !important;\n      }\n      .d2h-tag {\n        background-color: #374151 !important;\n        color: #93c5fd !important;\n        border: none;\n      }\n      .d2h-diff-txt {\n        color: #d1d5db !important;\n      }\n      .d2h-code-line ins,\n      .d2h-code-side-line ins {\n        background-color: #064e3b !important;\n        color: #d1fae5 !important;\n        text-decoration: none !important;\n        padding: 1px 4px;\n        border-radius: 4px;\n      }\n      .d2h-code-line del,\n      .d2h-code-side-line del {\n        background-color: #7f1d1d !important;\n        color: #fee2e2 !important;\n        text-decoration: none !important;\n        padding: 1px 4px;\n        border-radius: 4px;\n      }\n    ",document.head.appendChild(t);const n=e=>{const t=e=>new Promise((t=>{const n=document.createElement("script");n.src=e,n.onload=t,document.head.appendChild(n)}));window.Diff2Html&&window.Diff?e():((e=>{const t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.appendChild(t)})("./vendor/diff2html.min.css"),Promise.all([t("./vendor/diff.min.js"),t("./vendor/diff2html.min.js")]).then(e))},r=e=>new Promise((t=>{const n=new FileReader;n.onload=()=>t(n.result),n.readAsText(e.files[0])}));document.getElementById("diffCompareBtnV3").addEventListener("click",(async()=>{const t=document.getElementById("fileOriginalV3"),a=document.getElementById("fileModifiedV3");if(!t.files.length||!a.files.length)return void alert(e("alertMissingFiles"));const[o,d]=await Promise.all([r(t),r(a)]);n((()=>{const e=window.Diff.createTwoFilesPatch(t.files[0].name,a.files[0].name,o,d,"",""),n=window.Diff2Html.html(e,{drawFileList:!1,matching:"lines",outputFormat:"side-by-side"});document.getElementById("diffHtmlOutputV3").innerHTML=n}))}))}},qe=Object.freeze(Object.defineProperty({__proto__:null,default:Ne},Symbol.toStringTag,{value:"Module"})),Fe={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-3">\n      <div>\n        <label class="text-sm text-gray-700 dark:text-gray-300">${t("layoutType")}</label>\n        <select\n          id="layoutMode"\n          class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        >\n          <option value="flex">Flexbox</option>\n          <option value="grid">Grid</option>\n        </select>\n      </div>\n      <div>\n        <label class="text-sm text-gray-700 dark:text-gray-300">${t("gap")}</label>\n        <input\n          type="number"\n          id="layoutGap"\n          value="10"\n          class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        />\n      </div>\n      <div>\n        <label class="text-sm text-gray-700 dark:text-gray-300">${t("justify")}</label>\n        <select\n          id="layoutJustify"\n          class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        >\n          <option>start</option>\n          <option>center</option>\n          <option>end</option>\n          <option>space-between</option>\n          <option>space-around</option>\n          <option>space-evenly</option>\n        </select>\n      </div>\n      <div>\n        <label class="text-sm text-gray-700 dark:text-gray-300">${t("align")}</label>\n        <select\n          id="layoutAlign"\n          class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        >\n          <option>start</option>\n          <option>center</option>\n          <option>end</option>\n          <option>stretch</option>\n        </select>\n      </div>\n    </div>\n\n    <button\n      id="layoutCopyBtn"\n      class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n    >\n      ${e("copy")}\n    </button>\n\n    <div\n      class="mt-4 bg-white border border-gray-300 p-6 rounded dark:bg-gray-800 dark:border-gray-700"\n      id="layoutPreview"\n    >\n      <div class="layout-box bg-blue-500 text-white p-2 rounded">1</div>\n      <div class="layout-box bg-purple-500 text-white p-2 rounded">2</div>\n      <div class="layout-box bg-green-500 text-white p-2 rounded">3</div>\n    </div>\n\n    <pre\n      id="layoutCSS"\n      class="mt-2 bg-white border border-gray-300 text-green-600 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("layoutMode"),n=document.getElementById("layoutGap"),r=document.getElementById("layoutJustify"),a=document.getElementById("layoutAlign"),o=document.getElementById("layoutPreview"),d=document.getElementById("layoutCSS"),l=document.getElementById("layoutCopyBtn"),i=()=>{const e=t.value,l=n.value+"px",i=r.value,s=a.value;o.style.display=e,o.style.gap=l,"flex"===e?(o.style.flexDirection="row",o.style.justifyContent=i,o.style.alignItems=s,o.style.gridTemplateColumns=""):(o.style.justifyContent="",o.style.alignItems="",o.style.gridTemplateColumns="repeat(3, 1fr)");const c="flex"===e?`display: flex;\ngap: ${l};\njustify-content: ${i};\nalign-items: ${s};`:`display: grid;\ngap: ${l};\ngrid-template-columns: repeat(3, 1fr);`;d.innerText=c};[t,n,r,a].forEach((e=>e.addEventListener("input",i))),l.addEventListener("click",(()=>{const t=d.innerText;t&&navigator.clipboard.writeText(t).then((()=>{l.innerText=e("copied"),setTimeout((()=>l.innerText=e("copy")),1500)}))})),i()}},Ve=Object.freeze(Object.defineProperty({__proto__:null,default:Fe},Symbol.toStringTag,{value:"Module"})),Ge={},Ye=function(e,t,n){if(!t||0===t.length)return e();const r=document.getElementsByTagName("link");return Promise.all(t.map((e=>{if((e=function(e){return"/devutils/"+e}(e))in Ge)return;Ge[e]=!0;const t=e.endsWith(".css"),a=t?'[rel="stylesheet"]':"";if(!!n)for(let n=r.length-1;n>=0;n--){const a=r[n];if(a.href===e&&(!t||"stylesheet"===a.rel))return}else if(document.querySelector(`link[href="${e}"]${a}`))return;const o=document.createElement("link");return o.rel=t?"stylesheet":"modulepreload",t||(o.as="script",o.crossOrigin=""),o.href=e,document.head.appendChild(o),t?new Promise(((t,n)=>{o.addEventListener("load",t),o.addEventListener("error",(()=>n(new Error(`Unable to preload CSS for ${e}`))))})):void 0}))).then((()=>e())).catch((e=>{const t=new Event("vite:preloadError",{cancelable:!0});if(t.payload=e,window.dispatchEvent(t),!t.defaultPrevented)throw e}))};let Xe=(e,t=21)=>(n=t)=>{let r="",a=0|n;for(;a--;)r+=e[Math.random()*e.length|0];return r};const We={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n  <div class="p-4 rounded text-sm space-y-6 text-gray-800 dark:bg-gray-800 dark:text-white">\n    <div class="space-y-2">\n      <label class="block">${t("type")}</label>\n      <select id="tipoID" class="bg-white border border-gray-300 p-2 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n        <option value="uuid">UUID v4</option>\n        <option value="ulid">ULID</option>\n        <option value="nanoid">Nano ID</option>\n      </select>\n    </div>\n\n    <div class="space-y-2">\n      <label class="block">${t("amount")}</label>\n      <input id="quantidade" type="number" min="1" max="1000" value="10"\n        class="bg-white border border-gray-300 p-2 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-white" />\n    </div>\n\n    <label class="inline-flex items-center space-x-2">\n      <input type="checkbox" id="minusculas" class="form-checkbox text-blue-600 dark:text-blue-400" />\n      <span>${t("lowercase")}</span>\n    </label>\n\n    <div>\n      <button id="btnGerarIDs" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white">${t("generate")}</button>\n    </div>\n\n    <textarea id="saidaIDs" rows="10"\n      class="w-full mt-4 p-2 rounded bg-white border border-gray-300 text-green-600 font-mono dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"\n    ></textarea>\n\n    <button id="btnCopiarIDs"\n      class="mt-2 bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white">${e("copy")}</button>\n\n    \x3c!-- Analisar ID --\x3e\n    <div class="mt-8 border-t border-gray-300 dark:border-gray-600 pt-4">\n      <h3 class="text-base font-bold mb-2">${t("analyzeTitle")}</h3>\n      <input id="entradaID" type="text" placeholder="${t("placeholder")}"\n        class="w-full p-2 bg-white border border-gray-300 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white mb-2" />\n      <button id="btnAnalisarID"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white mb-2">${t("analyze")}</button>\n      <div id="resultadoID"\n        class="text-xs whitespace-pre font-mono bg-white text-gray-700 dark:bg-gray-900 dark:text-gray-300 p-2 rounded hidden"\n      ></div>\n    </div>\n  </div>\n  `},async init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("btnGerarIDs"),r=document.getElementById("btnCopiarIDs"),a=document.getElementById("saidaIDs");n.onclick=async()=>{const e=document.getElementById("tipoID").value,t=parseInt(document.getElementById("quantidade").value),n=document.getElementById("minusculas").checked,r=[];for(let a=0;a<t;a++){let t="";if("uuid"===e)t=crypto.randomUUID();else if("ulid"===e){const{ulid:e}=await Ye((()=>import("./ulid-esm-19b1cd67.js")),[]);t=e()}else if("nanoid"===e){t=Xe("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",21)()}r.push(n?t.toLowerCase():t)}a.value=r.join("\n")},r.onclick=()=>{navigator.clipboard.writeText(a.value).then((()=>{r.textContent=e("copied"),setTimeout((()=>{r.textContent=e("copy")}),1500)}))};const o=document.getElementById("btnAnalisarID"),d=document.getElementById("entradaID"),l=document.getElementById("resultadoID");o.onclick=()=>{const e=d.value.trim();l.classList.remove("text-red-400","text-green-400");const n=/^[0-9a-f]{8}-[0-9a-f]{4}-([1-5])[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e),r=/^[0-7][0-9A-HJKMNP-TV-Z]{25}$/.test(e),a=/^[\w-]{21,}$/i.test(e);if(n){const n=e.charAt(14),r=e.charAt(19).toLowerCase();let a=["8","9","a","b"].includes(r)?t("uuidRfc"):t("unknown");l.innerText=`🧬 ${t("uuidValid")}\n${t("version")}: ${n}\n${t("variant")}: ${a}`,l.classList.add("text-green-400")}else r?(l.innerText=`🔤 ${t("ulidValid")}`,l.classList.add("text-green-400")):a?(l.innerText=`🆔 ${t("nanoidValid")}`,l.classList.add("text-green-400")):(l.innerText=t("invalidID"),l.classList.add("text-red-400"));l.classList.remove("hidden")}}},Qe=Object.freeze(Object.defineProperty({__proto__:null,default:We},Symbol.toStringTag,{value:"Module"})),Ke={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"2.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="space-y-4 text-gray-900 dark:text-white">\n      <div class="flex items-center gap-4 flex-wrap">\n        <label class="text-sm flex items-center gap-2">\n          <input type="checkbox" id="cnpjFormatCheck" class="accent-blue-600" checked />\n          <span>${t("format")}</span>\n        </label>\n\n        <label class="text-sm flex items-center gap-2">\n          <input type="checkbox" id="cnpjMultiCheck" class="accent-blue-600" />\n          <span>${t("generateMultiple")}</span>\n        </label>\n\n        <label class="text-sm flex items-center gap-2">\n          <input type="checkbox" id="cnpjFilialCheck" class="accent-blue-600" />\n          <span>${t("simulateBranch")}</span>\n        </label>\n\n        <input\n          type="number"\n          id="cnpjQtd"\n          class="bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 p-1 rounded w-20 text-sm"\n          value="10"\n          min="1"\n          max="1000"\n        />\n      </div>\n\n      <button\n        id="cnpjBtn"\n        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n      >\n        ${t("generate")}\n      </button>\n\n      <div class="mt-2">\n        <textarea\n          id="cnpjOutput"\n          readonly\n          class="p-2 w-full h-40 resize-none font-mono rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-green-400 border border-gray-300 dark:border-gray-600"\n          placeholder="${t("placeholder")}"\n        ></textarea>\n      </div>\n\n      <button\n        id="cnpjCopyBtn"\n        class="bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white hover:bg-gray-300 dark:hover:bg-gray-600 px-3 py-1 rounded"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t=e=>document.getElementById(e),n=t("cnpjOutput"),r=e=>e.replace(/^(\d{2})(\d{3})(\d{3})(\d{4})(\d{2})$/,"$1.$2.$3/$4-$5"),a=e=>{const t=(e,t)=>e.split("").reduce(((e,n,r)=>e+parseInt(n)*t[r]),0),n=t(e,[5,4,3,2,9,8,7,6,5,4,3,2]),r=n%11<2?0:11-n%11,a=t(e+r,[6,5,4,3,2,9,8,7,6,5,4,3,2]);return e+r+(a%11<2?0:11-a%11)},o=()=>Array.from({length:8},(()=>Math.floor(10*Math.random()))).join(""),d=()=>{const e=t("cnpjFormatCheck").checked,d=t("cnpjMultiCheck").checked,l=t("cnpjFilialCheck").checked,i=parseInt(t("cnpjQtd").value)||1;let s=[];if(d)if(l){const t=o();for(let n=1;n<=i;n++){const o=n.toString().padStart(4,"0"),d=a(t+o);s.push(e?r(d):d)}}else for(let t=0;t<i;t++){const t=a(o()+"0001");s.push(e?r(t):t)}else{const t=a(o()+"0001");s.push(e?r(t):t)}n.value=s.join("\n")};t("cnpjBtn").addEventListener("click",d),t("cnpjMultiCheck").addEventListener("change",d),t("cnpjFilialCheck").addEventListener("change",d),t("cnpjFormatCheck").addEventListener("change",d),t("cnpjQtd").addEventListener("input",d),t("cnpjCopyBtn").addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{t("cnpjCopyBtn").innerText,t("cnpjCopyBtn").innerText=e("copied"),setTimeout((()=>t("cnpjCopyBtn").innerText=e("copy")),1500)}))})),d()}},Ze=Object.freeze(Object.defineProperty({__proto__:null,default:Ke},Symbol.toStringTag,{value:"Module"})),et={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"en")},render(){return`\n      <div class="space-y-4 text-gray-900 dark:text-white">\n        <div class="flex items-center gap-4 flex-wrap">\n          <label class="text-sm flex items-center gap-2">\n            <input type="checkbox" id="formatCheck" class="accent-blue-600" checked />\n            <span>${e("mask")}</span>\n          </label>\n          <label class="text-sm flex items-center gap-2">\n            <input type="checkbox" id="multiCheck" class="accent-blue-600" />\n            <span>${e("multi")}</span>\n          </label>\n          <input\n            type="number"\n            id="cpfQtd"\n            class="bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 p-1 rounded w-20 text-sm"\n            value="10" min="1" max="1000"\n          />\n        </div>\n        <button\n          id="cpfBtn"\n          class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n        >\n          ${e("generate")}\n        </button>\n        <div class="mt-2">\n          <textarea\n            id="cpfOutput"\n            readonly\n            class="p-2 w-full h-40 resize-none font-mono rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-green-400 border border-gray-300 dark:border-gray-600"\n            placeholder="${(e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e})("placeholder")}"\n          ></textarea>\n        </div>\n        <button\n          id="cpfCopyBtn"\n          class="bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-white hover:bg-gray-300 dark:hover:bg-gray-600 px-3 py-1 rounded"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    `},init(){const t=e=>document.getElementById(e),n=t("cpfOutput"),r=(e,t)=>{const n=10*e.split("").reduce(((e,n,r)=>e+parseInt(n)*(t-r)),0)%11;return 10===n?0:n},a=()=>{let e="";for(let n=0;n<9;n++)e+=Math.floor(9*Math.random()).toString();const t=r(e,10);return e+t+r(e+t,11)},o=e=>e.replace(/^(\d{3})(\d{3})(\d{3})(\d{2})$/,"$1.$2.$3-$4"),d=()=>{const e=t("formatCheck").checked,r=t("multiCheck").checked,d=parseInt(t("cpfQtd").value)||1,l=[];for(let t=0;t<(r?d:1);t++){const t=a();l.push(e?o(t):t)}n.value=l.join("\n")};t("cpfBtn").addEventListener("click",d),t("multiCheck").addEventListener("change",d),t("formatCheck").addEventListener("change",d),t("cpfQtd").addEventListener("input",d),t("cpfCopyBtn").addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{const n=t("cpfCopyBtn").innerText;t("cpfCopyBtn").innerText=e("copied"),setTimeout((()=>t("cpfCopyBtn").innerText=n),1500)}))})),d()}},tt=Object.freeze(Object.defineProperty({__proto__:null,default:et},Symbol.toStringTag,{value:"Module"})),nt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){return`\n      <button\n        id="rgGenBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded mb-2 text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${(e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e})("generate")}\n      </button>\n\n      <div class="relative">\n        <input\n          id="rgOutput"\n          type="text"\n          readonly\n          class="w-full p-3 bg-white border border-gray-300 text-green-600 rounded pr-20 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        />\n        <button\n          id="copyRgBtn"\n          class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n        >\n          ${e("copy")}\n        </button>\n        <span\n          id="copiedRgMsg"\n          class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n        >\n          ${e("copied")}\n        </span>\n      </div>\n    `},init(){const e=e=>document.getElementById(e),t=e("rgOutput"),n=e("copyRgBtn"),r=e("copiedRgMsg");e("rgGenBtn").addEventListener("click",(()=>{t.value=(()=>{const e=Array.from({length:8},(()=>Math.floor(10*Math.random())));let t=0;for(let a=0;a<8;a++)t+=e[a]*(9-a);const n=t%11,r=10===n?"X":n;return`${e.join("")}${r}`.replace(/(\d{2})(\d{3})(\d{3})([0-9X])/,"$1.$2.$3-$4")})()})),n.addEventListener("click",(()=>{t.value&&navigator.clipboard.writeText(t.value).then((()=>{n.classList.add("hidden"),r.classList.remove("hidden"),setTimeout((()=>{r.classList.add("hidden"),n.classList.remove("hidden")}),2e3)}))}))}},rt=Object.freeze(Object.defineProperty({__proto__:null,default:nt},Symbol.toStringTag,{value:"Module"})),at={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.3.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="grid grid-cols-2 gap-2 mb-3">\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("backgroundColor")}</label>\n          <input type="color" id="glassColor" class="w-full h-10 rounded" value="#3399ff" />\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("opacity")}</label>\n          <input type="range" id="glassOpacity" min="0" max="1" step="0.01" value="0.25" class="w-full" />\n          <span id="glassOpacityValue" class="text-sm text-gray-600 dark:text-gray-400 block text-center">0.25</span>\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("blur")}</label>\n          <input type="number" id="glassBlur" class="w-full p-1 bg-gray-200 dark:bg-gray-700 text-black dark:text-white rounded" value="10" />\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("borderColor")}</label>\n          <input type="color" id="glassBorderColor" class="w-full h-10 rounded" value="#000000" />\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("borderOpacity")}</label>\n          <input type="range" id="glassBorderAlpha" min="0" max="1" step="0.01" value="0.15" class="w-full" />\n          <span id="glassBorderAlphaValue" class="text-sm text-gray-600 dark:text-gray-400 block text-center">0.15</span>\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("previewBackground")}</label>\n          <input type="color" id="previewBg" class="w-full h-10 rounded" value="#ffffff" />\n        </div>\n      </div>\n\n      <button id="glassResetBtn" class="bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500 px-4 py-1 rounded">\n        ${e("reset")}\n      </button>\n      <button id="glassCopyBtn" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded ml-2 text-white">\n        ${e("copy")}\n      </button>\n\n      <div id="glassPreviewWrapper" class="mt-4 border border-gray-300 dark:border-gray-600 p-10 flex items-center justify-center rounded bg-white dark:bg-transparent">\n        <div id="glassBox" class="w-48 h-24 flex items-center justify-center text-white font-bold backdrop-blur-md rounded">\n          Preview\n        </div>\n      </div>\n\n      <pre id="glassCSS" class="mt-2 text-green-700 dark:text-green-400 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 p-3 rounded whitespace-pre-wrap break-words text-sm"></pre>\n    `},init(){const t=document.getElementById("glassResetBtn"),n=document.getElementById("glassCopyBtn"),r=document.getElementById("glassOpacity"),a=document.getElementById("glassOpacityValue"),o=document.getElementById("glassBorderAlpha"),d=document.getElementById("glassBorderAlphaValue"),l=()=>{const e=document.getElementById("glassColor").value,t=parseFloat(r.value),n=document.getElementById("glassBlur").value,a=document.getElementById("glassBorderColor").value,d=parseFloat(o.value),l=document.getElementById("previewBg").value,s=i(e,t),c=i(a,d),g=`\nbackground: ${s};\nbackdrop-filter: blur(${n}px);\n-webkit-backdrop-filter: blur(${n}px);\nborder: 1px solid ${c};\n      `.trim(),u=document.getElementById("glassBox"),p=document.getElementById("glassCSS"),b=document.getElementById("glassPreviewWrapper");u.style.background=s,u.style.backdropFilter=`blur(${n}px)`,u.style.webkitBackdropFilter=`blur(${n}px)`,u.style.border=`1px solid ${c}`,b.style.backgroundColor=l,p.innerText=g};["glassColor","glassOpacity","glassBlur","glassBorderColor","glassBorderAlpha","previewBg"].forEach((e=>{document.getElementById(e).addEventListener("input",l)})),r.addEventListener("input",(()=>{a.innerText=parseFloat(r.value).toFixed(2)})),o.addEventListener("input",(()=>{d.innerText=parseFloat(o.value).toFixed(2)})),t.addEventListener("click",(()=>{document.getElementById("glassColor").value="#3399ff",document.getElementById("glassOpacity").value=.25,a.innerText="0.25",document.getElementById("glassBlur").value=10,document.getElementById("glassBorderColor").value="#000000",document.getElementById("glassBorderAlpha").value=.15,d.innerText="0.15",document.getElementById("previewBg").value="#ffffff",l()})),n.addEventListener("click",(()=>{const t=document.getElementById("glassCSS").innerText;t&&navigator.clipboard.writeText(t).then((()=>{n.innerText=e("copied"),setTimeout((()=>n.innerText=e("copy")),1500)}))}));const i=(e,t=1)=>{const n=e.replace("#",""),r=parseInt(n,16);return`rgba(${r>>16&255}, ${r>>8&255}, ${255&r}, ${t})`};l()}},ot=Object.freeze(Object.defineProperty({__proto__:null,default:at},Symbol.toStringTag,{value:"Module"})),dt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.2.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <input\n        id="gzipUrlInput"\n        type="text"\n        placeholder="${t("placeholder")}"\n        class="w-full p-2 rounded bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white mb-2"\n      />\n      <div class="flex gap-2 mb-4">\n        <button id="checkGzipBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">\n          ${t("check")}\n        </button>\n        <button id="clearGzipBtn" class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white">\n          ${e("clear")}\n        </button>\n      </div>\n      <div\n        id="gzipResult"\n        class="hidden bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 p-3 mt-2 rounded text-sm text-green-700 dark:text-green-400 whitespace-pre-wrap min-h-[100px]"\n      ></div>\n    `},init(){const e=document.getElementById("gzipUrlInput"),t=document.getElementById("gzipResult"),n=document.getElementById("checkGzipBtn"),r=document.getElementById("clearGzipBtn"),a=e=>{var t;return(null==(t=dt.i18n)?void 0:t[e])??e};n.addEventListener("click",(async()=>{const n=e.value.trim();if(!n)return t.textContent=a("error.invalidUrl"),void t.classList.remove("hidden");t.textContent=a("checking"),t.classList.remove("hidden");try{const e=await fetch(`https://devutils.tools/api/gzip-check.json?url=${encodeURIComponent(n)}`),r=await e.json();if(r.error)return void(t.textContent=`${a("error.prefix")}: ${r.error}`);const o=r.gzip?a("gzip.enabled"):a("gzip.disabled");t.textContent=`${o}\n\n${a("httpHeaders")}:\n${r.headers.join("\n")}`}catch(r){t.textContent=`${a("error.checkFailed")}: ${r.message}`}})),r.addEventListener("click",(()=>{t.textContent="",t.classList.add("hidden"),e.value=""}))}},lt=Object.freeze(Object.defineProperty({__proto__:null,default:dt},Symbol.toStringTag,{value:"Module"})),it={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="hashInput"\n      class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded mb-3"\n      rows="4"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <label class="flex items-center text-sm text-gray-700 dark:text-gray-300 mb-3 gap-2 select-none">\n      <input type="checkbox" id="hashUppercase" class="accent-blue-500" />\n      ${t("uppercase")}\n    </label>\n\n    <div id="hashOutputs" class="space-y-2"></div>\n\n    <button id="hashClearBtn" class="mt-4 bg-gray-300 dark:bg-gray-700 hover:bg-gray-400 dark:hover:bg-gray-600 px-3 py-1 rounded hidden">\n      ${e("clear")}\n    </button>\n    `},init(){(e=>{if(window.CryptoJS)return e();const t=document.createElement("script");t.src="./vendor/crypto-js.min.js",t.onload=e,document.head.appendChild(t)})((()=>{const t=document.getElementById("hashInput"),n=document.getElementById("hashOutputs"),r=document.getElementById("hashClearBtn"),a=document.getElementById("hashUppercase"),o=[{name:"MD5",fn:e=>CryptoJS.MD5(e).toString()},{name:"SHA1",fn:e=>CryptoJS.SHA1(e).toString()},{name:"SHA224",fn:e=>CryptoJS.SHA224(e).toString()},{name:"SHA256",fn:e=>CryptoJS.SHA256(e).toString()},{name:"SHA512",fn:e=>CryptoJS.SHA512(e).toString()}],d=()=>{const d=t.value.trim(),l=a.checked;n.innerHTML="",d?(o.forEach((t=>{let r=t.fn(d);r=l?r.toUpperCase():r.toLowerCase();const a=document.createElement("div");a.className="flex items-center gap-2";const o=document.createElement("input");o.value=r,o.readOnly=!0,o.className="w-full bg-white dark:bg-gray-900 text-gray-800 dark:text-gray-300 text-sm px-2 py-1 rounded border border-gray-300 dark:border-gray-700";const i=document.createElement("button");i.textContent=t.name,i.className="bg-blue-500 dark:bg-blue-600 hover:bg-blue-600 dark:hover:bg-blue-700 px-3 py-1 rounded text-sm w-[90px] text-white",i.addEventListener("click",(()=>{navigator.clipboard.writeText(r).then((()=>{const t=i.textContent;i.textContent=e("copied"),setTimeout((()=>i.textContent=t),1500)}))})),a.appendChild(o),a.appendChild(i),n.appendChild(a)})),r.classList.remove("hidden")):r.classList.add("hidden")};t.addEventListener("input",d),a.addEventListener("change",d),r.addEventListener("click",(()=>{t.value="",n.innerHTML="",r.classList.add("hidden")}))}))}},st=Object.freeze(Object.defineProperty({__proto__:null,default:it},Symbol.toStringTag,{value:"Module"})),ct={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="hashInput"\n      class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded mb-2"\n      rows="2"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2">\n      <button\n        id="md5Btn"\n        class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white"\n      >\n        MD5\n      </button>\n      <button\n        id="sha256Btn"\n        class="bg-purple-600 hover:bg-purple-700 px-3 py-1 rounded text-white"\n      >\n        SHA256\n      </button>\n    </div>\n\n    <div class="mt-2 flex gap-2">\n      <textarea\n        id="hashOutput"\n        rows="2"\n        readonly\n        class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-green-700 dark:text-green-400 rounded text-sm"\n        placeholder="${t("resultPlaceholder")}"\n      ></textarea>\n      <button\n        id="hashCopyBtn"\n        class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded self-start text-white"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t=e=>document.getElementById(e);t("md5Btn").addEventListener("click",(async()=>{const e=t("hashInput").value;if("function"!=typeof window.md5)try{await(n="./vendor/md5.min.js",new Promise(((e,t)=>{const r=document.createElement("script");r.src=n,r.async=!0,r.onload=e,r.onerror=t,document.head.appendChild(r)})))}catch(r){return void(t("hashOutput").value="Erro ao carregar biblioteca MD5.")}var n;t("hashOutput").value=window.md5(e)})),t("sha256Btn").addEventListener("click",(async()=>{const e=(new TextEncoder).encode(t("hashInput").value),n=await crypto.subtle.digest("SHA-256",e),r=Array.from(new Uint8Array(n)).map((e=>e.toString(16).padStart(2,"0"))).join("");t("hashOutput").value=r})),t("hashCopyBtn").addEventListener("click",(()=>{const n=t("hashOutput");navigator.clipboard.writeText(n.value).then((()=>{const n=t("hashCopyBtn").innerText;t("hashCopyBtn").innerText=e("copied"),setTimeout((()=>{t("hashCopyBtn").innerText=n}),1500)}))}))}},gt=Object.freeze(Object.defineProperty({__proto__:null,default:ct},Symbol.toStringTag,{value:"Module"})),ut={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){return`\n      <select id="helloLangSelect" class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white border border-gray-300 dark:border-gray-600 rounded mb-2">\n        <option value="" disabled selected>${(e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e})("selectPlaceholder")}</option>\n      </select>\n\n      <textarea\n        id="helloOutput"\n        class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-gray-800 dark:text-green-400 rounded mb-2"\n        rows="8"\n        readonly\n      ></textarea>\n\n      <div class="flex justify-end">\n        <button id="helloCopyBtn" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-2 py-1 rounded">\n          ${e("copy")}\n        </button>\n      </div>\n    `},init:async()=>{const t=document.getElementById("helloLangSelect"),n=document.getElementById("helloOutput"),r=document.getElementById("helloCopyBtn");let a={};try{const e=await fetch("/data/helloworld.json");a=await e.json()}catch(o){return void console.error("Erro ao carregar JSON:",o)}for(const e of Object.keys(a).sort()){const n=document.createElement("option");n.value=e,n.textContent=e,t.appendChild(n)}t.addEventListener("change",(()=>{const e=t.value,r=a[e];if(!r)return;n.value="";let o=0;const d=setInterval((()=>{o<r.length?n.value+=r[o++]:clearInterval(d)}),10)})),r.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{const t=r.innerText;r.innerText=e("copied"),setTimeout((()=>r.innerText=t),1500)}))}))}},pt=Object.freeze(Object.defineProperty({__proto__:null,default:ut},Symbol.toStringTag,{value:"Module"})),bt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="hexBase64Input"\n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white border border-gray-300 dark:border-gray-600 rounded mb-2"\n      rows="4"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2">\n      <button\n        id="hexToBase64Btn"\n        class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white" \n      >\n        ${t("hexToBase64")}\n      </button>\n      <button\n        id="base64ToHexBtn"\n        class="bg-purple-600 hover:bg-purple-700 px-3 py-1 rounded text-white"\n      >\n        ${t("base64ToHex")}\n      </button>\n    </div>\n\n    <div class="mt-2 flex gap-2">\n      <textarea\n        id="hexBase64Output"\n        rows="4"\n        readonly\n        class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-gray-800 dark:text-green-400 rounded text-sm"\n        placeholder="${t("outputPlaceholder")}"\n      ></textarea>\n      <button\n        id="hexBase64CopyBtn"\n        class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-2 py-1 rounded self-start text-gray-900 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t=document.getElementById("hexBase64Output");document.getElementById("hexToBase64Btn").addEventListener("click",(()=>{try{const e=document.getElementById("hexBase64Input").value.replace(/\s+/g,"").toLowerCase();if(!/^[0-9a-f]+$/.test(e))throw new Error("Hex inválido");t.value=(e=>{const t=e.match(/.{1,2}/g).map((e=>parseInt(e,16))),n=String.fromCharCode(...t);return btoa(n)})(e)}catch(e){t.value="Erro: "+e.message}})),document.getElementById("base64ToHexBtn").addEventListener("click",(()=>{try{const e=document.getElementById("hexBase64Input").value.trim();t.value=(e=>[...atob(e)].map((e=>e.charCodeAt(0).toString(16).padStart(2,"0"))).join(""))(e)}catch(e){t.value="Erro: "+e.message}})),document.getElementById("hexBase64CopyBtn").addEventListener("click",(()=>{navigator.clipboard.writeText(t.value).then((()=>{const t=document.getElementById("hexBase64CopyBtn"),n=t.innerText;t.innerText=e("copied"),setTimeout((()=>{t.innerText=n}),1500)}))}))}},yt=Object.freeze(Object.defineProperty({__proto__:null,default:bt},Symbol.toStringTag,{value:"Module"})),mt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="hexInput"\n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white border border-gray-300 dark:border-gray-600 rounded mb-2"\n      rows="3"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2">\n      <button\n        id="hexEncodeBtn"\n        class="bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-white"\n      >\n        ${t("encode")}\n      </button>\n      <button\n        id="hexDecodeBtn"\n        class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white"\n      >\n        ${t("decode")}\n      </button>\n    </div>\n\n    <div class="mt-2 flex gap-2">\n      <textarea\n        id="hexOutput"\n        rows="3"\n        readonly\n        class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-gray-800 dark:text-green-400 rounded text-sm"\n        placeholder="${t("resultPlaceholder")}"\n      ></textarea>\n      <button\n        id="hexCopyBtn"\n        class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-2 py-1 rounded self-start text-gray-900 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){document.getElementById("hexEncodeBtn").addEventListener("click",(()=>{const e=document.getElementById("hexInput").value;var t;document.getElementById("hexOutput").value=(t=e,[...t].map((e=>e.charCodeAt(0).toString(16).padStart(2,"0"))).join(" "))})),document.getElementById("hexDecodeBtn").addEventListener("click",(()=>{const e=document.getElementById("hexInput").value;try{document.getElementById("hexOutput").value=e.trim().split(/\s+/).map((e=>String.fromCharCode(parseInt(e,16)))).join("")}catch(t){document.getElementById("hexOutput").value="❌ HEX inválido."}})),document.getElementById("hexCopyBtn").addEventListener("click",(()=>{const t=document.getElementById("hexOutput");navigator.clipboard.writeText(t.value).then((()=>{const t=document.getElementById("hexCopyBtn"),n=t.innerText;t.innerText=e("copied"),setTimeout((()=>{t.innerText=n}),1500)}))}))}},vt=Object.freeze(Object.defineProperty({__proto__:null,default:mt},Symbol.toStringTag,{value:"Module"})),ht={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="hexTextInput" \n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white rounded border border-gray-300 dark:border-gray-600 mb-2" \n      rows="4" \n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-2">\n      <button id="textToHexBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">\n        ${t("textToHex")}\n      </button>\n      <button id="hexToTextBtn" class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white">\n        ${t("hexToText")}\n      </button>\n    </div>\n\n    <div class="relative">\n      <pre \n        id="hexTextOutput" \n        class="mt-2 text-green-600 dark:text-green-400 bg-white dark:bg-gray-900 whitespace-pre-wrap break-words p-2 rounded border border-gray-300 dark:border-gray-700 pr-12 p-6"\n      ></pre>\n      <button \n        id="copyHexText" \n        class="absolute top-2 right-2 bg-gray-200 dark:bg-gray-600 hover:bg-gray-300 dark:hover:bg-gray-500 px-2 py-1 rounded text-gray-800 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n      <span \n        id="copiedHexText" \n        class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("hexTextOutput"),t=document.getElementById("copyHexText"),n=document.getElementById("copiedHexText");document.getElementById("textToHexBtn").addEventListener("click",(()=>{const t=[...document.getElementById("hexTextInput").value].map((e=>e.charCodeAt(0).toString(16).padStart(2,"0"))).join(" ");e.innerText=t})),document.getElementById("hexToTextBtn").addEventListener("click",(()=>{const t=document.getElementById("hexTextInput").value.replace(/\s+/g,"");try{const n=t.match(/.{1,2}/g).map((e=>String.fromCharCode(parseInt(e,16)))).join("");e.innerText=n}catch(n){e.innerText="Erro: "+n.message}})),t.addEventListener("click",(()=>{const r=e.innerText;r&&navigator.clipboard.writeText(r).then((()=>{n.classList.remove("hidden"),t.classList.add("hidden"),setTimeout((()=>{n.classList.add("hidden"),t.classList.remove("hidden")}),2e3)}))}))}},xt=Object.freeze(Object.defineProperty({__proto__:null,default:ht},Symbol.toStringTag,{value:"Module"})),wt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="hexDecInput" \n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white border border-gray-300 dark:border-gray-600 rounded mb-2" \n      rows="3" \n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-2">\n      <button id="hexToDecBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">${t("hexToDec")}</button>\n      <button id="decToHexBtn" class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white">${t("decToHex")}</button>\n    </div>\n\n    <div class="relative">\n      <pre \n        id="hexDecOutput" \n        class="mt-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 text-green-600 dark:text-green-400 p-2 rounded whitespace-pre-wrap break-words pr-12 p-6"\n      ></pre>\n      \n      <button \n        id="copyHexDec" \n        class="absolute top-2 right-2 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-2 py-1 rounded text-sm text-gray-800 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n      \n      <span \n        id="copiedHexDec" \n        class="absolute top-2 right-2 text-green-500 dark:text-green-400 px-2 py-1 text-sm hidden"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("hexDecOutput"),t=document.getElementById("copyHexDec"),n=document.getElementById("copiedHexDec");document.getElementById("hexToDecBtn").addEventListener("click",(()=>{try{const t=document.getElementById("hexDecInput").value.trim().split(/\s+/).map((e=>parseInt(e,16))).join(" ");e.innerText=t}catch(t){e.innerText="Erro: "+t.message}})),document.getElementById("decToHexBtn").addEventListener("click",(()=>{try{const t=document.getElementById("hexDecInput").value.trim().split(/\s+/).map((e=>parseInt(e,10).toString(16))).join(" ");e.innerText=t}catch(t){e.innerText="Erro: "+t.message}})),t.addEventListener("click",(()=>{const r=e.innerText;r&&navigator.clipboard.writeText(r).then((()=>{n.classList.remove("hidden"),t.classList.add("hidden"),setTimeout((()=>{n.classList.add("hidden"),t.classList.remove("hidden")}),2e3)}))}))}},kt=Object.freeze(Object.defineProperty({__proto__:null,default:wt},Symbol.toStringTag,{value:"Module"})),ft={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <select \n      id="hexdumpMode" \n      class="mb-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white p-1 rounded border border-gray-300 dark:border-gray-600"\n    >\n      <option value="to">${t("toHexdump")}</option>\n      <option value="from">${t("fromHexdump")}</option>\n    </select>\n\n    <textarea\n      id="hexdumpInput"\n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white rounded border border-gray-300 dark:border-gray-600 mb-2"\n      rows="6"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-2">\n      <button id="hexdumpBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">${t("convert")}</button>\n    </div>\n\n    <pre \n      id="hexdumpOutput" \n      class="text-green-600 dark:text-green-400 bg-white dark:bg-gray-900 whitespace-pre-wrap break-words p-2 rounded border border-gray-300 dark:border-gray-600 my-4 hidden"\n    ></pre>\n\n    <div id="hexdumpActions" class="flex gap-2 mb-2 hidden">\n      <button id="hexdumpClear" class="bg-gray-200 dark:bg-gray-600 hover:bg-gray-300 dark:hover:bg-gray-500 px-3 py-1 rounded text-gray-800 dark:text-white">\n        ${e("clear")}\n      </button>\n      <button id="hexdumpCopy" class="bg-gray-300 dark:bg-gray-700 hover:bg-gray-400 dark:hover:bg-gray-600 px-3 py-1 rounded text-gray-800 dark:text-white">\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t=document.getElementById("hexdumpInput"),n=document.getElementById("hexdumpOutput"),r=document.getElementById("hexdumpMode"),a=document.getElementById("hexdumpActions"),o=document.getElementById("hexdumpCopy"),d=document.getElementById("hexdumpClear");document.getElementById("hexdumpBtn").addEventListener("click",(()=>{const e=t.value;let o="";if("to"===r.value){const t=(new TextEncoder).encode(e);for(let e=0;e<t.length;e+=16){const n=t.slice(e,e+16),r=Array.from(n).map((e=>e.toString(16).padStart(2,"0"))).join(" ").padEnd(48," "),a=Array.from(n).map((e=>e>=32&&e<=126?String.fromCharCode(e):".")).join("");o+=`${e.toString(16).padStart(8,"0")}  ${r} ${a}\n`}}else try{const t=e.trim().split("\n"),n=[];for(const e of t){e.slice(10,58).trim().split(" ").forEach((e=>{2===e.length&&/^[0-9a-f]{2}$/i.test(e)&&n.push(parseInt(e,16))}))}o=(new TextDecoder).decode(new Uint8Array(n))}catch{o="Erro ao converter hexdump para texto."}n.innerText=o.trim(),o.trim()&&(a.classList.remove("hidden"),n.classList.remove("hidden"))})),d.addEventListener("click",(()=>{t.value="",n.innerText="",n.classList.add("hidden"),a.classList.add("hidden")})),o.addEventListener("click",(()=>{const t=n.innerText;t&&navigator.clipboard.writeText(t).then((()=>{o.innerText,o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},Bt=Object.freeze(Object.defineProperty({__proto__:null,default:ft},Symbol.toStringTag,{value:"Module"})),_t={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="hmacMessage" \n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white rounded border border-gray-300 dark:border-gray-600 mb-2" \n      rows="3" \n      placeholder="${t("message")}"\n    ></textarea>\n\n    <input \n      id="hmacKey" \n      type="text" \n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white rounded border border-gray-300 dark:border-gray-600 mb-2" \n      placeholder="${t("secretKey")}"\n    />\n\n    <select \n      id="hmacAlgo" \n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white rounded border border-gray-300 dark:border-gray-600 mb-2"\n    >\n      <option value="SHA-1">SHA-1</option>\n      <option value="SHA-256" selected>SHA-256</option>\n      <option value="SHA-512">SHA-512</option>\n    </select>\n\n    <button \n      id="hmacGenBtn" \n      class="bg-indigo-600 hover:bg-indigo-700 px-4 py-1 rounded text-white mb-2"\n    >\n      ${t("generate")}\n    </button>\n\n    <div class="relative">\n      <pre \n        id="hmacOutput" \n        class="mt-2 text-green-600 dark:text-green-400 bg-white p-6 dark:bg-gray-900 whitespace-pre-wrap break-words p-2 rounded border border-gray-300 dark:border-gray-700 pr-12"\n      ></pre>\n\n      <button \n        id="copyHmac" \n        class="absolute top-2 right-2 bg-gray-200 dark:bg-gray-600 hover:bg-gray-300 dark:hover:bg-gray-500 px-2 py-1 rounded text-gray-800 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n\n      <span \n        id="copiedHmac" \n        class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("hmacOutput"),t=document.getElementById("copyHmac"),n=document.getElementById("copiedHmac");document.getElementById("hmacGenBtn").addEventListener("click",(async()=>{const t=document.getElementById("hmacMessage").value,n=document.getElementById("hmacKey").value,r=document.getElementById("hmacAlgo").value;if(t&&n)try{const a=new TextEncoder,o=a.encode(n),d=a.encode(t),l=await crypto.subtle.importKey("raw",o,{name:"HMAC",hash:{name:r}},!1,["sign"]),i=await crypto.subtle.sign("HMAC",l,d),s=Array.from(new Uint8Array(i)).map((e=>e.toString(16).padStart(2,"0"))).join("");e.innerText=s}catch(a){e.innerText="Erro ao gerar HMAC: "+a.message}else e.innerText="Mensagem e chave são obrigatórias."})),t.addEventListener("click",(()=>{const r=e.innerText;r&&navigator.clipboard.writeText(r).then((()=>{n.classList.remove("hidden"),t.classList.add("hidden"),setTimeout((()=>{n.classList.add("hidden"),t.classList.remove("hidden")}),2e3)}))}))}},It=Object.freeze(Object.defineProperty({__proto__:null,default:_t},Symbol.toStringTag,{value:"Module"})),Et={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded bg-gray-100 dark:bg-gray-800 text-sm space-y-4 text-gray-800 dark:text-white">\n      <div class="flex items-center gap-4">\n        <label><input type="radio" name="htmlMode" value="encode" checked> ${t("encode")}</label>\n        <label><input type="radio" name="htmlMode" value="decode"> ${t("decode")}</label>\n      </div>\n\n      <div>\n        <label class="block mb-1">${t("input")}:</label>\n        <textarea id="htmlInput" class="w-full p-2 rounded bg-white dark:bg-gray-700 dark:text-white text-black h-32 font-mono border border-gray-300 dark:border-gray-700"></textarea>\n      </div>\n\n      <button id="htmlEntityBtn" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded text-white">${t("convert")}</button>\n\n      <div>\n        <label class="block mb-1">${t("output")}:</label>\n        <textarea id="htmlOutput" readonly class="w-full p-2 rounded bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 h-32 font-mono border border-gray-300 dark:border-gray-700"></textarea>\n        <button id="copyHtmlEntity" class="mt-2 px-3 py-1 bg-gray-600 hover:bg-gray-500 dark:bg-gray-700 dark:hover:bg-gray-600 rounded text-white">${e("copy")}</button>\n        <span id="copiedHtmlEntityMsg" class="text-green-500 dark:text-green-400 ml-2 hidden">${e("copied")}</span>\n      </div>\n    </div>\n    `},init(){const e=document.getElementById("htmlInput"),t=document.getElementById("htmlOutput"),n=document.getElementById("htmlEntityBtn"),r=document.getElementById("copyHtmlEntity"),a=document.getElementById("copiedHtmlEntityMsg");n.onclick=()=>{const n=document.querySelector('input[name="htmlMode"]:checked').value;t.value="encode"===n?(e=>{const t=document.createElement("div");return t.textContent=e,t.innerHTML})(e.value):(e=>{const t=document.createElement("div");return t.innerHTML=e,t.textContent})(e.value)},r.onclick=()=>{navigator.clipboard.writeText(t.value).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),1500)}))}}},$t=Object.freeze(Object.defineProperty({__proto__:null,default:Et},Symbol.toStringTag,{value:"Module"})),Tt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.2",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 bg-gray-100 dark:bg-gray-800 text-sm space-y-4 text-gray-800 dark:text-white rounded">\n      <div class="flex flex-wrap gap-2">\n        <button id="btnSample" class="bg-gray-300 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 px-3 py-1 rounded">${t("example")}</button>\n        <button id="btnClear" class="bg-gray-300 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 px-3 py-1 rounded">${e("clear")}</button>\n        <button id="btnFormat" class="bg-gray-300 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 px-3 py-1 rounded">${t("format")}</button>\n        <button id="btnCopiarHTML" class="bg-gray-300 hover:bg-gray-200 dark:bg-gray-700 dark:hover:bg-gray-600 px-3 py-1 rounded">${e("copy")}</button>\n      </div>\n\n      <div class="relative border border-gray-300 dark:border-gray-700 rounded overflow-hidden">\n        <div id="editor" class="min-h-[200px] bg-white dark:bg-gray-900 text-black dark:text-white p-2"></div>\n        <div id="editorPlaceholder" class="absolute top-0 left-8 p-2 text-gray-500 pointer-events-none select-none">\n          &lt;!-- ${t("placeholder")} --&gt;\n        </div>\n      </div>\n\n      <iframe id="previewHTML" class="w-full h-96 border border-gray-300 dark:border-gray-700 rounded bg-white dark:bg-gray-900 hidden"></iframe>\n    </div>\n    `},async init(){const t=e=>new Promise((t=>{const n=document.createElement("script");n.src=e,n.onload=t,document.head.appendChild(n)})),n=e=>{const t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.appendChild(t)};n("./vendor/codemirror.css"),n("./vendor/material-darker.css"),await t("./vendor/codemirror.min.js"),await t("./vendor/htmlmixed.js"),await t("./vendor/xml.min.js"),await t("./vendor/javascript.min.js"),await t("./vendor/css.min.js"),await t("./vendor/closetag.min.js"),await t("./vendor/beautify-html.min.js");const r=window.CodeMirror(document.getElementById("editor"),{mode:"htmlmixed",theme:"material-darker",lineNumbers:!0,autoCloseTags:!0,value:""}),a=document.getElementById("previewHTML"),o=document.getElementById("editorPlaceholder"),d=()=>{const e=r.getValue().trim(),t=a.contentDocument||a.contentWindow.document,n=""===e;o.style.display=n?"block":"none",n?a.classList.add("hidden"):(a.classList.remove("hidden"),t.open(),t.write(e),t.close())};r.on("change",d),d(),document.getElementById("btnSample").onclick=()=>{r.setValue("<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    h1 { color: blue; }\n  </style>\n</head>\n<body>\n  <h1>Olá do DevUtils!</h1>\n  <p>Este é um exemplo básico de HTML renderizado ao vivo.</p>\n</body>\n</html>")},document.getElementById("btnClear").onclick=()=>{r.setValue("")},document.getElementById("btnFormat").onclick=()=>{const e=window.html_beautify(r.getValue(),{indent_size:2,max_preserve_newlines:0});r.setValue(e.trim())},document.getElementById("btnCopiarHTML").onclick=()=>{navigator.clipboard.writeText(r.getValue()).then((()=>{const t=document.getElementById("btnCopiarHTML");t.textContent=e("copied"),setTimeout((()=>t.textContent=e("copy")),1500)}))}}},Lt=Object.freeze(Object.defineProperty({__proto__:null,default:Tt},Symbol.toStringTag,{value:"Module"})),jt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <label class="block text-sm text-gray-700 dark:text-gray-300 mb-1">${e("label")}</label>\n      \n      <input \n        id="httpCode" \n        type="number" min="100" max="599" placeholder="${e("placeholder")}"\n        class="w-full p-2 bg-white border border-gray-300 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      />\n      \n      <button \n        id="httpSimBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white dark:bg-blue-500 dark:hover:bg-indigo-600"\n      >\n        ${e("simulate")}\n      </button>\n      \n      <div \n        id="httpSimOutput"\n        class="mt-4 text-sm text-center break-words text-gray-800 dark:text-gray-200 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 p-6"\n      ></div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};document.getElementById("httpSimBtn").addEventListener("click",(()=>{const n=document.getElementById("httpCode").value.trim(),r=document.getElementById("httpSimOutput");n&&!isNaN(n)?(r.innerHTML=`${e("loading")}...`,fetch(`https://httpstat.us/${n}`).then((e=>{r.innerHTML=`\n            🧾 <strong>${t("status")}:</strong> ${e.status} ${e.statusText}<br/>\n            🔗 <a href="https://httpstat.us/${n}" target="_blank" class="underline text-blue-400">${t("viewFull")}</a>\n          `})).catch((e=>{r.innerHTML=`❌ ${t("error")} ${e.message}`}))):r.innerHTML=`❌ ${t("invalidCode")}`}))}},Ct=Object.freeze(Object.defineProperty({__proto__:null,default:jt},Symbol.toStringTag,{value:"Module"})),St={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="httpRawInput" \n        class="w-full p-2 rounded mb-2 text-gray-800 bg-white placeholder-gray-500 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 border border-gray-300 dark:border-gray-700" \n        rows="6" \n        placeholder="${e("placeholder")}"\n      ></textarea>\n\n      <button \n        id="httpParseBtn" \n        class="px-4 py-1 rounded text-white bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-indigo-600"\n      >\n        ${e("analyze")}\n      </button>\n\n      <pre \n        id="httpHeadersOutput" \n        class="mt-2 whitespace-pre-wrap break-words text-green-600 dark:text-green-400 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 p-6"\n      ></pre>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};document.getElementById("httpParseBtn").addEventListener("click",(()=>{const t=document.getElementById("httpRawInput").value.trim(),n=document.getElementById("httpHeadersOutput");if(!t)return void(n.innerText=e("nothingToAnalyze"));const r=t.split(/\r?\n/);let a=`🔹 ${e("methodAndPath")}:\n${r[0]}\n\n🔹 ${e("headers")}:\n`;for(let e=1;e<r.length;e++){const t=r[e];if(!t.trim())break;const[n,...o]=t.split(":"),d=o.join(":").trim();a+=`• ${n.trim()}: ${d}\n`}n.innerText=a}))}},Ot=Object.freeze(Object.defineProperty({__proto__:null,default:St},Symbol.toStringTag,{value:"Module"})),Mt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <input \n        type="file" accept="image/png,image/jpeg" id="cropInput"\n        class="mb-3 w-full text-sm text-gray-700 dark:text-gray-400"\n      />\n\n      <div id="cropContainer" \n        class="hidden mb-3 border border-gray-300 bg-white rounded overflow-hidden max-h-[400px] dark:border-gray-700 dark:bg-gray-700">\n        <img id="cropTarget" class="max-w-full" />\n      </div>\n\n      <div class="flex gap-2">\n        <button id="cropDownloadBtn"\n          class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white hidden dark:bg-blue-500 dark:hover:bg-blue-600">\n          ${e("download")}\n        </button>\n\n        <button id="cropClearBtn"\n          class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white hidden dark:bg-gray-600 dark:hover:bg-gray-500">\n          ${e("clear")}\n        </button>\n      </div>\n    `},init(){(e=>{if(window.Cropper)e();else{const t=document.createElement("link");t.rel="stylesheet",t.href="./vendor/cropper.min.css",document.head.appendChild(t);const n=document.createElement("script");n.src="./vendor/cropper.min.js",n.onload=e,document.head.appendChild(n)}})((()=>{const e=document.getElementById("cropInput"),t=document.getElementById("cropContainer"),n=document.getElementById("cropTarget"),r=document.getElementById("cropDownloadBtn"),a=document.getElementById("cropClearBtn");let o;e.addEventListener("change",(()=>{const d=e.files[0];if(!d)return;const l=new FileReader;l.onload=e=>{n.src=e.target.result,t.classList.remove("hidden"),o&&o.destroy(),o=new Cropper(n,{aspectRatio:NaN,viewMode:1,responsive:!0,background:!1}),r.classList.remove("hidden"),a.classList.remove("hidden")},l.readAsDataURL(d)})),r.addEventListener("click",(()=>{if(!o)return;const e=o.getCroppedCanvas(),t=document.createElement("a");t.href=e.toDataURL("image/png"),t.download="recorte.png",t.click()})),a.addEventListener("click",(()=>{o&&(o.destroy(),o=null),e.value="",n.src="",t.classList.add("hidden"),r.classList.add("hidden"),a.classList.add("hidden")}))}))}},Dt=Object.freeze(Object.defineProperty({__proto__:null,default:Mt},Symbol.toStringTag,{value:"Module"})),At={title:"Imagem → Base64",description:"Converta arquivos de imagem em strings Base64 rapidamente. Ideal para embutir em HTML, CSS ou JSON.",tags:["base64","converter imagem","imagem para base64","img to base64","data URI","embed image","inline image"],category:"Conversores",author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render:()=>'\n  <input\n    type="file"\n    accept="image/png,image/jpeg,image/gif,image/webp,image/svg+xml"\n    id="imgInput"\n    class="mb-2 text-sm text-gray-800 dark:text-white"\n  />\n\n  <div class="mt-2 flex gap-2">\n    <textarea\n      id="imgBase64Output"\n      class="w-full p-2 bg-white border border-gray-300 rounded text-green-600 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n      rows="6"\n      readonly\n    ></textarea>\n\n    <button\n      id="imgCopyBtn"\n      class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded h-fit text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n    >\n      Copiar\n    </button>\n  </div>\n  ',init:()=>{const e=document.getElementById("imgInput"),t=document.getElementById("imgBase64Output"),n=document.getElementById("imgCopyBtn");e.addEventListener("change",(()=>{const n=e.files[0];if(!n)return;const r=new FileReader;r.onload=e=>{t.value=e.target.result},r.readAsDataURL(n)})),n.addEventListener("click",(()=>{navigator.clipboard.writeText(t.value).then((()=>{const e=n.innerText;n.innerText="Copiado!",setTimeout((()=>n.innerText=e),1500)}))}))}},Pt=Object.freeze(Object.defineProperty({__proto__:null,default:At},Symbol.toStringTag,{value:"Module"})),Ut={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <input\n      type="file"\n      accept="image/*"\n      id="imgToDataUrlInput"\n      class="w-full p-2 mb-3 bg-white border border-gray-300 rounded text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n    />\n\n    <div\n      id="imgToDataUrlPreview"\n      class="hidden flex justify-center items-center bg-white border border-gray-300 rounded mb-2 min-h-[200px] overflow-hidden dark:bg-gray-700 dark:border-gray-700"\n    ></div>\n\n    <textarea\n      id="imgToDataUrlOutput"\n      class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded mb-2 hidden dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n      rows="6"\n      readonly\n    ></textarea>\n\n    <div id="imgToDataUrlActions" class="flex flex-wrap gap-2 hidden">\n      <button id="copyImgToDataUrlBtn"\n        class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500">\n        ${e("copy")}\n      </button>\n      <button id="downloadImgToDataUrlBtn"\n        class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500">\n        ${e("download")}\n      </button>\n      <button id="clearImgToDataUrlBtn"\n        class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500">\n        ${e("clear")}\n      </button>\n    </div>\n    `},init(){const e=document.getElementById("imgToDataUrlInput"),t=document.getElementById("imgToDataUrlPreview"),n=document.getElementById("imgToDataUrlOutput"),r=document.getElementById("copyImgToDataUrlBtn"),a=document.getElementById("downloadImgToDataUrlBtn"),o=document.getElementById("clearImgToDataUrlBtn"),d=document.getElementById("imgToDataUrlActions");let l="",i="image/png";e.addEventListener("change",(()=>{const r=e.files[0];if(!r||!r.type.startsWith("image/"))return n.classList.add("hidden"),t.classList.add("hidden"),void d.classList.add("hidden");const a=new FileReader;a.onload=()=>{l=a.result,i=r.type||"image/png",n.value=l,n.classList.remove("hidden");const e=new Image;e.src=l,e.className="max-w-full max-h-[300px]",t.innerHTML="",t.appendChild(e),t.classList.remove("hidden"),d.classList.remove("hidden")},a.readAsDataURL(r)})),r.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{var e;r.textContent,r.textContent=(null==(e=this.i18n)?void 0:e.copied)??"Copiado!",setTimeout((()=>{var e;return r.textContent=(null==(e=this.i18n)?void 0:e.copy)??"Copiar"}),1500)}))})),a.addEventListener("click",(()=>{if(!l)return;const e=i.split("/")[1]||"png",t=document.createElement("a");t.href=l,t.download=`imagem.${e}`,t.click()})),o.addEventListener("click",(()=>{e.value="",l="",t.innerHTML="",n.value="",t.classList.add("hidden"),n.classList.add("hidden"),d.classList.add("hidden")}))}},zt=Object.freeze(Object.defineProperty({__proto__:null,default:Ut},Symbol.toStringTag,{value:"Module"})),Rt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.1",render(){return`\n    <div class="text-gray-900 dark:text-white">\n      <textarea\n        id="jsonInput"\n        class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        rows="6"\n        placeholder='{"exemplo":true}'\n      ></textarea>\n\n      <button\n        id="formatJsonBtn"\n        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded m-4 ml-0"\n      >\n        ${(e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e})("format")}\n      </button>\n\n      <div class="relative">\n        <pre\n          id="jsonOutput"\n          class="rounded border border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-900 text-gray-800 dark:text-green-400 overflow-x-auto whitespace-pre-wrap text-sm p-6"\n        ></pre>\n\n        <button\n          id="copyJsonBtn"\n          class="absolute top-2 right-2 bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-white px-2 py-1 rounded"\n        >\n          ${e("copy")}\n        </button>\n\n        <span\n          id="copiedJsonMsg"\n          class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n        >\n          ${e("copied")}\n        </span>\n      </div>\n    </div>\n    `},init(){const e=document.getElementById("jsonInput"),t=document.getElementById("jsonOutput"),n=document.getElementById("formatJsonBtn"),r=document.getElementById("copyJsonBtn"),a=document.getElementById("copiedJsonMsg");n.addEventListener("click",(()=>{try{const n=JSON.parse(e.value);t.textContent=JSON.stringify(n,null,2)}catch{t.textContent="JSON inválido"}})),r.addEventListener("click",(()=>{const e=t.textContent;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))}))}},Ht=Object.freeze(Object.defineProperty({__proto__:null,default:Rt},Symbol.toStringTag,{value:"Module"})),Jt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="jsonMinInput"\n      class="w-full p-2 bg-white border border-gray-300 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      rows="6"\n      placeholder="${t("placeholder.input")}"\n    ></textarea>\n\n    <button\n      id="jsonMinBtn"\n      class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n    >\n      ${t("minify")}\n    </button>\n\n    <textarea\n      id="jsonMinOutput"\n      class="w-full p-2 bg-white border border-gray-300 rounded mt-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      rows="4"\n      readonly\n      placeholder="${t("placeholder.output")}"\n    ></textarea>\n\n    <button\n      id="jsonMinCopy"\n      class="mt-2 bg-green-600 hover:bg-green-700 px-4 py-2 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n    >\n      ${e("copy")}\n    </button>\n    `},init(){document.getElementById("jsonMinBtn").addEventListener("click",(()=>{const e=document.getElementById("jsonMinInput").value,t=document.getElementById("jsonMinOutput");try{const n=JSON.parse(e);t.value=JSON.stringify(n)}catch(a){t.value=(n="invalidJson",(null==(r=Jt.i18n)?void 0:r[n])??n)}var n,r})),document.getElementById("jsonMinCopy").addEventListener("click",(()=>{var t;const n=document.getElementById("jsonMinOutput");n.value&&n.value!==(null==(t=Jt.i18n)?void 0:t.invalidJson)&&navigator.clipboard.writeText(n.value).then((()=>{const t=document.getElementById("jsonMinCopy");t.textContent,t.textContent=e("copied"),setTimeout((()=>t.textContent=e("copy")),1500)}))}))}},Nt=Object.freeze(Object.defineProperty({__proto__:null,default:Jt},Symbol.toStringTag,{value:"Module"})),qt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="jsonPrettyInput"\n      class="w-full p-2 bg-white border border-gray-300 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      rows="6"\n      placeholder="${t("placeholder.input")}"\n    ></textarea>\n\n    <button\n      id="jsonPrettyBtn"\n      class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded mb-2 text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n    >\n      ${t("format")}\n    </button>\n\n    <div class="relative">\n      <pre\n        id="jsonPrettyOutput"\n        class="mt-2 bg-white border border-gray-300 text-green-600 whitespace-pre-wrap break-words pr-12 rounded p-2 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400 p-6"\n      ></pre>\n\n      <button\n        id="copyJsonPretty"\n        class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("copy")}\n      </button>\n\n      <span\n        id="copiedJsonPretty"\n        class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("jsonPrettyOutput"),t=document.getElementById("copyJsonPretty"),n=document.getElementById("copiedJsonPretty");document.getElementById("jsonPrettyBtn").addEventListener("click",(()=>{try{const t=document.getElementById("jsonPrettyInput").value,n=JSON.parse(t);e.innerText=JSON.stringify(n,null,2)}catch(r){e.innerText=`${t="error",(null==(n=qt.i18n)?void 0:n[t])??t}: ${r.message}`}var t,n})),t.addEventListener("click",(()=>{const r=e.innerText;r&&navigator.clipboard.writeText(r).then((()=>{n.classList.remove("hidden"),t.classList.add("hidden"),setTimeout((()=>{n.classList.add("hidden"),t.classList.remove("hidden")}),2e3)}))}))}},Ft=Object.freeze(Object.defineProperty({__proto__:null,default:qt},Symbol.toStringTag,{value:"Module"})),Vt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="schemaInput"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      rows="8"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button\n        id="schemaConvert"\n        class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button\n        id="schemaClear"\n        class="bg-gray-600 hover:bg-gray-500 px-3 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button\n        id="schemaCopy"\n        class="bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre\n      id="schemaOutput"\n      class="bg-white border border-gray-300 text-green-600 whitespace-pre-wrap break-words p-3 rounded text-sm hidden dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=e=>{var t;return(null==(t=Vt.i18n)?void 0:t[e])??e},n=document.getElementById("schemaInput"),r=document.getElementById("schemaOutput"),a=document.getElementById("schemaConvert"),o=document.getElementById("schemaClear"),d=document.getElementById("schemaCopy");a.addEventListener("click",(()=>{try{const e=(e=>{const t={...e};delete t.$schema;const n=e=>{var t,r;if((null==(r=null==(t=null==e?void 0:e.type)?void 0:t.includes)?void 0:r.call(t,"null"))&&(e.nullable=!0,e.type=e.type.filter((e=>"null"!==e))[0]||"string"),e.properties)for(const a in e.properties)n(e.properties[a]);return e.items&&(Array.isArray(e.items)?e.items.forEach(n):n(e.items)),e},r=n(t),a=(t.title||"ConvertedSchema").replace(/\s+/g,"");return{openapi:"3.0.0",info:{title:t.title||"Converted Schema",version:"1.0.0"},paths:{},components:{schemas:{[a]:r}}}})(JSON.parse(n.value));r.textContent=JSON.stringify(e,null,2),r.classList.remove("hidden")}catch(e){r.textContent=`${t("error")}: ${t("invalidJson")}`,r.classList.remove("hidden")}})),o.addEventListener("click",(()=>{n.value="",r.textContent="",r.classList.add("hidden")})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(r.textContent).then((()=>{d.innerText=e("copied"),setTimeout((()=>{d.innerText=e("copy")}),1500)}))}))}},Gt=Object.freeze(Object.defineProperty({__proto__:null,default:Vt},Symbol.toStringTag,{value:"Module"})),Yt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="schemaInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="schemaConvertBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="schemaClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="schemaCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="schemaOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=e=>{var t;return(null==(t=Yt.i18n)?void 0:t[e])??e},n=document.getElementById("schemaInput"),r=document.getElementById("schemaOutput"),a=document.getElementById("schemaConvertBtn"),o=document.getElementById("schemaClearBtn"),d=document.getElementById("schemaCopyBtn"),l=e=>{var t;if(Array.isArray(e.type))return e.type.map((e=>l({type:e}))).join(" | ");if(e.enum)return e.enum.map((e=>JSON.stringify(e))).join(" | ");if("array"===e.type){const n=(null==(t=e.items)?void 0:t.type)?l(e.items):"any";if(void 0!==e.minItems&&void 0!==e.maxItems&&e.maxItems<=3){const t=[];for(let r=e.minItems;r<=e.maxItems;r++)t.push("["+Array(r).fill(n).join(", ")+"]");return t.join(" | ")}return n+"[]"}if("integer"===e.type||"number"===e.type)return"number";if("string"===e.type)return"string";if("boolean"===e.type)return"boolean";if("object"===e.type)return"Record<string, any>";if(e.oneOf||e.anyOf||e.allOf){return(e.oneOf||e.anyOf||e.allOf).map(l).join(" | ")}return"any"};a.addEventListener("click",(()=>{try{const e=(e=>{if(!e||!e.properties)return`❌ ${t("invalid")}`;const n=e.required||[],r=[`export interface ${e.title||"Root"} {`];for(const t in e.properties){const a=e.properties[t],o=n.includes(t)?"":"?",d=l(a),i=[];a.description&&i.push(`  /** ${a.description} */`),void 0!==a.default&&i.push(`  /** default: ${JSON.stringify(a.default)} */`),i.length&&r.push(...i),r.push(`  ${t}${o}: ${d};`)}return r.push("  [k: string]: unknown;"),r.push("}"),r.join("\n")})(JSON.parse(n.value));r.innerText=e}catch{r.innerText=`❌ ${t("invalidJson")}`}})),o.addEventListener("click",(()=>{n.value="",r.innerText=""})),d.addEventListener("click",(()=>{const t=r.innerText;navigator.clipboard.writeText(t).then((()=>{d.innerText=e("copied"),setTimeout((()=>d.innerText=e("copy")),1500)}))}))}},Xt=Object.freeze(Object.defineProperty({__proto__:null,default:Yt},Symbol.toStringTag,{value:"Module"})),Wt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="bqInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="bqConvertBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="bqClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="bqCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="bqSchemaOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("bqInput"),n=document.getElementById("bqSchemaOutput"),r=document.getElementById("bqConvertBtn"),a=document.getElementById("bqClearBtn"),o=document.getElementById("bqCopyBtn");r.addEventListener("click",(()=>{try{const e=(e=>Object.entries(e).map((([e,t])=>{return{name:e,type:(n=t,"number"==typeof n?Number.isInteger(n)?"INTEGER":"FLOAT":"boolean"==typeof n?"BOOLEAN":"string"==typeof n?"STRING":Array.isArray(n)||"object"==typeof n&&null!==n?"RECORD":"STRING"),mode:"REQUIRED"};var n})))(JSON.parse(t.value));n.innerText=JSON.stringify(e,null,2)}catch{n.innerText=`❌ ${e="invalidJson",(null==(r=Wt.i18n)?void 0:r[e])??e}`}var e,r})),a.addEventListener("click",(()=>{t.value="",n.innerText=""})),o.addEventListener("click",(()=>{const t=n.innerText;t&&navigator.clipboard.writeText(t).then((()=>{o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},Qt=Object.freeze(Object.defineProperty({__proto__:null,default:Wt},Symbol.toStringTag,{value:"Module"})),Kt={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="jsonToCsvInput"\n      class="w-full p-2 bg-white border border-gray-300 rounded mb-2 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      rows="6"\n      placeholder='${t("placeholder")}'\n    ></textarea>\n\n    <div class="flex flex-col sm:flex-row sm:items-center sm:gap-4 mb-2">\n      <label class="text-sm text-gray-800 dark:text-gray-300">\n        ${t("delimiter")}:\n        <input\n          id="csvDelimiter"\n          type="text"\n          value=","\n          maxlength="1"\n          class="ml-1 px-2 py-1 bg-white border border-gray-300 text-center w-10 rounded text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        />\n      </label>\n      <label class="text-sm mt-2 sm:mt-0 text-gray-800 dark:text-gray-300">\n        ${t("useQuotes")}:\n        <input id="csvQuote" type="checkbox" checked class="ml-1" />\n      </label>\n    </div>\n\n    <div class="flex gap-2 mb-2">\n      <button\n        id="jsonToCsvBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${t("convert")}\n      </button>\n      <button\n        id="downloadCsvBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white hidden dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${e("download")} CSV\n      </button>\n    </div>\n\n    <div class="relative">\n      <pre\n        id="jsonToCsvOutput"\n        class="mt-2 bg-white border border-gray-300 text-green-600 whitespace-pre-wrap break-words pr-16 p-2 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-green-400 p-6"\n      ></pre>\n\n      <button\n        id="copyJsonCsvBtn"\n        class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("copy")}\n      </button>\n\n      <span\n        id="copiedJsonCsvMsg"\n        class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=e=>{var t;return(null==(t=Kt.i18n)?void 0:t[e])??e},t=document.getElementById("jsonToCsvOutput"),n=document.getElementById("copyJsonCsvBtn"),r=document.getElementById("copiedJsonCsvMsg"),a=document.getElementById("downloadCsvBtn");function o(e,t="",n={}){for(const r in e){const a=e[r],d=t?`${t}.${r}`:r;"object"!=typeof a||null===a||Array.isArray(a)?n[d]=a:o(a,d,n)}return n}let d="";document.getElementById("jsonToCsvBtn").addEventListener("click",(()=>{const n=document.getElementById("jsonToCsvInput").value,r=document.getElementById("csvDelimiter").value||",",l=document.getElementById("csvQuote").checked;try{const i=JSON.parse(n);if(!Array.isArray(i))throw new Error(e("errorNotArray"));const s=i.map((e=>o(e))),c=Array.from(new Set(s.flatMap((e=>Object.keys(e))))),g=e=>{const t=JSON.stringify(e??"");return l?`"${t.replace(/^"|"$/g,"").replace(/"/g,'""')}"`:t.replace(/^"|"$/g,"")},u=[c.map(g).join(r),...s.map((e=>c.map((t=>g(e[t]))).join(r)))].join("\n");d=u,t.innerText=u,a.classList.remove("hidden")}catch(i){t.innerText=`${e("errorPrefix")} ${i.message}`,a.classList.add("hidden"),d=""}})),n.addEventListener("click",(()=>{const e=t.innerText;e&&navigator.clipboard.writeText(e).then((()=>{n.classList.add("hidden"),r.classList.remove("hidden"),setTimeout((()=>{r.classList.add("hidden"),n.classList.remove("hidden")}),2e3)}))})),a.addEventListener("click",(()=>{if(!d)return;const e=new Blob([d],{type:"text/csv;charset=utf-8;"}),t=URL.createObjectURL(e),n=document.createElement("a");n.href=t,n.download="dados.csv",n.click(),URL.revokeObjectURL(t)}))}},Zt=Object.freeze(Object.defineProperty({__proto__:null,default:Kt},Symbol.toStringTag,{value:"Module"})),en={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="flowInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder='${t("placeholder")}'\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="flowConvertBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="flowClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="flowCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="flowOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("flowInput"),n=document.getElementById("flowOutput"),r=document.getElementById("flowConvertBtn"),a=document.getElementById("flowClearBtn"),o=document.getElementById("flowCopyBtn");r.addEventListener("click",(()=>{try{const e=(e=>{const t=["type Root = {"];for(const r in e){const a="number"==typeof(n=e[r])?(Number.isInteger(n),"number"):"boolean"==typeof n?"boolean":"string"==typeof n?"string":Array.isArray(n)?"Array<mixed>":"object"==typeof n&&null!==n?"{ [key: string]: mixed }":"mixed";t.push(`  ${r}: ${a},`)}var n;return t.push("};"),t.join("\n")})(JSON.parse(t.value));n.innerText=e}catch{n.innerText=`❌ ${e="error",(null==(r=en.i18n)?void 0:r[e])??e}`}var e,r})),a.addEventListener("click",(()=>{t.value="",n.innerText=""})),o.addEventListener("click",(()=>{const t=n.innerText;t&&navigator.clipboard.writeText(t).then((()=>{o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},tn=Object.freeze(Object.defineProperty({__proto__:null,default:en},Symbol.toStringTag,{value:"Module"})),nn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="gqlInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder='${t("placeholder")}'\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="gqlConvertBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="gqlClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="gqlCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="gqlOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("gqlInput"),n=document.getElementById("gqlOutput"),r=document.getElementById("gqlConvertBtn"),a=document.getElementById("gqlClearBtn"),o=document.getElementById("gqlCopyBtn"),d=e=>Array.isArray(e)?0===e.length?"[String]":"["+d(e[0])+"]":"number"==typeof e?Number.isInteger(e)?"Int":"Float":"boolean"==typeof e?"Boolean":"String";r.addEventListener("click",(()=>{try{const e=(e=>{const t=["type Root {"];for(const n in e){const r=d(e[n]);t.push(`  ${n}: ${r}`)}return t.push("}"),t.join("\n")})(JSON.parse(t.value));n.innerText=e}catch{n.innerText=`❌ ${e="error",(null==(r=nn.i18n)?void 0:r[e])??e}`}var e,r})),a.addEventListener("click",(()=>{t.value="",n.innerText=""})),o.addEventListener("click",(()=>{const t=n.innerText;t&&navigator.clipboard.writeText(t).then((()=>{o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},rn=Object.freeze(Object.defineProperty({__proto__:null,default:nn},Symbol.toStringTag,{value:"Module"})),an={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="jsonInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder='${t("placeholder")}'\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="jsonToSchemaBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="jsonClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="jsonCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="jsonSchemaOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("jsonInput"),n=document.getElementById("jsonSchemaOutput"),r=document.getElementById("jsonToSchemaBtn"),a=document.getElementById("jsonClearBtn"),o=document.getElementById("jsonCopyBtn"),d=e=>{const t=typeof e;return Array.isArray(e)?"array":"number"===t?Number.isInteger(e)?"integer":"number":null===e?"null":t};r.addEventListener("click",(()=>{try{const e=(e=>{const t={$schema:"http://json-schema.org/draft-07/schema#",title:"Generated schema for Root",type:"object",properties:{},required:[]};for(const n in e){const r=e[n],a=d(r);t.properties[n]={type:a},t.required.push(n)}return t})(JSON.parse(t.value));n.innerText=JSON.stringify(e,null,2)}catch{n.innerText=`❌ ${e="error",(null==(r=an.i18n)?void 0:r[e])??e}`}var e,r})),a.addEventListener("click",(()=>{t.value="",n.innerText=""})),o.addEventListener("click",(()=>{const t=n.innerText;t&&navigator.clipboard.writeText(t).then((()=>{o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},on=Object.freeze(Object.defineProperty({__proto__:null,default:an},Symbol.toStringTag,{value:"Module"})),dn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="mongooseInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder='${t("placeholder")}'\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="mongooseConvertBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="mongooseClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="mongooseCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="mongooseOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("mongooseInput"),n=document.getElementById("mongooseOutput"),r=document.getElementById("mongooseConvertBtn"),a=document.getElementById("mongooseClearBtn"),o=document.getElementById("mongooseCopyBtn"),d=e=>Array.isArray(e)?0===e.length?"[]":`[${d(e[0])}]`:"number"==typeof e?"Number":"boolean"==typeof e?"Boolean":"string"==typeof e||null===e?"String":"Mixed";r.addEventListener("click",(()=>{try{const e=(e=>{const t=["const mongoose = require('mongoose');","","const Schema = new mongoose.Schema({"];for(const n in e){const r=d(e[n]);t.push(`  ${n}: { type: ${r} },`)}return t.push("});","","module.exports = mongoose.model('ModelName', Schema);"),t.join("\n")})(JSON.parse(t.value));n.innerText=e}catch{n.innerText=`❌ ${e="error",(null==(r=dn.i18n)?void 0:r[e])??e}`}var e,r})),a.addEventListener("click",(()=>{t.value="",n.innerText=""})),o.addEventListener("click",(()=>{const t=n.innerText;navigator.clipboard.writeText(t).then((()=>{o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},ln=Object.freeze(Object.defineProperty({__proto__:null,default:dn},Symbol.toStringTag,{value:"Module"})),sn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="sqlInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder='${t("placeholder")}'\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="sqlConvertBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="sqlClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="sqlCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="sqlOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("sqlInput"),n=document.getElementById("sqlOutput"),r=document.getElementById("sqlConvertBtn"),a=document.getElementById("sqlClearBtn"),o=document.getElementById("sqlCopyBtn"),d=e=>{let t=["CREATE TABLE tabela ("];const n=Object.keys(e);return n.forEach(((r,a)=>{const o="number"==typeof(d=e[r])?Number.isInteger(d)?"INT":"FLOAT":"boolean"==typeof d?"BOOLEAN":"string"==typeof d?d.length>255?"TEXT":"VARCHAR(255)":"TEXT";var d;const l=a<n.length-1?",":"";t.push(`  ${r} ${o}${l}`)})),t.push(");"),t.join("\n")};r.addEventListener("click",(()=>{try{const e=JSON.parse(t.value),r=d(e);n.innerText=r}catch{n.innerText=`❌ ${e="error",(null==(r=sn.i18n)?void 0:r[e])??e}`}var e,r})),a.addEventListener("click",(()=>{t.value="",n.innerText=""})),o.addEventListener("click",(()=>{const t=n.innerText;navigator.clipboard.writeText(t).then((()=>{o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},cn=Object.freeze(Object.defineProperty({__proto__:null,default:sn},Symbol.toStringTag,{value:"Module"})),gn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="tsInput" \n      rows="8"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      placeholder='${t("placeholder")}'\n    ></textarea>\n\n    <div class="flex gap-2 mb-3">\n      <button \n        id="tsConvertBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <button \n        id="tsClearBtn"\n        class="bg-gray-600 hover:bg-gray-500 px-4 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n\n      <button \n        id="tsCopyBtn"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n\n    <pre \n      id="tsOutput"\n      class="bg-white border border-gray-300 text-green-600 text-sm p-3 rounded whitespace-pre-wrap break-words dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("tsInput"),n=document.getElementById("tsOutput"),r=document.getElementById("tsConvertBtn"),a=document.getElementById("tsClearBtn"),o=document.getElementById("tsCopyBtn"),d=e=>Array.isArray(e)?0===e.length?"any[]":d(e[0])+"[]":null===e?"null":"object"==typeof e?"any":typeof e;r.addEventListener("click",(()=>{try{const e=(e=>{let t=["export interface Root {"];for(const n in e){const r=e[n],a=d(r);t.push(`  ${n}: ${a};`)}return t.push("}"),t.join("\n")})(JSON.parse(t.value));n.innerText=e}catch{n.innerText=`❌ ${e="error",(null==(r=gn.i18n)?void 0:r[e])??e}`}var e,r})),a.addEventListener("click",(()=>{t.value="",n.innerText=""})),o.addEventListener("click",(()=>{const t=n.innerText;navigator.clipboard.writeText(t).then((()=>{o.innerText=e("copied"),setTimeout((()=>o.innerText=e("copy")),1500)}))}))}},un=Object.freeze(Object.defineProperty({__proto__:null,default:gn},Symbol.toStringTag,{value:"Module"})),pn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="jsonXmlInput" \n        class="w-full p-2 bg-white border border-gray-300 rounded mb-2 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" \n        rows="6" \n        placeholder="${t("placeholder")}"\n      ></textarea>\n\n      <div class="flex gap-2 mb-2">\n        <button \n          id="jsonToXmlBtn" \n          class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n        >\n          ${t("jsonToXml")}\n        </button>\n\n        <button \n          id="xmlToJsonBtn" \n          class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white dark:bg-yellow-500 dark:hover:bg-yellow-600"\n        >\n          ${t("xmlToJson")}\n        </button>\n      </div>\n\n      <div class="relative">\n        <pre \n          id="jsonXmlOutput" \n          class="mt-2 bg-white border border-gray-300 text-green-600 whitespace-pre-wrap break-words pr-16 p-2 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-green-400 p-6"\n        ></pre>\n\n        <button \n          id="copyJsonXmlBtn" \n          class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n        >\n          ${e("copy")}\n        </button>\n\n        <span \n          id="copiedJsonXmlMsg" \n          class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n        >\n          ${e("copied")}\n        </span>\n      </div>\n    `},init(){const e=e=>{var t;return(null==(t=pn.i18n)?void 0:t[e])??e},t=document.getElementById("jsonXmlInput"),n=document.getElementById("jsonXmlOutput"),r=document.getElementById("copyJsonXmlBtn"),a=document.getElementById("copiedJsonXmlMsg"),o=new DOMParser;function d(e,t=""){let n="";for(let r in e)Array.isArray(e[r])?e[r].forEach((e=>{n+=`${t}<${r}>${"object"==typeof e?"\n"+d(e,t+"  ")+t:e}</${r}>\n`})):"object"==typeof e[r]&&null!==e[r]?n+=`${t}<${r}>\n${d(e[r],t+"  ")}${t}</${r}>\n`:n+=`${t}<${r}>${e[r]}</${r}>\n`;return n}function l(e){let t={};if(1===e.nodeType&&e.attributes.length>0){t["@attributes"]={};for(let n=0;n<e.attributes.length;n++){const r=e.attributes.item(n);t["@attributes"][r.nodeName]=r.nodeValue}}if(e.hasChildNodes())for(let n=0;n<e.childNodes.length;n++){const r=e.childNodes.item(n),a=r.nodeName;if(3===r.nodeType&&r.nodeValue.trim())return r.nodeValue;if(1===r.nodeType){const e=l(r);void 0===t[a]?t[a]=e:(Array.isArray(t[a])||(t[a]=[t[a]]),t[a].push(e))}}return t}document.getElementById("jsonToXmlBtn").addEventListener("click",(()=>{try{const e=d(JSON.parse(t.value));n.innerText=e}catch(r){n.innerText=`${e("error")}: ${r.message}`}})),document.getElementById("xmlToJsonBtn").addEventListener("click",(()=>{try{const e=t.value,r=l(o.parseFromString(e,"text/xml"));n.innerText=JSON.stringify(r,null,2)}catch(r){n.innerText=`${e("error")}: ${r.message}`}})),r.addEventListener("click",(()=>{const e=n.innerText;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))}))}},bn=Object.freeze(Object.defineProperty({__proto__:null,default:pn},Symbol.toStringTag,{value:"Module"})),yn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="jsonToYamlInput" \n        class="w-full p-2 bg-white border border-gray-300 rounded mb-2 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n        rows="6" \n        placeholder="${t("placeholder")}"\n      ></textarea>\n\n      <button \n        id="jsonToYamlBtn" \n        class="bg-purple-600 hover:bg-purple-700 px-4 py-1 rounded mb-2 text-white dark:bg-purple-500 dark:hover:bg-purple-600"\n      >\n        ${t("convert")}\n      </button>\n\n      <div class="relative">\n        <pre \n          id="jsonToYamlOutput" \n          class="mt-2 bg-white border border-gray-300 text-green-600 whitespace-pre-wrap break-words pr-16 p-2 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-green-400 p-6"\n        ></pre>\n\n        <button \n          id="copyJsonYamlBtn" \n          class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n        >\n          ${e("copy")}\n        </button>\n\n        <span \n          id="copiedJsonYamlMsg" \n          class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n        >\n          ${e("copied")}\n        </span>\n      </div>\n    `},init(){const e=document.getElementById("jsonToYamlOutput"),t=document.getElementById("copyJsonYamlBtn"),n=document.getElementById("copiedJsonYamlMsg"),r=()=>{try{const t=document.getElementById("jsonToYamlInput").value,n=JSON.parse(t),r=jsyaml.dump(n);e.innerText=r}catch(r){e.innerText=`${t="error",(null==(n=yn.i18n)?void 0:n[t])??t}: ${r.message}`}var t,n},a=()=>{document.getElementById("jsonToYamlBtn").addEventListener("click",r),t.addEventListener("click",(()=>{const r=e.innerText;r&&navigator.clipboard.writeText(r).then((()=>{t.classList.add("hidden"),n.classList.remove("hidden"),setTimeout((()=>{n.classList.add("hidden"),t.classList.remove("hidden")}),2e3)}))}))};if(window.jsyaml)a();else{const e=document.createElement("script");e.src="./vendor/js-yaml.min.js",e.onload=a,document.head.appendChild(e)}}},mn=Object.freeze(Object.defineProperty({__proto__:null,default:yn},Symbol.toStringTag,{value:"Module"})),vn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="jsonValidatorInput" \n        class="w-full p-2 bg-white border border-gray-300 rounded mb-2 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" \n        rows="6" \n        placeholder='${e("placeholder")}'\n      ></textarea>\n\n      <button \n        id="jsonValidatorBtn" \n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("validate")}\n      </button>\n\n      <p \n        id="jsonValidatorOutput" \n        class="mt-2 text-green-600 break-words dark:text-green-400 bg-white p-2 border border-gray-300 dark:border-gray-700"\n      ></p>\n    `},init(){const e=e=>{var t;return(null==(t=vn.i18n)?void 0:t[e])??e};document.getElementById("jsonValidatorBtn").addEventListener("click",(()=>{const t=document.getElementById("jsonValidatorInput").value,n=document.getElementById("jsonValidatorOutput");try{JSON.parse(t),n.innerText=e("valid")}catch(r){n.innerText=`${e("invalid")}: ${r.message}`}}))}},hn=Object.freeze(Object.defineProperty({__proto__:null,default:vn},Symbol.toStringTag,{value:"Module"})),xn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="mb-3">\n      <div class="text-xs text-gray-700 dark:text-gray-400 mb-1">${t("payload")}</div>\n      <textarea id="jwtGenPayload" rows="4" class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded font-mono text-sm dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" placeholder='{"sub": "123", "name": "John Doe"}'></textarea>\n    </div>\n\n    <div class="mb-3">\n      <div class="text-xs text-gray-700 dark:text-gray-400 mb-1">${t("header")}</div>\n      <textarea id="jwtGenHeader" rows="2" class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded font-mono text-sm dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" placeholder='{"alg": "HS256", "typ": "JWT"}'></textarea>\n    </div>\n\n    <div class="mb-3">\n      <div class="text-xs text-gray-700 dark:text-gray-400 mb-1">${t("secret")}</div>\n      <input id="jwtGenSecret" type="text" class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded text-sm dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" placeholder="${t("secretPlaceholder")}" />\n    </div>\n\n    <div class="flex gap-2 mb-4">\n      <button id="jwtGenBtn" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm text-white dark:bg-blue-500 dark:hover:bg-blue-600">${e("generate")}</button>\n      <button id="jwtGenClear" class="bg-gray-700 hover:bg-gray-600 px-4 py-2 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500">${e("clear")}</button>\n    </div>\n\n    <div id="jwtGenOutputWrap" class="hidden">\n      <div class="text-xs text-gray-700 dark:text-gray-400 mb-1">${t("outputLabel")}</div>\n      <div id="jwtGenToken" class="text-sm font-mono bg-white border border-gray-300 text-green-600 p-3 rounded break-words whitespace-pre-wrap mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"></div>\n      <button id="jwtGenCopy" class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500">${e("copy")}</button>\n    </div>\n    `},init(){const t=e=>{var t;return(null==(t=xn.i18n)?void 0:t[e])??e},n=document.getElementById("jwtGenPayload"),r=document.getElementById("jwtGenHeader"),a=document.getElementById("jwtGenSecret"),o=document.getElementById("jwtGenBtn"),d=document.getElementById("jwtGenClear"),l=document.getElementById("jwtGenOutputWrap"),i=document.getElementById("jwtGenToken"),s=document.getElementById("jwtGenCopy"),c=e=>btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"");if(!window.CryptoJS){const e=document.createElement("script");e.src="./vendor/crypto-js.min.js",document.head.appendChild(e)}n.addEventListener("input",(()=>{n.style.height="auto",n.style.height=n.scrollHeight+"px"})),r.addEventListener("input",(()=>{r.style.height="auto",r.style.height=r.scrollHeight+"px"})),o.addEventListener("click",(()=>{let e,o;try{e=JSON.parse(n.value.trim())}catch{return i.innerHTML=`<span class="text-red-400">${t("invalidPayload")}</span>`,void l.classList.remove("hidden")}try{o=r.value.trim()?JSON.parse(r.value.trim()):{alg:"HS256",typ:"JWT"}}catch{return i.innerHTML=`<span class="text-red-400">${t("invalidHeader")}</span>`,void l.classList.remove("hidden")}const d=a.value.trim();if(!d)return i.innerHTML=`<span class="text-red-400">${t("secretRequired")}</span>`,void l.classList.remove("hidden");const s=c(JSON.stringify(o)),g=c(JSON.stringify(e)),u=((e,t)=>CryptoJS.HmacSHA256(e,t).toString(CryptoJS.enc.Base64url))(`${s}.${g}`,d),p=`${s}.${g}.${u}`;i.innerHTML=(e=>{const t=e.split(".");return`<span class="text-red-400">${t[0]}</span><span class="text-gray-400">.</span><span class="text-purple-400">${t[1]}</span><span class="text-gray-400">.</span><span class="text-blue-400">${t[2]}</span>`})(p),l.classList.remove("hidden")})),d.addEventListener("click",(()=>{n.value="",r.value="",a.value="",i.innerHTML="",l.classList.add("hidden")})),s.addEventListener("click",(()=>{const t=i.textContent.trim();navigator.clipboard.writeText(t).then((()=>{s.textContent=e("copied"),setTimeout((()=>s.textContent=e("copy")),1500)}))}))}},wn=Object.freeze(Object.defineProperty({__proto__:null,default:xn},Symbol.toStringTag,{value:"Module"})),kn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="gap-2">\n      <textarea\n        id="jwtInput"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n        rows="4"\n        placeholder="${t("placeholder")}"\n      ></textarea>\n\n      <button\n        id="jwtDecodeBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600 m-4 ml-0"\n      >\n        ${t("decode")}\n      </button>\n\n      <div class="relative">\n        <pre\n          id="jwtOutput"\n          class="p-3 bg-white border border-gray-300 text-green-600 rounded overflow-x-auto whitespace-pre-wrap break-words text-sm dark:bg-gray-700 dark:border-gray-700 dark:text-green-400 p-6"\n        ></pre>\n\n        <button\n          id="jwtCopyBtn"\n          class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    </div>\n    `},init(){const t=e=>{var t;return(null==(t=kn.i18n)?void 0:t[e])??e},n=document.getElementById("jwtInput"),r=document.getElementById("jwtOutput"),a=document.getElementById("jwtDecodeBtn"),o=document.getElementById("jwtCopyBtn");a.addEventListener("click",(()=>{const e=n.value.trim().split(".");if(3===e.length)try{const t=JSON.parse(atob(e[1].replace(/-/g,"+").replace(/_/g,"/")));r.textContent=JSON.stringify(t,null,2)}catch{r.textContent=t("error.invalid")}else r.textContent=t("error.structure")})),o.addEventListener("click",(()=>{navigator.clipboard.writeText(r.textContent).then((()=>{o.textContent=e("copied"),setTimeout((()=>o.textContent=e("copy")),1500)}))}))}},fn=Object.freeze(Object.defineProperty({__proto__:null,default:kn},Symbol.toStringTag,{value:"Module"})),Bn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="flex flex-col gap-2 mb-2">\n      <input\n        id="loremCount"\n        type="number"\n        min="1"\n        max="100"\n        value="5"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n      />\n\n      <select\n        id="loremType"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n      >\n        <option value="paragraphs">${t("paragraphs")}</option>\n        <option value="words">${t("words")}</option>\n        <option value="bytes">${t("bytes")}</option>\n        <option value="lists">${t("lists")}</option>\n      </select>\n\n      <div id="loremStartContainer" class="text-sm text-gray-800 flex gap-2 items-center dark:text-white">\n        <input type="checkbox" id="loremStart" checked />\n        <label for="loremStart">${t("startWithLorem")}</label>\n      </div>\n    </div>\n\n    <button\n      id="loremBtn"\n      class="bg-yellow-600 hover:bg-yellow-700 px-4 py-2 rounded text-white dark:bg-yellow-500 dark:hover:bg-yellow-600"\n    >\n      ${e("generate")}\n    </button>\n\n    <div class="relative mt-2">\n      <pre\n        id="loremOutput"\n        class="text-green-600 bg-white border border-gray-300 whitespace-pre-wrap break-words p-6 pr-16 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n      ></pre>\n\n      <button\n        id="copyLoremBtn"\n        class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("copy")}\n      </button>\n\n      <span\n        id="copiedLoremMsg"\n        class="absolute top-2 right-2 text-green-600 px-2 py-1 hidden dark:text-green-400"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},async init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},t=document.getElementById("loremOutput"),n=document.getElementById("copyLoremBtn"),r=document.getElementById("copiedLoremMsg"),a=document.getElementById("loremBtn");let o="";try{const e=await fetch("/data/lorem.json"),t=await e.json();o=t.text||""}catch(i){return t.innerText=e("error.loading"),void(a.disabled=!0)}const d=document.getElementById("loremType"),l=document.getElementById("loremStartContainer");d.addEventListener("change",(()=>{const e="paragraphs"===d.value;l.style.display=e?"flex":"none",t.innerText="",e||(document.getElementById("loremStart").checked=!1)})),l.style.display="paragraphs"===d.value?"flex":"none",a.addEventListener("click",(()=>{const n=parseInt(document.getElementById("loremCount").value,10),r=document.getElementById("loremType").value,a=document.getElementById("loremStart").checked,d=e("loremIntro"),l=o.replace(/\s+/g," ").trim(),i=o.split(/\n+/).filter(Boolean),s=l.split(" "),c=(e,t)=>{const n=[...e],r=[];for(;r.length<t&&n.length;){const e=Math.floor(Math.random()*n.length);r.push(n.splice(e,1)[0])}return r};let g="";switch(r){case"paragraphs":g=c(i,n).join("\n\n");break;case"words":g=c(s,n).join(" ");break;case"bytes":const e=Math.floor(Math.random()*Math.max(1,l.length-n));g=l.slice(e,e+n);break;case"lists":g=c(s,n).map((e=>`• ${e}`)).join("\n")}a&&!g.startsWith("Lorem ipsum")&&(g=`${d}\n\n${g}`),t.innerText=g})),n.addEventListener("click",(()=>{const e=t.innerText;e&&navigator.clipboard.writeText(e).then((()=>{n.classList.add("hidden"),r.classList.remove("hidden"),setTimeout((()=>{r.classList.add("hidden"),n.classList.remove("hidden")}),2e3)}))}))}},_n=Object.freeze(Object.defineProperty({__proto__:null,default:Bn},Symbol.toStringTag,{value:"Module"})),In={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"2.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea \n      id="magicInput" \n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" \n      rows="6"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-2">\n      <button \n        id="magicAnalyzeBtn" \n        class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${e("generate")}\n      </button>\n      <button \n        id="magicClearBtn" \n        class="bg-gray-600 hover:bg-gray-500 px-3 py-1 rounded text-white hidden dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("clear")}\n      </button>\n    </div>\n\n    <div>\n      <label for="magicCrib" class="text-gray-800 dark:text-white">${t("crib")}:</label>\n      <input \n        type="text" \n        id="magicCrib" \n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" \n        placeholder="${t("cribPlaceholder")}"\n      >\n    </div>\n\n    <div>\n      <label for="magicDepth" class="text-gray-800 dark:text-white">${t("depth")}:</label>\n      <input \n        type="number" \n        id="magicDepth" \n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        value="1" min="1" max="5"\n      >\n    </div>\n\n    <div>\n      <label for="magicIntensive" class="text-gray-800 dark:text-white flex items-center gap-2">\n        <input type="checkbox" id="magicIntensive">\n        ${t("intensive")}\n      </label>\n    </div>\n\n    <div \n      id="magicResults" \n      class="bg-white border border-gray-300 text-green-600 text-sm whitespace-pre-wrap break-words p-3 rounded hidden my-4 dark:bg-gray-800 dark:border-gray-700 dark:text-green-400"\n    ></div>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};(async e=>{var t;await(t="./vendor/pako.min.js",new Promise((e=>{const n=document.createElement("script");n.src=t,n.onload=e,document.head.appendChild(n)}))),e&&e()})((()=>{const t=document.getElementById("magicInput"),n=document.getElementById("magicResults"),r=document.getElementById("magicAnalyzeBtn"),a=document.getElementById("magicClearBtn"),o=document.getElementById("magicCrib"),d=document.getElementById("magicDepth"),l=document.getElementById("magicIntensive"),i=e=>{try{return"object"==typeof JSON.parse(e)}catch{return!1}},s=(e,t)=>e.split("").map((e=>String.fromCharCode(e.charCodeAt(0)^t))).join(""),c=(t,n,r,a)=>{const o=[],d=t.trim(),l=(e=>{const t={};for(const a of e)t[a]=(t[a]||0)+1;const n=e.length;let r=0;for(const a in t){const e=t[a]/n;r-=e*Math.log2(e)}return r})(d).toFixed(4);o.push(`📊 ${e("entropy")}: ${l} bits/caractere`),/^[\x00-\x7F]+$/.test(d)&&o.push(`🧠 ${e("ascii")}`),/^[ -~]+$/.test(d)&&o.push(`🧩 ${e("printable")}`),(e=>{try{return btoa(atob(e.replace(/\s+/g,"")))===e.replace(/\s+/g,"")}catch{return!1}})(d)&&o.push(`🔐 ${e("maybeBase64")}`),/^[\da-f\s]+$/i.test(d.replace(/\s+/g,""))&&o.push(`🔎 ${e("maybeHex")}`),i(d)&&o.push(`📦 ${e("validJson")}`);const c=(e=>{const t=e.split(".");if(3!==t.length)return null;try{const e=JSON.parse(atob(t[1]));return JSON.stringify(e,null,2)}catch{return null}})(d);c&&(o.push(`🔓 ${e("jwtDecoded")}:`),o.push(c));const g=(e=>{try{const t=Uint8Array.from(atob(e),(e=>e.charCodeAt(0)));return window.pako.inflate(t,{to:"string"})}catch{return null}})(d);if(g&&(o.push(`📦 ${e("gzipDecoded")}:`),o.push(g)),a){new RegExp(a,"i").test(d)?o.push(`🔍 ${e("cribFound")}: ${a}`):o.push(`❌ ${e("cribNotFound")}: ${a}`)}if(r){const t=(e=>e.replace(/[a-zA-Z]/g,(e=>String.fromCharCode((e<="Z"?65:97)+(e.charCodeAt(0)-(e<="Z"?65:97)+13)%26))))(d);i(t)&&o.push(`🔁 ${e("rot13Json")}`);for(let n=1;n<10;n++){const t=s(d,n);if(i(t)){o.push(`🔁 ${e("xorJson")} ${n}`);break}}}return o.join("\n")};r.addEventListener("click",(()=>{const e=t.value.trim();if(!e)return;const r=o.value,i=(parseInt(d.value),l.checked),s=c(e,0,i,r);n.textContent=s,n.classList.remove("hidden"),a.classList.remove("hidden")})),a.addEventListener("click",(()=>{t.value="",n.classList.add("hidden"),n.textContent="",a.classList.add("hidden")}))}))}},En=Object.freeze(Object.defineProperty({__proto__:null,default:In},Symbol.toStringTag,{value:"Module"})),$n={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){return`\n    <textarea \n      id="mdInput" \n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" \n      rows="6" \n      placeholder="${(e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e})("placeholder")}"\n    ></textarea>\n\n    <button \n      id="mdRenderBtn" \n      class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded mb-2 text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n    >\n      ${e("generate")}\n    </button>\n\n    <div class="relative">\n      <div \n        id="mdOutput" \n        class="markdown-preview bg-white border border-gray-300 text-gray-800 rounded p-4 max-h-96 overflow-y-auto text-sm dark:bg-gray-800 dark:border-gray-700 dark:text-white p-6"\n      ></div>\n\n      <button \n        id="copyMdBtn" \n        class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("copy")}\n      </button>\n\n      <span \n        id="copiedMdMsg" \n        class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("mdInput"),t=document.getElementById("mdOutput"),n=document.getElementById("mdRenderBtn"),r=document.getElementById("copyMdBtn"),a=document.getElementById("copiedMdMsg"),o=()=>{const n=e.value,r=window.marked.parse(n);t.innerHTML=r},d=()=>{(()=>{if(document.getElementById("markdownPreviewStyles"))return;const e=document.createElement("style");e.id="markdownPreviewStyles",e.innerHTML="\n        .markdown-preview h1 { font-size: 1.5rem; font-weight: bold; margin-top: 1rem; }\n        .markdown-preview h2 { font-size: 1.25rem; font-weight: bold; margin-top: 1rem; }\n        .markdown-preview p { margin: 0.5rem 0; }\n        .markdown-preview ul, .markdown-preview ol { margin: 0.5rem 0 0.5rem 1.5rem; list-style-type: disc; }\n        .markdown-preview code { background-color: #1f2937; padding: 2px 4px; border-radius: 4px; color: #93c5fd; font-family: monospace; }\n        .markdown-preview pre { background-color: #1f2937; padding: 1rem; border-radius: 8px; overflow-x: auto; color: #93c5fd; }\n        .markdown-preview blockquote { border-left: 4px solid #6b7280; padding-left: 1rem; color: #9ca3af; font-style: italic; }\n        .markdown-preview table { border-collapse: collapse; margin: 1rem 0; }\n        .markdown-preview th, .markdown-preview td { border: 1px solid #4b5563; padding: 0.5rem; }\n        .markdown-preview th { background-color: #374151; color: white; }\n        .markdown-preview img { max-width: 100%; border-radius: 0.5rem; margin: 1rem 0; }\n        .markdown-preview a { color: #60a5fa; text-decoration: underline; }\n      ",document.head.appendChild(e)})(),n.addEventListener("click",o),r.addEventListener("click",(()=>{const e=t.innerHTML;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))}))};if(void 0===window.marked){const e=document.createElement("script");e.src="./vendor/marked.min.js",e.onload=d,document.head.appendChild(e)}else d()}},Tn=Object.freeze(Object.defineProperty({__proto__:null,default:$n},Symbol.toStringTag,{value:"Module"})),Ln={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){return`\n    <textarea \n      id="mdRawInput" \n      class="w-full p-2 bg-white border border-gray-300 rounded mb-2 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" \n      rows="6" \n      placeholder="${(e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e})("placeholder")}"\n    ></textarea>\n\n    <button \n      id="mdRawRenderBtn" \n      class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded mb-2 text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n    >\n      ${e("generate")}\n    </button>\n\n    <div class="relative">\n      <pre \n        id="mdRawOutput" \n        class="bg-white border border-gray-300 text-green-600 rounded p-4 max-h-96 overflow-y-auto text-sm whitespace-pre-wrap break-words pr-16 dark:bg-gray-800 dark:border-gray-700 dark:text-green-400 p-6"\n      ></pre>\n\n      <button \n        id="copyMdRawBtn" \n        class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n      >\n        ${e("copy")}\n      </button>\n\n      <span \n        id="copiedMdRawMsg" \n        class="absolute top-2 right-2 text-green-600 px-2 py-1 hidden dark:text-green-400"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("mdRawInput"),t=document.getElementById("mdRawOutput"),n=document.getElementById("mdRawRenderBtn"),r=document.getElementById("copyMdRawBtn"),a=document.getElementById("copiedMdRawMsg"),o=()=>{const n=e.value,r=window.marked.parse(n);t.innerText=r},d=()=>{n.addEventListener("click",o),r.addEventListener("click",(()=>{const e=t.innerText;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))}))};if("undefined"==typeof marked){const e=document.createElement("script");e.src="./vendor/marked.min.js",e.onload=d,document.head.appendChild(e)}else d()}},jn=Object.freeze(Object.defineProperty({__proto__:null,default:Ln},Symbol.toStringTag,{value:"Module"})),Cn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="gap-2">\n      <div class="flex gap-2 items-center">\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("quantity")}</label>\n        <input\n          type="number"\n          id="mercosulQtd"\n          min="1"\n          value="1"\n          class="w-20 bg-white border border-gray-300 text-gray-800 rounded p-1 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        />\n      </div>\n\n      <button\n        id="gerarMercosulBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600 m-5 ml-0"\n      >\n        ${e("generate")}\n      </button>\n\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("convert_label")}</label>\n        <input\n          type="text"\n          id="inputConversao"\n          placeholder="${t("convert_placeholder")}"\n          class="bg-white border border-gray-300 text-green-600 rounded p-1 w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400 dark:placeholder-gray-400"\n        />\n        <button\n          id="converterPlacaBtn"\n          class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500 m-5 ml-0"\n        >\n          ${t("convert_button")}\n        </button>\n      </div>\n\n      <textarea\n        id="mercosulResultado"\n        rows="6"\n        readonly\n        class="bg-white border border-gray-300 text-green-600 p-2 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n      ></textarea>\n\n      <div class="flex gap-2 mt-2">\n        <button\n          id="copiarMercosulBtn"\n          class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n        >\n          ${e("copy")}\n        </button>\n        <button\n          id="exportarMercosulBtn"\n          class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n        >\n          ${t("export_csv")}\n        </button>\n      </div>\n    </div>\n    `},init(){const t=document.getElementById("gerarMercosulBtn"),n=document.getElementById("copiarMercosulBtn"),r=document.getElementById("exportarMercosulBtn"),a=document.getElementById("converterPlacaBtn"),o=document.getElementById("mercosulResultado"),d=document.getElementById("inputConversao"),l=()=>String.fromCharCode(65+Math.floor(26*Math.random())),i=()=>Math.floor(10*Math.random()).toString(),s=()=>[l(),l(),l(),i(),l(),i(),i()].join("");t.addEventListener("click",(()=>{const e=parseInt(document.getElementById("mercosulQtd").value),t=Array.from({length:e},s);o.value=t.join("\n")})),n.addEventListener("click",(()=>{navigator.clipboard.writeText(o.value).then((()=>{n.textContent=e("copied"),setTimeout((()=>n.textContent=e("copy")),1500)}))})),r.addEventListener("click",(()=>{const e=o.value.trim().split("\n").filter((e=>e));e.length&&(e=>{const t=e.map((e=>`"${e}"`)).join("\n"),n=new Blob([t],{type:"text/csv;charset=utf-8;"}),r=URL.createObjectURL(n),a=document.createElement("a");a.href=r,a.download="placas-mercosul.csv",a.click(),URL.revokeObjectURL(r)})(e)})),a.addEventListener("click",(()=>{const e=(e=>{const t=e.toUpperCase().match(/^([A-Z]{3})(\d{4})$/);if(!t)return"Formato inválido";const[n,r,a]=t;return r.slice(0,3)+a[0]+r[2]+a.slice(1)})(d.value.trim());o.value=e}))}},Sn=Object.freeze(Object.defineProperty({__proto__:null,default:Cn},Symbol.toStringTag,{value:"Module"})),On={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="space-y-3 mb-4">\n      ${["background-color","color","transform","opacity","border-radius"].map((e=>`\n        <div class="bg-white border border-gray-300 p-3 rounded dark:bg-gray-800 dark:border-gray-700">\n          <label class="text-sm text-gray-800 font-bold block mb-1 dark:text-white">${t(e)}</label>\n          <div class="grid grid-cols-3 gap-2">\n            <input\n              type="number"\n              id="${e}-dur"\n              value="0.3"\n              step="0.1"\n              min="0"\n              class="p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n              placeholder="${t("duration")}"\n            />\n            <input\n              type="number"\n              id="${e}-delay"\n              value="0"\n              step="0.1"\n              min="0"\n              class="p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n              placeholder="${t("delay")}"\n            />\n            <select\n              id="${e}-ease"\n              class="p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n            >\n              <option value="ease">${t("ease")}</option>\n              <option value="linear">${t("linear")}</option>\n              <option value="ease-in">${t("ease-in")}</option>\n              <option value="ease-out">${t("ease-out")}</option>\n              <option value="ease-in-out">${t("ease-in-out")}</option>\n            </select>\n          </div>\n        </div>\n      `)).join("")}\n    </div>\n\n    <button\n      id="multiTransCopy"\n      class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded mb-4 text-white dark:bg-green-500 dark:hover:bg-green-600"\n    >\n      ${e("copy")}\n    </button>\n\n    <div class="bg-white border border-gray-300 p-10 rounded text-center dark:bg-gray-800 dark:border-gray-700">\n      <div\n        id="multiTransPreview"\n        class="transition-all duration-300 ease-in-out w-40 h-20 bg-blue-500 text-white flex items-center justify-center rounded hover:bg-red-500 hover:text-black hover:opacity-75 hover:scale-110"\n      >\n        ${t("preview")}\n      </div>\n    </div>\n\n    <pre\n      id="multiTransCSS"\n      class="mt-4 bg-white border border-gray-300 text-green-600 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=["background-color","color","transform","opacity","border-radius"],n=document.getElementById("multiTransPreview"),r=document.getElementById("multiTransCSS"),a=document.getElementById("multiTransCopy"),o=()=>{const e=t.map((e=>{const t=document.getElementById(`${e}-dur`).value,n=document.getElementById(`${e}-delay`).value;return`${e} ${t}s ${document.getElementById(`${e}-ease`).value} ${n}s`})),a=`transition: ${e.join(", ")};`;n.style.transition=e.join(", "),r.innerText=a};t.forEach((e=>{["dur","delay","ease"].forEach((t=>{document.getElementById(`${e}-${t}`).addEventListener("input",o)}))})),a.addEventListener("click",(()=>{const t=r.innerText;navigator.clipboard.writeText(t).then((()=>{a.innerText=e("copied"),setTimeout((()=>a.innerText=e("copy")),1500)}))})),o()}},Mn=Object.freeze(Object.defineProperty({__proto__:null,default:On},Symbol.toStringTag,{value:"Module"})),Dn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-3">\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("color_label")}</label>\n        <input\n          type="color"\n          id="neonColor"\n          class="w-full h-10 rounded border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-700"\n          value="#00ffff"\n        />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("intensity_label")}</label>\n        <input\n          type="range"\n          id="neonIntensity"\n          min="1"\n          max="10"\n          step="1"\n          value="5"\n          class="w-full"\n        />\n        <span id="neonIntensityValue" class="text-sm text-gray-600 dark:text-gray-400 block text-center">5</span>\n      </div>\n    </div>\n\n    <button\n      id="neonCopyBtn"\n      class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n    >\n      ${e("copy")}\n    </button>\n\n    <div class="mt-4 bg-white border border-gray-300 p-10 rounded text-center dark:bg-black dark:border-gray-700">\n      <h2 id="neonPreview" class="text-2xl font-bold text-gray-800 dark:text-white">\n        ${t("preview_text")}\n      </h2>\n    </div>\n\n    <pre\n      id="neonCSS"\n      class="mt-2 bg-white border border-gray-300 text-green-600 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("neonColor"),n=document.getElementById("neonIntensity"),r=document.getElementById("neonIntensityValue"),a=document.getElementById("neonPreview"),o=document.getElementById("neonCSS"),d=document.getElementById("neonCopyBtn"),l=()=>{const e=t.value,d=parseInt(n.value,10);r.innerText=d;const l=Array.from({length:d},((t,n)=>`0 0 ${2+2*n}px ${e}`)).join(", ");a.style.textShadow=l,o.innerText=`text-shadow: ${l};`};[t,n].forEach((e=>e.addEventListener("input",l))),d.addEventListener("click",(()=>{const t=o.innerText;t&&navigator.clipboard.writeText(t).then((()=>{d.innerText=e("copied"),setTimeout((()=>d.innerText=e("copy")),1500)}))})),l()}},An=Object.freeze(Object.defineProperty({__proto__:null,default:Dn},Symbol.toStringTag,{value:"Module"})),Pn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="space-y-4">\n      <div>\n        <label for="pingHost" class="block mb-1 text-sm text-gray-800 dark:text-gray-300">${t("input_label")}</label>\n        <input\n          id="pingHost"\n          type="text"\n          placeholder="${t("input_placeholder")}"\n          class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n        />\n      </div>\n\n      <button\n        id="pingBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("send_ping")}\n      </button>\n\n      <div id="pingResultArea" class="hidden">\n        <label class="block mt-4 mb-1 text-sm text-gray-800 dark:text-gray-300">${t("result_label")}</label>\n        <textarea\n          id="pingOutput"\n          rows="8"\n          readonly\n          class="w-full p-2 bg-white border border-gray-300 text-green-600 font-mono rounded dark:bg-gray-800 dark:border-gray-700 dark:text-green-400"\n        >${t("waiting")}</textarea>\n\n        <button\n          id="pingCopyBtn"\n          class="mt-2 bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    </div>\n    `},init(){const t=document.getElementById("pingHost"),n=document.getElementById("pingBtn"),r=document.getElementById("pingResultArea"),a=document.getElementById("pingOutput"),o=document.getElementById("pingCopyBtn");n.addEventListener("click",(()=>{const e=t.value.trim();e?(n.textContent="Pingando...",n.disabled=!0,a.value="Aguarde...",r.classList.remove("hidden"),fetch(`https://devutils.tools/api/ping.json?host=${encodeURIComponent(e)}`).then((e=>e.json())).then((e=>{e.success?a.value=e.raw.join("\n"):a.value="Erro: "+(e.message||"Host inacessível")})).catch((()=>{a.value="Erro ao realizar ping."})).finally((()=>{n.textContent="Enviar Ping",n.disabled=!1}))):alert("Digite um domínio ou IP para pingar.")})),o.addEventListener("click",(()=>{navigator.clipboard.writeText(a.value).then((()=>{o.textContent=e("copied"),setTimeout((()=>o.textContent=e("copy")),1500)}))}))}},Un=Object.freeze(Object.defineProperty({__proto__:null,default:Pn},Symbol.toStringTag,{value:"Module"})),zn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <input\n      id="portScanHost"\n      type="text"\n      placeholder="${t("host_placeholder")}"\n      class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n    />\n\n    <div class="flex flex-wrap gap-2 mb-2">\n      <button\n        data-ports="80,443,8080"\n        class="profileBtn bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n      >\n        🌐 ${t("profile_web")}\n      </button>\n      <button\n        data-ports="21,22,23,25,110,139,445"\n        class="profileBtn bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n      >\n        🔒 ${t("profile_security")}\n      </button>\n      <button\n        data-ports="1433,3306,5432,27017"\n        class="profileBtn bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n      >\n        💾 ${t("profile_db")}\n      </button>\n    </div>\n\n    <input\n      id="portScanList"\n      type="text"\n      placeholder="${t("ports_placeholder")}"\n      class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n    />\n\n    <div class="flex gap-2 mb-4">\n      <button\n        id="scanPortBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("scan")}\n      </button>\n      <button\n        id="clearPortScanBtn"\n        class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n      >\n        ${e("clear")}\n      </button>\n    </div>\n\n    <div\n      id="portScanResult"\n      class="hidden bg-white border border-gray-300 p-3 mt-2 rounded text-sm text-green-600 whitespace-pre-wrap dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"\n    ></div>\n    `},init(){const e=e=>{var t;return(null==(t=zn.i18n)?void 0:t[e])??e},t=document.getElementById("portScanHost"),n=document.getElementById("portScanList"),r=document.getElementById("portScanResult");document.querySelectorAll(".profileBtn").forEach((e=>{e.addEventListener("click",(()=>{n.value=e.getAttribute("data-ports")}))})),document.getElementById("scanPortBtn").addEventListener("click",(async()=>{const a=t.value.trim(),o=n.value.trim();if(!a||!o)return r.textContent=e("error_fill_fields"),void r.classList.remove("hidden");r.textContent=e("scanning"),r.classList.remove("hidden");try{const t=await fetch(`https://devutils.tools/api/scan-port.json?host=${encodeURIComponent(a)}&ports=${encodeURIComponent(o)}`),n=await t.json();if(n.error)return void(r.textContent=`Erro: ${n.error}`);let d=`<p class="mb-2 text-green-300">${e("host_label")}: <strong>${n.host}</strong></p>`;d+='<div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2">',n.resultado.forEach((({porta:t,status:n})=>{const r="aberta"===n?`<div class="bg-green-700 px-2 py-1 rounded text-white text-center">✅ ${e("port_open")} ${t}</div>`:`<div class="bg-red-700 px-2 py-1 rounded text-white text-center">❌ ${e("port_closed")} ${t}</div>`;d+=r})),d+="</div>",r.innerHTML=d}catch(d){r.textContent=`${e("scan_error")}: ${d.message}`}})),document.getElementById("clearPortScanBtn").addEventListener("click",(()=>{t.value="",n.value="",r.textContent="",r.classList.add("hidden")}))}},Rn=Object.freeze(Object.defineProperty({__proto__:null,default:zn},Symbol.toStringTag,{value:"Module"})),Hn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-3">\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("overlay_color")}</label>\n        <input\n          type="color"\n          id="overlayColor"\n          value="#000000"\n          class="w-full h-10 rounded border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-700"\n        />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("opacity")}</label>\n        <input\n          type="range"\n          id="overlayAlpha"\n          min="0"\n          max="1"\n          step="0.01"\n          value="0.4"\n          class="w-full"\n        />\n        <span id="overlayAlphaValue" class="text-sm text-gray-600 dark:text-gray-400 block text-center">0.40</span>\n      </div>\n      <div class="col-span-2">\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("blend_mode")}</label>\n        <select\n          id="overlayBlend"\n          class="w-full p-1 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        >\n          <option value="normal">normal</option>\n          <option value="multiply">multiply</option>\n          <option value="overlay">overlay</option>\n          <option value="screen">screen</option>\n          <option value="soft-light">soft-light</option>\n          <option value="hard-light">hard-light</option>\n          <option value="color-dodge">color-dodge</option>\n          <option value="darken">darken</option>\n          <option value="lighten">lighten</option>\n        </select>\n      </div>\n    </div>\n\n    <div class="flex gap-2 mb-3">\n      <button\n        id="overlayCopy"\n        class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${e("copy")}\n      </button>\n      <button\n        id="overlayRefresh"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        🔄 ${t("new_image")}\n      </button>\n      <label class="text-sm text-gray-800 dark:text-gray-300 flex items-center gap-2">\n        <input type="file" id="overlayUpload" accept="image/*" class="hidden" />\n        <span class="bg-white border border-gray-300 text-gray-800 hover:bg-gray-100 px-3 py-1 rounded cursor-pointer dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:hover:bg-gray-600">\n          📁 ${t("upload_local")}\n        </span>\n      </label>\n    </div>\n\n    <div class="mt-4 relative h-56 border border-gray-300 rounded overflow-hidden dark:border-gray-700" id="overlayPreviewWrapper">\n      <img id="overlayImage" src="" class="w-full h-full object-cover" />\n      <div id="overlayPreview" class="absolute inset-0"></div>\n    </div>\n\n    <pre\n      id="overlayCSS"\n      class="mt-2 bg-white border border-gray-300 text-green-600 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("overlayColor"),n=document.getElementById("overlayAlpha"),r=document.getElementById("overlayAlphaValue"),a=document.getElementById("overlayBlend"),o=document.getElementById("overlayPreview"),d=document.getElementById("overlayImage"),l=document.getElementById("overlayCSS"),i=document.getElementById("overlayCopy"),s=document.getElementById("overlayRefresh"),c=document.getElementById("overlayUpload"),g=()=>{const e=t.value,d=parseFloat(n.value),i=a.value,s=((e,t=1)=>{const n=e.replace("#",""),r=parseInt(n,16);return`rgba(${r>>16&255}, ${r>>8&255}, ${255&r}, ${t})`})(e,d);r.innerText=d.toFixed(2),o.style.background=s,o.style.mixBlendMode=i;const c=`\n  .overlay {\n    background: ${s};\n    mix-blend-mode: ${i};\n  }\n      `.trim();l.innerText=c},u=()=>{fetch("https://api.unsplash.com/photos/random?query=landscape&orientation=landscape",{headers:{Authorization:"Client-ID qqX-zCJJ74tXG59lFDJOO9vk_FPejIPyfSD0R33_CXc"}}).then((e=>e.json())).then((e=>{var t;(null==(t=e.urls)?void 0:t.regular)&&(d.src=e.urls.regular)}))};[t,n,a].forEach((e=>e.addEventListener("input",g))),c.addEventListener("change",(e=>{const t=e.target.files[0];if(!t)return;const n=new FileReader;n.onload=e=>{d.src=e.target.result},n.readAsDataURL(t)})),s.addEventListener("click",u),i.addEventListener("click",(()=>{const t=l.innerText;navigator.clipboard.writeText(t).then((()=>{i.innerText=e("copied"),setTimeout((()=>i.innerText=e("copy")),1500)}))})),g(),u()}},Jn=Object.freeze(Object.defineProperty({__proto__:null,default:Hn},Symbol.toStringTag,{value:"Module"})),Nn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n      <div class="grid grid-cols-2 sm:grid-cols-3 gap-4">\n        <div>\n          <label class="block mb-1">${e("width")}</label>\n          <input type="number" id="imgWidth" value="320"\n            class="w-full p-2 rounded bg-white border border-gray-300 dark:bg-gray-700 dark:border-gray-700 dark:text-white"/>\n        </div>\n        <div>\n          <label class="block mb-1">${e("height")}</label>\n          <input type="number" id="imgHeight" value="240"\n            class="w-full p-2 rounded bg-white border border-gray-300 dark:bg-gray-700 dark:border-gray-700 dark:text-white"/>\n        </div>\n        <div>\n          <label class="block mb-1">${e("font_size")}</label>\n          <input type="number" id="fontSize" value="20"\n            class="w-full p-2 rounded bg-white border border-gray-300 dark:bg-gray-700 dark:border-gray-700 dark:text-white"/>\n        </div>\n        <div>\n          <label class="block mb-1">${e("background_color")}</label>\n          <input type="color" id="bgColor" value="#10fef4"\n            class="w-full h-10 p-1 rounded bg-white border border-gray-300 dark:bg-gray-700 dark:border-gray-700 dark:text-white"/>\n        </div>\n        <div>\n          <label class="block mb-1">${e("text_color")}</label>\n          <input type="color" id="textColor" value="#000000"\n            class="w-full h-10 p-1 rounded bg-white border border-gray-300 dark:bg-gray-700 dark:border-gray-700 dark:text-white"/>\n        </div>\n        <div>\n          <label class="block mb-1">${e("format")}</label>\n          <select id="imgFormat"\n            class="w-full p-2 rounded bg-white border border-gray-300 dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n            <option value="png">.png</option>\n            <option value="jpg">.jpg</option>\n            <option value="gif">.gif</option>\n          </select>\n        </div>\n      </div>\n\n      <div>\n        <label class="block mb-1 mt-2">${e("text")}</label>\n        <input type="text" id="imgText" value="${e("placeholder_text_default")}"\n          class="w-full p-2 rounded bg-white border border-gray-300 dark:bg-gray-700 dark:border-gray-700 dark:text-white"/>\n      </div>\n\n      <button id="btnGerar"\n        class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white dark:bg-indigo-500 dark:hover:bg-indigo-600">\n        ${e("generate")}\n      </button>\n\n      <div id="previewContainer" class="mt-4 hidden space-y-2">\n        <canvas id="previewCanvas"\n          class="max-w-full border border-gray-300 bg-white rounded dark:border-gray-700 dark:bg-gray-700"></canvas>\n        <a id="btnDownload" download="placeholder.png"\n          class="inline-block bg-gray-700 hover:bg-gray-600 px-4 py-1 rounded text-sm text-white text-center cursor-pointer dark:bg-gray-600 dark:hover:bg-gray-500">\n          ${e("download_image")}\n        </a>\n      </div>\n    </div>\n    `},init(){const e=document.getElementById("previewCanvas"),t=e.getContext("2d");document.getElementById("btnGerar").addEventListener("click",(()=>{(()=>{const n=parseInt(document.getElementById("imgWidth").value),r=parseInt(document.getElementById("imgHeight").value),a=document.getElementById("bgColor").value,o=document.getElementById("textColor").value,d=parseInt(document.getElementById("fontSize").value),l=document.getElementById("imgText").value,i=document.getElementById("imgFormat").value;e.width=n,e.height=r,t.fillStyle=a,t.fillRect(0,0,n,r),t.fillStyle=o,t.font=`bold ${d}px sans-serif`,t.textAlign="center",t.textBaseline="middle",t.fillText(l,n/2,r/2);const s="jpg"===i?"image/jpeg":"gif"===i?"image/gif":"image/png",c=e.toDataURL(s),g=document.getElementById("btnDownload");g.href=c,g.download=`placeholder.${i}`})(),document.getElementById("previewContainer").classList.remove("hidden")}))}},qn=Object.freeze(Object.defineProperty({__proto__:null,default:Nn},Symbol.toStringTag,{value:"Module"})),Fn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.3",render:()=>`\n      <input\n        type="file"\n        accept="image/png,image/jpeg"\n        id="qrImageInput"\n        class="mb-3 w-full text-sm text-gray-800 border border-gray-300 rounded p-2 dark:text-gray-400 dark:bg-gray-700 dark:border-gray-700"\n      />\n\n      <div id="qrPreview" class="mb-3 hidden"></div>\n\n      <textarea\n        id="qrResult"\n        class="w-full p-2 bg-white border border-gray-300 text-green-600 text-sm rounded hidden resize-y mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        rows="4"\n        readonly\n      ></textarea>\n\n      <div class="flex gap-2">\n        <button\n          id="qrCopyBtn"\n          class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white hidden dark:bg-gray-600 dark:hover:bg-gray-500"\n        >\n          ${e("copy")}\n        </button>\n        <button\n          id="qrClearBtn"\n          class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white hidden dark:bg-gray-600 dark:hover:bg-gray-500"\n        >\n          ${e("clear")}\n        </button>\n      </div>\n    `,init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};(e=>{if(window.jsQR)return e();const t=document.createElement("script");t.src="./vendor/jsQR.js",t.onload=e,document.head.appendChild(t)})((()=>{const n=document.getElementById("qrImageInput"),r=document.getElementById("qrPreview"),a=document.getElementById("qrResult"),o=document.getElementById("qrCopyBtn"),d=document.getElementById("qrClearBtn");n.addEventListener("change",(()=>{const e=n.files[0];if(!e)return;if("image/svg+xml"===e.type)return r.innerHTML=`<div class="text-red-400 text-sm">❌ ${t("svg_not_supported")}</div>`,r.classList.remove("hidden"),a.classList.add("hidden"),o.classList.add("hidden"),void d.classList.remove("hidden");const l=new FileReader;l.onload=e=>{const n=new Image;n.src=e.target.result,n.className="max-w-full max-h-[300px] mx-auto rounded border border-gray-700",n.onload=()=>{const e=document.createElement("canvas"),r=e.getContext("2d");e.width=n.width,e.height=n.height,r.drawImage(n,0,0);const l=r.getImageData(0,0,e.width,e.height),i=jsQR(l.data,e.width,e.height);(null==i?void 0:i.data)?(a.value=i.data,a.classList.remove("hidden"),o.classList.remove("hidden")):(a.value=t("no_qr_found"),a.classList.remove("hidden"),o.classList.add("hidden")),d.classList.remove("hidden")},r.innerHTML="",r.appendChild(n),r.classList.remove("hidden")},l.readAsDataURL(e)})),o.addEventListener("click",(()=>{navigator.clipboard.writeText(a.value).then((()=>{o.textContent,o.textContent=e("copied"),setTimeout((()=>o.textContent=e("copy")),1500)}))})),d.addEventListener("click",(()=>{n.value="",r.innerHTML="",r.classList.add("hidden"),a.value="",a.classList.add("hidden"),o.classList.add("hidden"),d.classList.add("hidden")}))}))}},Vn=Object.freeze(Object.defineProperty({__proto__:null,default:Fn},Symbol.toStringTag,{value:"Module"})),Gn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea\n        id="qpInput"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 font-mono text-sm dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n        rows="4"\n        placeholder="${t("placeholder")}"\n      ></textarea>\n\n      <div class="flex gap-2 mb-4">\n        <button id="qpAnalyzeBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-sm text-white dark:bg-blue-500 dark:hover:bg-blue-600">${t("analyze")}</button>\n        <button id="qpClearBtn" class="hidden bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500">${e("clear")}</button>\n        <button id="qpCopyBtn" class="hidden bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500">${e("copy")}</button>\n        <button id="qpOpenBtn" class="hidden bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500" disabled>${t("open")}</button>\n      </div>\n\n      <div id="errorURL" class="text-sm font-mono mb-3 text-red-600 bg-white border border-red-300 p-3 rounded break-words hidden dark:bg-gray-900 dark:border-red-500 dark:text-red-400"></div>\n\n      <div id="qpExtras" class="hidden">\n        <div id="qpPreview" class="text-sm font-mono mb-3 text-green-600 bg-white border border-gray-300 p-3 rounded break-words dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"></div>\n\n        <div id="qpMeta" class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6 text-sm text-gray-800 dark:text-gray-300"></div>\n\n        <table class="w-full text-sm text-gray-800 mb-4 border border-gray-300 rounded border-collapse dark:text-gray-200 dark:border-gray-700" id="qpParamsTable">\n          <thead class="bg-gray-200 text-gray-800 dark:bg-gray-900 dark:text-gray-100">\n            <tr>\n              <th class="text-center px-2 py-1 w-[20px]">✖</th>\n              <th class="text-left px-2 py-1">${t("key")}</th>\n              <th class="text-left px-2 py-1">${t("value")}</th>\n            </tr>\n          </thead>\n          <tbody id="qpParamsBody"></tbody>\n        </table>\n\n        <div class="grid grid-cols-2 gap-4 mb-3">\n          <input id="qpKey" type="text" placeholder="${t("key")}" class="p-2 bg-white border border-gray-300 text-gray-800 text-sm rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" />\n          <input id="qpValue" type="text" placeholder="${t("value")}" class="p-2 bg-white border border-gray-300 text-gray-800 text-sm rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400" />\n        </div>\n\n        <button id="qpAddBtn" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm text-white dark:bg-blue-500 dark:hover:bg-blue-600">${t("add_param")}</button>\n      </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("qpInput"),r=document.getElementById("qpPreview"),a=document.getElementById("errorURL"),o=document.getElementById("qpMeta"),d=document.getElementById("qpParamsBody"),l=document.getElementById("qpCopyBtn"),i=document.getElementById("qpClearBtn"),s=document.getElementById("qpAnalyzeBtn"),c=document.getElementById("qpAddBtn"),g=document.getElementById("qpKey"),u=document.getElementById("qpValue"),p=document.getElementById("qpOpenBtn");let b;const y=[],m=document.getElementById("qpExtras"),v=e=>{m.classList.toggle("hidden",!e),l.classList.toggle("hidden",!e),i.classList.toggle("hidden",!e),p.classList.toggle("hidden",!e),p.disabled=!e},h=()=>{b&&(r.innerHTML=`\n        <span class="text-gray-400">${b.protocol}//</span>\n        <span class="text-yellow-400">${b.hostname}</span>\n        <span class="text-gray-400">${b.port?":"+b.port:""}${b.pathname}</span>\n        <span class="text-blue-400">${b.search}</span>\n      `)},x=()=>{d.innerHTML="",y.forEach(((e,n)=>{const r=document.createElement("tr"),a=document.createElement("td");a.className="text-center";const o=document.createElement("button");o.textContent="✖",o.title=t("remove_key"),o.className="text-red-400 hover:text-red-300 text-xs",o.addEventListener("click",(()=>{y.splice(n,1),x(),w()})),a.appendChild(o);const l=document.createElement("td");l.className="px-2 py-1";const i=document.createElement("input");i.value=e.key,i.className="w-full p-1 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white",i.addEventListener("input",(e=>{y[n].key=e.target.value,w()})),l.appendChild(i);const s=document.createElement("td");s.className="px-2 py-1";const c=document.createElement("input");c.value=e.value,c.className="w-full p-1 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white",c.addEventListener("input",(e=>{y[n].value=e.target.value,w()})),s.appendChild(c),r.appendChild(a),r.appendChild(l),r.appendChild(s),d.appendChild(r)}))},w=()=>{if(!b)return;const e=new URLSearchParams;y.forEach((t=>{t.key&&e.append(t.key,t.value)})),b.search=e.toString(),h()};s.addEventListener("click",(()=>{const e=n.value.trim();if(a.classList.add("hidden"),!/^https?:\/\//i.test(e))return a.innerHTML=`<span class="text-red-400">${t("url_prefix_error")}</span>`,a.classList.remove("hidden"),o.innerHTML="",d.innerHTML="",v(!1),void(b=null);try{b=new URL(e),y.length=0,b.searchParams.forEach(((e,t)=>{y.push({key:t,value:e})})),o.innerHTML=`\n        <div><strong>protocol: </strong>${b.protocol}</div>\n        <div><strong>hostname: </strong>${b.hostname}</div>\n        <div><strong>port: </strong>${b.port||"-"}</div>\n        <div><strong>pathname: </strong>${b.pathname}</div>\n      `,x(),h(),v(!0)}catch{r.innerHTML=`<span class="text-red-400">${t("url_invalid")}</span>`,o.innerHTML="",d.innerHTML="",v(!1),b=null}})),c.addEventListener("click",(()=>{const e=g.value.trim(),t=u.value.trim();e&&(y.push({key:e,value:t}),g.value="",u.value="",x(),w())})),i.addEventListener("click",(()=>{n.value="",r.innerHTML="",o.innerHTML="",d.innerHTML="",y.length=0,b=null,v(!1)})),l.addEventListener("click",(()=>{b&&navigator.clipboard.writeText(b.toString()).then((()=>{l.textContent=e("copied"),setTimeout((()=>l.textContent=e("copy")),1500)}))})),p.addEventListener("click",(()=>{b&&window.open(b.toString(),"_blank")})),v(!1)}},Yn=Object.freeze(Object.defineProperty({__proto__:null,default:Gn},Symbol.toStringTag,{value:"Module"})),Xn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="grid grid-cols-2 gap-2 mb-2">\n        <input\n          id="emailCount"\n          type="number"\n          min="1"\n          value="10"\n          class="p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded"\n          placeholder="${t("quantity_placeholder")}"\n        />\n        <input\n          id="emailDomain"\n          type="text"\n          value="example.com"\n          class="p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded"\n          placeholder="${t("domain_placeholder")}"\n        />\n      </div>\n\n      <button\n        id="emailGenBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white"\n      >\n        ${t("generate")}\n      </button>\n\n      <textarea\n        id="emailOutput"\n        class="w-full p-2 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-700 rounded mt-2"\n        rows="6"\n        readonly\n        placeholder="${t("output_placeholder")}"\n      ></textarea>\n\n      <button\n        id="emailCopyBtn"\n        class="mt-2 bg-green-600 hover:bg-green-700 px-4 py-2 rounded text-white"\n      >\n        ${e("copy")}\n      </button>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("emailGenBtn"),r=document.getElementById("emailCount"),a=document.getElementById("emailDomain"),o=document.getElementById("emailOutput"),d=document.getElementById("emailCopyBtn");n.addEventListener("click",(()=>{const e=parseInt(r.value,10),n=a.value.trim();if(!n||e<=0)return void(o.value=`❌ ${t("error_input")}`);const d=Array.from({length:e},(()=>`${(()=>{const e=["joao","maria","ana","carlos","lucas","paula","rafa","leo","isa","duda"],t=["silva","souza","oliveira","costa","pereira","ferreira","santos"];return`${e[Math.floor(Math.random()*e.length)]}.${t[Math.floor(Math.random()*t.length)]}${Math.floor(1e3*Math.random())}`})()}@${n}`));o.value=d.join("\n")})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(o.value).then((()=>{d.innerText,d.innerText=e("copied"),setTimeout((()=>{d.innerText=e("copy")}),1500)}))}))}},Wn=Object.freeze(Object.defineProperty({__proto__:null,default:Xn},Symbol.toStringTag,{value:"Module"})),Qn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="p-4 rounded text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n        <p>${t("instruction")}</p>\n\n        <div class="grid grid-cols-2 gap-4">\n          <div>\n            <label class="block text-sm mb-1">${t("min_label")}</label>\n            <input\n              id="numMin"\n              type="number"\n              value="0"\n              class="p-2 bg-white border border-gray-300 text-green-600 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n            />\n          </div>\n          <div>\n            <label class="block text-sm mb-1">${t("max_label")}</label>\n            <input\n              id="numMax"\n              type="number"\n              value="10"\n              class="p-2 bg-white border border-gray-300 text-green-600 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n            />\n          </div>\n        </div>\n\n        <button\n          id="btnSortear"\n          class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white dark:bg-indigo-500 dark:hover:bg-indigo-600"\n        >\n          ${t("draw_button")}\n        </button>\n\n        <div>\n          <label class="block text-sm mb-1 mt-4">${t("result_label")}</label>\n          <div class="flex gap-2">\n            <input\n              id="resultado"\n              type="text"\n              readonly\n              value=""\n              class="p-2 bg-white border border-gray-300 text-green-600 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n            />\n            <button\n              id="copyResultBtn"\n              class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n            >\n              ${e("copy")}\n            </button>\n          </div>\n        </div>\n      </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("resultado"),r=document.getElementById("copyResultBtn");document.getElementById("btnSortear").addEventListener("click",(()=>{const e=parseInt(document.getElementById("numMin").value,10),r=parseInt(document.getElementById("numMax").value,10);if(isNaN(e)||isNaN(r)||e>r)return n.value=`⚠️ ${t("invalid_range")}`,void n.classList.replace("text-green-400","text-yellow-400");const a=Math.floor(Math.random()*(r-e+1))+e;n.value=a,n.classList.replace("text-yellow-400","text-green-400")})),r.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{r.textContent=e("copied"),setTimeout((()=>r.textContent=e("copy")),1500)}))}))}},Kn=Object.freeze(Object.defineProperty({__proto__:null,default:Qn},Symbol.toStringTag,{value:"Module"})),Zn={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="flex items-center gap-2 mb-4 text-gray-900 dark:text-white">\n        <label for="pwLength" class="text-sm">${t("length")}</label>\n        <input\n          id="pwLength"\n          type="number"\n          min="4"\n          max="64"\n          value="16"\n          class="p-2 rounded w-24 text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        />\n      </div>\n\n      <div class="grid grid-cols-2 gap-4 mb-4 text-gray-900 dark:text-white">\n        <label class="flex items-center gap-2 text-sm">\n          <input type="checkbox" id="pwSymbols" class="accent-blue-600" checked />\n          <span>${t("include_symbols")}</span>\n        </label>\n        <label class="flex items-center gap-2 text-sm">\n          <input type="checkbox" id="pwNumbers" class="accent-blue-600" checked />\n          <span>${t("include_numbers")}</span>\n        </label>\n        <label class="flex items-center gap-2 text-sm">\n          <input type="checkbox" id="pwUppercase" class="accent-blue-600" checked />\n          <span>${t("include_uppercase")}</span>\n        </label>\n        <label class="flex items-center gap-2 text-sm">\n          <input type="checkbox" id="pwLowercase" class="accent-blue-600" checked />\n          <span>${t("include_lowercase")}</span>\n        </label>\n      </div>\n\n      <button\n        id="pwGenBtn"\n        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n      >\n        ${t("generate")}\n      </button>\n\n      <div class="mt-4 flex gap-2">\n        <input\n          id="pwOutput"\n          type="text"\n          value="${t("click_to_generate")}"\n          readonly\n          class="p-2 w-full rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-green-400 font-mono"\n        />\n        <button\n          id="pwCopyBtn"\n          class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-800 dark:text-white px-3 py-1 rounded"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n="abcdefghijklmnopqrstuvwxyz",r="ABCDEFGHIJKLMNOPQRSTUVWXYZ",a="0123456789",o="!@#$%&*-=+_?<>";document.getElementById("pwGenBtn").addEventListener("click",(()=>{const e=((e,d,l,i)=>{let s=n;return i&&(s+=r),l&&(s+=a),d&&(s+=o),s?Array.from({length:e},(()=>s[Math.floor(Math.random()*s.length)])).join(""):`❌ ${t("select_one_type")}`})(parseInt(document.getElementById("pwLength").value),document.getElementById("pwSymbols").checked,document.getElementById("pwNumbers").checked,document.getElementById("pwUppercase").checked);document.getElementById("pwOutput").value=e})),document.getElementById("pwCopyBtn").addEventListener("click",(()=>{const t=document.getElementById("pwOutput").value;navigator.clipboard.writeText(t).then((()=>{const t=document.getElementById("pwCopyBtn");t.innerText,t.innerText=e("copied"),setTimeout((()=>t.innerText=e("copy")),1500)}))}))}},er=Object.freeze(Object.defineProperty({__proto__:null,default:Zn},Symbol.toStringTag,{value:"Module"})),tr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="p-4 rounded text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n        <p>${e("instructions")}</p>\n\n        <textarea\n          id="pessoasLista"\n          rows="6"\n          placeholder="Maria\nJoão\nCarlos\nAna"\n          class="w-full p-2 bg-white border border-gray-300 dark:text-green-600 rounded font-mono resize-none dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        ></textarea>\n\n        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">\n          <div>\n            <label class="block text-sm mb-1">${e("separator")}</label>\n            <select id="separador" class="p-2 bg-white border border-gray-300 text-gray-800 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n              <option value="\n">${e("newline")}</option>\n              <option value=",">${e("comma")}</option>\n              <option value=";">${e("semicolon")}</option>\n              <option value="|">${e("pipe")}</option>\n              <option value=".">${e("dot")}</option>\n              <option value="__custom__">${e("custom")}</option>\n            </select>\n            <input\n              id="separadorCustom"\n              type="text"\n              placeholder="${e("custom_placeholder")}"\n              class="mt-2 p-2 bg-white border border-gray-300 text-gray-800 rounded w-full hidden dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n            />\n          </div>\n          <div>\n            <label class="block text-sm mb-1">${e("quantity")}</label>\n            <input\n              id="qtdSorteio"\n              type="number"\n              min="1"\n              value="1"\n              class="p-2 bg-white border border-gray-300 text-gray-800 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n            />\n          </div>\n        </div>\n\n        <button id="btnSortearPessoas" class="bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded text-sm text-white dark:bg-indigo-500 dark:hover:bg-indigo-600">\n          ${e("draw")} 🎉\n        </button>\n\n        <div id="resultadoPessoas" class="mt-4 text-green-600 font-semibold space-y-2 bg-white border border-gray-300 p-8 rounded hidden dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"></div>\n      </div>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},t=document.getElementById("pessoasLista"),n=document.getElementById("separador"),r=document.getElementById("separadorCustom"),a=document.getElementById("qtdSorteio"),o=document.getElementById("btnSortearPessoas"),d=document.getElementById("resultadoPessoas");n.addEventListener("change",(()=>{r.classList.toggle("hidden","__custom__"!==n.value)}));const l=()=>{const e=t.value.trim(),a=(e=>{const t={"\n":(e.match(/\n/g)||[]).length,",":(e.match(/,/g)||[]).length,";":(e.match(/;/g)||[]).length,"|":(e.match(/\|/g)||[]).length,".":(e.match(/\./g)||[]).length},n=Object.entries(t).sort(((e,t)=>t[1]-e[1]))[0];return n[1]>0?n[0]:"\n"})(e);n.value=a,r.classList.add("hidden");const o=e.split("\n").length;t.rows=Math.min(30,Math.max(6,o))};t.addEventListener("input",l),t.addEventListener("paste",(()=>setTimeout(l,10))),o.addEventListener("click",(()=>{const o=t.value.trim(),l="__custom__"===n.value?r.value||"\n":n.value;if(!o.includes(l))return d.innerHTML=`<p class="text-yellow-400">⚠️ ${e("separator_not_found")} (“${l}”)</p>`,void d.classList.remove("hidden");const i=o.split(l).map((e=>e.trim())).filter(Boolean),s=parseInt(a.value,10)||1;if(0===i.length)return d.innerHTML=`<p class="text-yellow-400">⚠️ ${e("no_valid_names")}</p>`,void d.classList.remove("hidden");if(s>i.length)return d.innerHTML=`<p class="text-yellow-400">⚠️ ${e("more_than_available")}</p>`,void d.classList.remove("hidden");const c={},g=[];i.forEach((e=>{const t=e.toLowerCase();c[t]=c[t]?c[t]+1:1}));for(const[e,t]of Object.entries(c))t>1&&g.push(i.find((t=>t.toLowerCase()===e)));if(g.length>0)return d.innerHTML=`\n          <p class="text-yellow-400">\n            ⚠️ ${e("duplicates_found")}:\n            <strong>${g.join(", ")}</strong>\n          </p>\n        `,void d.classList.remove("hidden");const u=[],p=[...i];for(;u.length<s;){const e=Math.floor(Math.random()*p.length);u.push(p.splice(e,1)[0])}d.innerHTML=`\n        <p class="text-xl font-bold text-green-600 dark:text-green-300">\n          🎊 ${e(1===s?"winner_single":"winner_plural")}:\n        </p>\n        <ol class="list-decimal list-inside text-green-500 dark:text-green-200 text-lg space-y-1">\n          ${u.map((e=>`<li>${e}</li>`)).join("")}\n        </ol>\n        <p class="text-sm text-gray-600 dark:text-gray-400">${e("congrats")}</p>\n      `,d.classList.remove("hidden")}))}},nr=Object.freeze(Object.defineProperty({__proto__:null,default:tr},Symbol.toStringTag,{value:"Module"})),rr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-2">\n      <div>\n        <label class="block text-sm text-gray-900 dark:text-gray-300 mb-1">${t("paragraphs")}</label>\n        <input\n          type="number"\n          id="emojiIpsumCount"\n          value="2"\n          class="w-full p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded"\n        />\n      </div>\n      <div>\n        <label class="block text-sm text-gray-900 dark:text-gray-300 mb-1">${t("style")}</label>\n        <select\n          id="emojiIpsumStyle"\n          class="w-full p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded"\n        >\n          <option value="casual">${t("casual")}</option>\n          <option value="tech">${t("tech")}</option>\n          <option value="funny">${t("funny")}</option>\n          <option value="mix">${t("mix")}</option>\n        </select>\n      </div>\n    </div>\n\n    <button\n      id="emojiIpsumGen"\n      class="bg-pink-600 hover:bg-pink-700 px-4 py-1 rounded text-white"\n    >\n      ${t("generate")}\n    </button>\n\n    <div class="mt-4 flex gap-2">\n      <textarea\n        id="emojiIpsumOutput"\n        rows="6"\n        readonly\n        class="p-2 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400 border border-gray-300 dark:border-gray-700 rounded w-full text-sm"\n        placeholder="${t("placeholder")}"\n      ></textarea>\n      <button\n        id="emojiIpsumCopy"\n        class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white self-start"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const t={casual:["Lorem ipsum 😎 dolor sit amet, consectetur ✨ adipiscing elit 🥐.","Pellentesque 🍕 habitant morbi 🍟 tristique senectus 😴.","Vivamus commodo 🚀 massa ut ultricies 💼 fermentum 🛴.","Aenean 🎯 sed nisi 🥲 sed justo 🔥 fringilla dapibus."],tech:["Deploy 🚀 na main sem testar, sucesso garantido 🧨.","Meu bug, minhas regras 🐞🧑‍💻.","Refatorando o caos em TypeScript 🤯.","Stack overflow salvou mais uma vez 🙏.","const vida = { dev: true } 😵‍💫"],funny:["Café ☕ é o compilador da alma 🧠.","Já dizia Confúcio: 'console.log ou nada' 🧘‍♂️.","JS é tipo feitiçaria moderna 🧙‍♀️.","function namoral() { return '🔥' }","While(true) → burnout garantido 😬"],mix:[]};t.mix=[...t.casual,...t.tech,...t.funny];const n=document.getElementById("emojiIpsumGen"),r=document.getElementById("emojiIpsumCount"),a=document.getElementById("emojiIpsumStyle"),o=document.getElementById("emojiIpsumOutput"),d=document.getElementById("emojiIpsumCopy");n.addEventListener("click",(()=>{const e=parseInt(r.value,10),n=a.value,d=t[n]||t.mix;let l="";for(let t=0;t<e;t++){l+=[...d].sort((()=>.5-Math.random())).slice(0,Math.ceil(3*Math.random()+2)).join(" ")+"\n\n"}o.value=l.trim()})),d.addEventListener("click",(()=>{navigator.clipboard.writeText(o.value).then((()=>{d.innerText,d.innerText=e("copied"),setTimeout((()=>{d.innerText=e("copy")}),1500)}))}))}},ar=Object.freeze(Object.defineProperty({__proto__:null,default:rr},Symbol.toStringTag,{value:"Module"})),or={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="regexInput"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      rows="2"\n      placeholder="${e("regex_placeholder")}"\n    ></textarea>\n\n    <textarea\n      id="regexTest"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n      rows="3"\n      placeholder="${e("text_placeholder")}"\n    ></textarea>\n\n    <button\n      id="regexTestBtn"\n      class="bg-blue-600 hover:bg-blue-700 px-4 py-1 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n    >\n      ${e("test")}\n    </button>\n\n    <p\n      id="regexOutput"\n      class="mt-2 text-green-600 break-words dark:text-green-400 p-4 bg-white border border-gray-300 dark:border-gray-700"\n    ></p>\n    `},init(){const e=document.getElementById("regexOutput");document.getElementById("regexTestBtn").addEventListener("click",(()=>{var t,n,r,a;const o=document.getElementById("regexInput").value.trim(),d=document.getElementById("regexTest").value.trim();try{const a=new RegExp(o,"g"),l=[...d.matchAll(a)].map((e=>e[0]));e.innerText=l.length?`🔍 ${l.length} ${l.length>1?null==(t=this.i18n)?void 0:t.matches_plural:null==(n=this.i18n)?void 0:n.matches_singular}: `+l.join(", "):(null==(r=this.i18n)?void 0:r.no_match)||"Nenhuma ocorrência encontrada."}catch(l){e.innerText=((null==(a=this.i18n)?void 0:a.error_prefix)||"Erro no regex: ")+l.message}}))}},dr=Object.freeze(Object.defineProperty({__proto__:null,default:or},Symbol.toStringTag,{value:"Module"})),lr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <input\n        id="regexPattern"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n        placeholder="${t("regex_placeholder")}"\n      />\n\n      <textarea\n        id="regexText"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n        rows="4"\n        placeholder="${t("text_placeholder")}"\n      ></textarea>\n\n      <button\n        id="regexTestBtn"\n        class="bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600"\n      >\n        ${t("test")}\n      </button>\n\n      <div class="relative mt-4">\n        <div\n          id="regexResult"\n          class="p-3 bg-white border border-gray-300 text-gray-800 rounded whitespace-pre-wrap break-words pr-16 dark:bg-gray-800 dark:border-gray-700 dark:text-white"\n        ></div>\n\n        <button\n          id="copyRegexResultBtn"\n          class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white dark:bg-gray-500 dark:hover:bg-gray-400"\n        >\n          ${e("copy")}\n        </button>\n\n        <span\n          id="copiedRegexMsg"\n          class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n        >\n          ${e("copied")}\n        </span>\n      </div>\n\n      <small class="text-gray-600 dark:text-gray-400 block mt-2">\n        ${t("hint")}\n      </small>\n    `},init(){const e=document.getElementById("regexPattern"),t=document.getElementById("regexText"),n=document.getElementById("regexResult"),r=document.getElementById("copyRegexResultBtn"),a=document.getElementById("copiedRegexMsg");document.getElementById("regexTestBtn").addEventListener("click",(()=>{var r,a,o;const d=e.value.trim(),l=t.value.trim();if(!d||!l)return void(n.innerHTML=`<span class="text-gray-500">${(null==(r=this.i18n)?void 0:r.fill_both)||"Preencha ambos os campos."}</span>`);let i=d,s="";const c=d.match(/^\/(.+)\/([gimsuy]*)$/);let g;c&&(i=c[1],s=c[2]);try{g=new RegExp(i,s||"g")}catch(p){return void(n.innerHTML=`<span class="text-red-400">${(null==(a=this.i18n)?void 0:a.invalid)||"Regex inválida:"} ${p.message}</span>`)}const u=l.replace(g,(e=>`<span class="bg-yellow-500 text-black px-1 rounded">${e}</span>`));n.innerHTML=u||`<span class="text-gray-500">${(null==(o=this.i18n)?void 0:o.no_match)||"Nenhuma correspondência encontrada."}</span>`})),r.addEventListener("click",(()=>{const e=n.innerHTML;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))}))}},ir=Object.freeze(Object.defineProperty({__proto__:null,default:lr},Symbol.toStringTag,{value:"Module"})),sr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded bg-white text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n      <div>\n        <label class="block mb-1">${t("input_label")}</label>\n        <textarea\n          id="inputDuplicadas"\n          rows="6"\n          class="w-full p-2 rounded bg-white border border-gray-300 text-gray-800 dark:bg-gray-700 dark:border-gray-700 dark:text-white dark:placeholder-gray-400"\n          placeholder="${t("input_placeholder")}"\n        ></textarea>\n      </div>\n\n      <button\n        id="btnRemover"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm text-white dark:bg-blue-500 dark:hover:bg-blue-600"\n      >\n        ${t("remove_button")}\n      </button>\n\n      <div>\n        <label class="block mb-1 mt-4">${t("output_label")}</label>\n        <textarea\n          id="resultado"\n          rows="6"\n          readonly\n          class="w-full p-2 rounded bg-white border border-gray-300 text-green-600 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        ></textarea>\n\n        <div class="flex gap-2 mt-2">\n          <button\n            id="btnCopiar"\n            class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n          >\n            ${e("copy")}\n          </button>\n          <button\n            id="btnDownload"\n            class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-sm text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n          >\n            ${t("download")}\n          </button>\n        </div>\n      </div>\n    </div>\n    `},init(){const t=document.getElementById("inputDuplicadas"),n=document.getElementById("resultado");document.getElementById("btnRemover").addEventListener("click",(()=>{const e=t.value.split("\n").map((e=>e.trim())),r=[...new Set(e)].filter((e=>e));n.value=r.join("\n")})),document.getElementById("btnCopiar").addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{const t=document.getElementById("btnCopiar"),n=t.textContent;t.textContent=e("copied"),setTimeout((()=>t.textContent=n),1500)}))})),document.getElementById("btnDownload").addEventListener("click",(()=>{const e=new Blob([n.value],{type:"text/plain"}),t=document.createElement("a");t.href=URL.createObjectURL(e),t.download="sem-duplicadas.txt",t.click()}))}},cr=Object.freeze(Object.defineProperty({__proto__:null,default:sr},Symbol.toStringTag,{value:"Module"})),gr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="mb-3 grid grid-cols-2 gap-2">\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("color_label")}</label>\n        <input\n          type="color"\n          id="rgbaColor"\n          class="w-full h-10 rounded border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-700"\n          value="#3399ff"\n        />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("opacity_label")}</label>\n        <input\n          type="range"\n          id="rgbaAlpha"\n          min="0"\n          max="1"\n          step="0.01"\n          value="1"\n          class="w-full"\n        />\n        <span id="alphaValue" class="text-sm text-gray-600 dark:text-gray-400 block mt-1 text-center">1.00</span>\n      </div>\n    </div>\n\n    <button\n      id="rgbaGenBtn"\n      class="bg-purple-600 hover:bg-purple-700 px-4 py-1 rounded text-white dark:bg-purple-500 dark:hover:bg-purple-600"\n    >\n      ${t("generate")}\n    </button>\n    <button\n      id="rgbaCopyBtn"\n      class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded ml-2 text-white dark:bg-green-500 dark:hover:bg-green-600"\n    >\n      ${e("copy")}\n    </button>\n\n    <div class="mt-4 bg-white border border-gray-300 p-10 flex items-center justify-center rounded dark:bg-black dark:border-gray-700">\n      <div id="rgbaPreview" class="w-32 h-16 rounded flex items-center justify-center text-black font-bold">\n        Preview\n      </div>\n    </div>\n\n    <pre\n      id="rgbaOutput"\n      class="mt-2 text-green-600 bg-white border border-gray-300 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"\n    ></pre>\n    `},init(){const t=document.getElementById("rgbaColor"),n=document.getElementById("rgbaAlpha"),r=document.getElementById("alphaValue"),a=document.getElementById("rgbaGenBtn"),o=document.getElementById("rgbaCopyBtn");n.addEventListener("input",(()=>{r.innerText=parseFloat(n.value).toFixed(2)})),a.addEventListener("click",(()=>{const e=t.value,r=parseFloat(n.value),a=(e=>{const t=e.replace("#",""),n=parseInt(t,16);return{r:n>>16&255,g:n>>8&255,b:255&n}})(e),o=`rgba(${a.r}, ${a.g}, ${a.b}, ${r})`,d=`#${e.slice(1)}${l=r,Math.round(255*l).toString(16).padStart(2,"0")}`;var l;const i=document.getElementById("rgbaPreview"),s=document.getElementById("rgbaOutput");i.style.backgroundColor=o,s.innerText=`/* RGBA */\n${o}\n\n/* Hex com alpha */\n${d}`})),o.addEventListener("click",(()=>{const t=document.getElementById("rgbaOutput").innerText;t&&navigator.clipboard.writeText(t).then((()=>{const t=o.innerText;o.innerText=e("copied"),setTimeout((()=>o.innerText=t),1500)}))}))}},ur=Object.freeze(Object.defineProperty({__proto__:null,default:gr},Symbol.toStringTag,{value:"Module"})),pr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div id="scrollSnapGen">\n      <div class="grid grid-cols-2 gap-2 mb-3">\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("direction")}</label>\n          <select id="snapDirection" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n            <option value="x">${t("horizontal")}</option>\n            <option value="y">${t("vertical")}</option>\n          </select>\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("behavior")}</label>\n          <select id="snapType" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n            <option value="mandatory">mandatory</option>\n            <option value="proximity">proximity</option>\n          </select>\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("padding")}</label>\n          <input type="number" id="snapPadding" value="0" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" />\n        </div>\n        <div>\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("gap")}</label>\n          <input type="number" id="snapGap" value="8" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" />\n        </div>\n      </div>\n\n      <button id="snapCopy" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white dark:bg-green-500 dark:hover:bg-green-600">\n        ${e("copy")}\n      </button>\n\n      <div class="mt-4 border border-gray-300 dark:border-gray-600 bg-white dark:bg-black rounded overflow-auto max-h-72" id="snapPreviewWrapper">\n        <div id="snapPreview" class="flex p-0 gap-0 scroll-snap-container">\n          ${[1,2,3,4,5].map((e=>`\n              <div class="snap-start shrink-0 w-48 h-32 bg-indigo-500 text-white rounded flex items-center justify-center font-bold text-xl">\n                ${e}\n              </div>`)).join("")}\n        </div>\n      </div>\n\n      <pre id="snapCSS" class="mt-2 text-green-600 bg-white border border-gray-300 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"></pre>\n    </div>\n    `},init(){const t=document.getElementById("snapDirection"),n=document.getElementById("snapType"),r=document.getElementById("snapPadding"),a=document.getElementById("snapGap"),o=document.getElementById("snapPreview"),d=document.getElementById("snapCSS"),l=document.getElementById("snapCopy"),i=()=>{const e=t.value,l=n.value,i=parseInt(r.value,10),s=parseInt(a.value,10);o.style.display="flex",o.style.flexDirection="x"===e?"row":"column",o.style.overflowX="x"===e?"auto":"hidden",o.style.overflowY="y"===e?"auto":"hidden",o.style.scrollSnapType=`${e} ${l}`,o.style.scrollPadding=`${i}px`,o.style.gap=`${s}px`,o.style.padding=`${i}px`;const c=`\n  .container {\n    display: flex;\n    flex-direction: ${"x"===e?"row":"column"};\n    gap: ${s}px;\n    overflow-${e}: auto;\n    scroll-snap-type: ${e} ${l};\n    scroll-padding: ${i}px;\n    padding: ${i}px;\n  }\n\n  .item {\n    scroll-snap-align: start;\n    flex-shrink: 0;\n    width: 12rem;\n    height: 8rem;\n    background: #6366f1;\n    color: white;\n    font-weight: bold;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 0.5rem;\n  }\n      `.trim(),g='\n  <div class="container">\n    <div class="item">1</div>\n    <div class="item">2</div>\n    <div class="item">3</div>\n    <div class="item">4</div>\n    <div class="item">5</div>\n  </div>\n      '.trim();d.innerText=c+"\n\n"+g};[t,n,r,a].forEach((e=>e.addEventListener("input",i))),l.addEventListener("click",(()=>{const t=d.innerText;navigator.clipboard.writeText(t).then((()=>{l.innerText=e("copied"),setTimeout((()=>l.innerText=e("copy")),1500)}))})),i()}},br=Object.freeze(Object.defineProperty({__proto__:null,default:pr},Symbol.toStringTag,{value:"Module"})),yr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="entropyInput"\n      class="w-full p-2 bg-white dark:bg-gray-700 text-gray-900 dark:text-white border border-gray-300 dark:border-gray-600 rounded mb-2"\n      rows="5"\n      placeholder="${t("placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-2">\n      <button id="entropyBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">${t("calculate")}</button>\n      <button id="entropyClear" class="bg-gray-300 dark:bg-gray-600 hover:bg-gray-400 dark:hover:bg-gray-500 px-3 py-1 rounded text-gray-900 dark:text-white hidden">${e("clear")}</button>\n      <button id="entropyCopy" class="bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white hidden">${e("copy")}</button>\n    </div>\n\n    <pre id="entropyOutput" class="text-green-700 dark:text-green-400 bg-white dark:bg-gray-900 whitespace-pre-wrap break-words p-2 my-4 border border-gray-300 dark:border-gray-700 rounded hidden"></pre>\n\n    <p class="text-sm text-gray-700 dark:text-gray-400">\n      ${t("max")}: <strong>8.0</strong><br>\n      ${t("english")}: <strong>3.5 - 5.0</strong><br>\n      ${t("compressed")}: <strong>7.5+</strong><br>\n      ${t("source")}:\n      <a href="https://wikipedia.org/wiki/Entropy_(information_theory)" target="_blank" class="underline text-blue-600 dark:text-blue-400">\n        Wikipedia\n      </a>\n    </p>\n    `},init(){const t=document.getElementById("entropyInput"),n=document.getElementById("entropyOutput"),r=document.getElementById("entropyCopy"),a=document.getElementById("entropyClear");document.getElementById("entropyBtn").addEventListener("click",(()=>{const e=t.value;if(!e)return;const o={};for(const t of e)o[t]=(o[t]||0)+1;const d=e.length;let l=0;for(const t in o){const e=o[t]/d;l-=e*Math.log2(e)}n.innerText=`Entropia: ${l.toFixed(4)} bits por caractere`,n.classList.remove("hidden"),r.classList.remove("hidden"),a.classList.remove("hidden")})),a.addEventListener("click",(()=>{t.value="",n.innerText="",n.classList.add("hidden"),r.classList.add("hidden"),a.classList.add("hidden")})),r.addEventListener("click",(()=>{const t=n.innerText;t&&navigator.clipboard.writeText(t).then((()=>{r.innerText,r.innerText=e("copied"),setTimeout((()=>r.innerText=e("copy")),1500)}))}))}},mr=Object.freeze(Object.defineProperty({__proto__:null,default:yr},Symbol.toStringTag,{value:"Module"})),vr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="p-4 rounded text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n      <h2 class="text-lg font-semibold">${e("title_os")}</h2>\n      <div class="space-y-2">\n        <div>\n          <label class="block text-sm mb-1">${e("os_label")}</label>\n          <input id="outSistemaOperacional" readonly\n            class="w-full p-2 rounded bg-white border border-gray-300 text-green-600 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" />\n        </div>\n        <div>\n          <label class="block text-sm mb-1">${e("screen_label")}</label>\n          <input id="outResolucaoTela" readonly\n            class="w-full p-2 rounded bg-white border border-gray-300 text-green-600 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" />\n        </div>\n      </div>\n\n      <h2 class="text-lg font-semibold mt-4">${e("title_browser")}</h2>\n      <div class="space-y-2">\n        <div>\n          <label class="block text-sm mb-1">${e("browser_label")}</label>\n          <input id="outNavegador" readonly\n            class="w-full p-2 rounded bg-white border border-gray-300 text-green-600 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" />\n        </div>\n        <div>\n          <label class="block text-sm mb-1">${e("browser_version")}</label>\n          <input id="outVersaoNavegador" readonly\n            class="w-full p-2 rounded bg-white border border-gray-300 text-green-600 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" />\n        </div>\n      </div>\n    </div>\n    `},init(){var e,t,n,r;const a=document.getElementById("outSistemaOperacional"),o=document.getElementById("outResolucaoTela"),d=document.getElementById("outNavegador"),l=document.getElementById("outVersaoNavegador");a.value=navigator.platform,o.value=`${screen.width}x${screen.height}`;const i=navigator.userAgent;let s="Desconhecido",c="Desconhecida";i.includes("Firefox")?(s="Mozilla Firefox",c=(null==(e=i.match(/Firefox\/([\d.]+)/))?void 0:e[1])??""):i.includes("Chrome")?(s="Google Chrome",c=(null==(t=i.match(/Chrome\/([\d.]+)/))?void 0:t[1])??""):i.includes("Safari")?(s="Safari",c=(null==(n=i.match(/Version\/([\d.]+)/))?void 0:n[1])??""):(i.includes("MSIE")||i.includes("Trident/"))&&(s="Internet Explorer",c=(null==(r=i.match(/(MSIE |rv:)([\d.]+)/))?void 0:r[2])??""),d.value=s,l.value=c}},hr=Object.freeze(Object.defineProperty({__proto__:null,default:vr},Symbol.toStringTag,{value:"Module"})),xr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="binaryInput"\n      class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      rows="4"\n      placeholder="${e("placeholder_input")}"\n    ></textarea>\n\n    <div class="flex gap-2">\n      <button\n        id="textToBinaryBtn"\n        class="bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded"\n      >\n        ${e("btn_text_to_bin")}\n      </button>\n      <button\n        id="binaryToTextBtn"\n        class="bg-yellow-600 hover:bg-yellow-700 text-white px-3 py-1 rounded"\n      >\n        ${e("btn_bin_to_text")}\n      </button>\n    </div>\n\n    <div class="mt-2 flex gap-2">\n      <input\n        id="binaryOutput"\n        type="text"\n        value=""\n        readonly\n        class="p-2 rounded w-full text-sm border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n      />\n      <button\n        id="binaryCopyBtn"\n        class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n      >\n        ${e("copy")}\n      </button>\n    </div>\n    `},init(){const e=document.getElementById("binaryInput"),t=document.getElementById("binaryOutput"),n=document.getElementById("textToBinaryBtn"),r=document.getElementById("binaryToTextBtn"),a=document.getElementById("binaryCopyBtn");n.addEventListener("click",(()=>{const n=[...e.value].map((e=>e.charCodeAt(0).toString(2).padStart(8,"0"))).join(" ");t.value=n})),r.addEventListener("click",(()=>{var n;try{const n=e.value.trim().split(/\s+/).map((e=>String.fromCharCode(parseInt(e,2))));t.value=n.join("")}catch(r){t.value=(null==(n=this.i18n)?void 0:n.error_conversion)??"Erro ao converter binário."}})),a.addEventListener("click",(()=>{navigator.clipboard.writeText(t.value).then((()=>{var e;a.innerText,a.innerText=(null==(e=this.i18n)?void 0:e.copied)??"Copiado!",setTimeout((()=>{var e;return a.innerText=(null==(e=this.i18n)?void 0:e.copy)??"Copiar"}),1500)}))}))}},wr=Object.freeze(Object.defineProperty({__proto__:null,default:xr},Symbol.toStringTag,{value:"Module"})),kr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="mb-4">\n      <textarea id="forkInput" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded text-sm font-mono" rows="6" placeholder="${e("placeholder")}"></textarea>\n    </div>\n\n    <div class="mb-2">\n      <label class="text-xs text-gray-600 dark:text-gray-400">${e("delimiter")}</label>\n      <input id="forkDelimiter" type="text" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded text-sm" value="\\n" />\n    </div>\n\n    <div class="mb-4">\n      <label class="text-xs text-gray-600 dark:text-gray-400">${e("operation")}</label>\n      <select id="forkOperation" class="w-full p-2 bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-700 text-black dark:text-white rounded text-sm">\n        ${[["fromBase64",e("fromBase64")],["toBase64",e("toBase64")],["fromHex",e("fromHex")],["toHex",e("toHex")],["toUrl",e("toUrl")],["fromUrl",e("fromUrl")],["toUpper",e("toUpper")],["toLower",e("toLower")],["reverse",e("reverse")],["removeSpaces",e("removeSpaces")],["removeBreaks",e("removeBreaks")],["toBinary",e("toBinary")],["fromBinary",e("fromBinary")]].map((([e,t])=>`<option value="${e}">${t}</option>`)).join("")}\n      </select>\n    </div>\n\n    <div class="flex gap-2 mb-4">\n      <button id="forkProcessBtn" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-sm text-white">${e("process")}</button>\n      <button id="forkClearBtn" class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-4 py-2 rounded text-sm text-black dark:text-white">${e("clear")}</button>\n    </div>\n\n    <pre id="forkOutput" class="bg-white border border-gray-300 dark:border-gray-700 dark:bg-gray-900 text-green-600 dark:text-green-400 p-4 rounded text-sm whitespace-pre-wrap break-words hidden"></pre>\n    `},init(){const e=document.getElementById("forkInput"),t=document.getElementById("forkDelimiter"),n=document.getElementById("forkOperation"),r=document.getElementById("forkOutput"),a=document.getElementById("forkProcessBtn"),o=document.getElementById("forkClearBtn"),d=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},l={fromBase64:e=>{try{return atob(e)}catch{return d("error_base64")}},toBase64:e=>btoa(e),fromHex:e=>{try{return decodeURIComponent(e.replace(/\s+/g,"").replace(/(..)/g,"%$1"))}catch{return d("error_hex")}},toHex:e=>Array.from(e).map((e=>e.charCodeAt(0).toString(16).padStart(2,"0"))).join(" "),toUrl:e=>encodeURIComponent(e),fromUrl:e=>{try{return decodeURIComponent(e)}catch{return d("error_url")}},toUpper:e=>e.toUpperCase(),toLower:e=>e.toLowerCase(),reverse:e=>e.split("").reverse().join(""),removeSpaces:e=>e.replace(/\s+/g,""),removeBreaks:e=>e.replace(/[\n\r]/g,""),toBinary:e=>e.split("").map((e=>e.charCodeAt(0).toString(2).padStart(8,"0"))).join(" "),fromBinary:e=>e.split(/\s+/).map((e=>String.fromCharCode(parseInt(e,2)))).join("")};a.addEventListener("click",(()=>{const a=e.value.trim(),o="\\n"===(d=t.value.trim())?"\n":"\\t"===d?"\t":"\\r"===d?"\r":d;var d;const i=n.value;if(!a||!l[i])return;const s=a.split(o).map(l[i]).join("\n");r.textContent=s,r.classList.remove("hidden")})),o.addEventListener("click",(()=>{e.value="",r.textContent="",r.classList.add("hidden")}))}},fr=Object.freeze(Object.defineProperty({__proto__:null,default:kr},Symbol.toStringTag,{value:"Module"})),Br={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="normInput"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n      rows="4"\n      placeholder="${t("input_placeholder")}"\n    ></textarea>\n\n    <button\n      id="normBtn"\n      class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded mb-2 text-white"\n    >\n      ${t("normalize")}\n    </button>\n\n    <div class="relative">\n      <textarea\n        id="normOutput"\n        class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded pr-20 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        rows="4"\n        readonly\n        placeholder="${t("output_placeholder")}"\n      ></textarea>\n      <button\n        id="copyNormBtn"\n        class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white"\n      >\n        ${e("copy")}\n      </button>\n      <span\n        id="copiedNormMsg"\n        class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("normInput"),t=document.getElementById("normOutput"),n=document.getElementById("copyNormBtn"),r=document.getElementById("copiedNormMsg");document.getElementById("normBtn").addEventListener("click",(()=>{const n=e.value.trim();if(!n)return t.value="";const r=n.normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/[^\w\s]/gi,"").toLowerCase();t.value=r})),n.addEventListener("click",(()=>{const e=t.value;e&&navigator.clipboard.writeText(e).then((()=>{n.classList.add("hidden"),r.classList.remove("hidden"),setTimeout((()=>{r.classList.add("hidden"),n.classList.remove("hidden")}),2e3)}))}))}},_r=Object.freeze(Object.defineProperty({__proto__:null,default:Br},Symbol.toStringTag,{value:"Module"})),Ir={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <div class="grid grid-cols-2 gap-2 mb-3">\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("shadow_color")}</label>\n        <input type="color" id="textShadowColor" class="w-full h-10 rounded" value="#000000" />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("blur")}</label>\n        <input type="number" id="textShadowBlur" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" value="4" />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("offset_x")}</label>\n        <input type="number" id="textShadowX" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" value="2" />\n      </div>\n      <div>\n        <label class="text-sm text-gray-800 dark:text-gray-300">${t("offset_y")}</label>\n        <input type="number" id="textShadowY" class="w-full p-1 bg-white border border-gray-300 text-gray-800 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" value="2" />\n      </div>\n    </div>\n\n    <button id="textShadowCopyBtn" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white">\n      ${e("copy")}\n    </button>\n\n    <div class="mt-4 bg-white border border-gray-600 p-10 rounded text-center dark:bg-gray-900 dark:border-gray-700">\n      <h2 id="textShadowPreview" class="text-2xl font-bold text-black dark:text-white">${t("preview_text")}</h2>\n    </div>\n\n    <pre id="textShadowCSS" class="mt-2 text-green-600 bg-white border border-gray-300 p-3 rounded whitespace-pre-wrap break-words text-sm dark:bg-gray-900 dark:border-gray-700 dark:text-green-400"></pre>\n    `},init(){const t=document.getElementById("textShadowColor"),n=document.getElementById("textShadowBlur"),r=document.getElementById("textShadowX"),a=document.getElementById("textShadowY"),o=document.getElementById("textShadowPreview"),d=document.getElementById("textShadowCSS"),l=document.getElementById("textShadowCopyBtn"),i=()=>{const e=`text-shadow: ${r.value}px ${a.value}px ${n.value}px ${t.value};`;o.style.textShadow=e,d.innerText=e};[t,n,r,a].forEach((e=>e.addEventListener("input",i))),l.addEventListener("click",(()=>{const t=d.innerText;t&&navigator.clipboard.writeText(t).then((()=>{l.innerText=e("copied"),setTimeout((()=>l.innerText=e("copy")),1500)}))})),i()}},Er=Object.freeze(Object.defineProperty({__proto__:null,default:Ir},Symbol.toStringTag,{value:"Module"})),$r={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.3.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="textBinaryInput"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n      rows="4"\n      placeholder="${t("input_placeholder")}"\n    ></textarea>\n\n    <div class="flex gap-2 mb-2">\n      <button id="textToBinaryBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">\n        ${t("text_to_binary")}\n      </button>\n      <button id="binaryToTextBtn" class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white">\n        ${t("binary_to_text")}\n      </button>\n    </div>\n\n    <div class="relative">\n      <textarea\n        id="textBinaryOutput"\n        class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded pr-20 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        rows="4"\n        readonly\n        placeholder="${t("output_placeholder")}"\n      ></textarea>\n      <button\n        id="copyTextBinaryBtn"\n        class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white text-xs"\n      >\n        ${e("copy")}\n      </button>\n      <span\n        id="copiedTextBinaryMsg"\n        class="absolute top-2 right-2 text-green-600 dark:text-green-400 px-2 py-1 hidden text-xs"\n      >\n        ${e("copied")}\n      </span>\n    </div>\n    `},init(){const e=document.getElementById("textBinaryInput"),t=document.getElementById("textBinaryOutput"),n=document.getElementById("copyTextBinaryBtn"),r=document.getElementById("copiedTextBinaryMsg");document.getElementById("textToBinaryBtn").addEventListener("click",(()=>{const n=e.value.trim();if(!n)return t.value="";const r=[...n].map((e=>e.charCodeAt(0).toString(2).padStart(8,"0"))).join(" ");t.value=r})),document.getElementById("binaryToTextBtn").addEventListener("click",(()=>{const n=e.value.trim();if(!n)return t.value="";try{const e=n.split(/\s+/).map((e=>String.fromCharCode(parseInt(e,2)))).join("");t.value=e}catch(r){t.value="Erro: "+r.message}})),n.addEventListener("click",(()=>{const e=t.value;e&&navigator.clipboard.writeText(e).then((()=>{n.classList.add("hidden"),r.classList.remove("hidden"),setTimeout((()=>{r.classList.add("hidden"),n.classList.remove("hidden")}),2e3)}))}))}},Tr=Object.freeze(Object.defineProperty({__proto__:null,default:$r},Symbol.toStringTag,{value:"Module"})),Lr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n    <textarea\n      id="multiTextInput"\n      class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-3 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n      rows="4"\n      placeholder="${t("input_placeholder")}"\n    ></textarea>\n\n    <div id="multiTextOptions" class="flex flex-wrap gap-3 mb-3 text-sm text-gray-800 dark:text-gray-300">\n      ${["binario","decimal","octal","hex","base64","ascii","utf8","url","unicode","morse","html"].map((e=>`\n        <label class="flex items-center gap-1">\n          <input type="checkbox" value="${e}" class="accent-blue-500" checked />\n          ${t(`label_${e}`)}\n        </label>`)).join("")}\n    </div>\n\n    <button id="multiTextClearBtn" class="mb-4 bg-gray-700 hover:bg-gray-600 px-3 py-1 rounded text-white hidden">\n      ${e("clear")}\n    </button>\n\n    <div id="multiTextResults" class="space-y-3"></div>\n    `},init(){const t=document.getElementById("multiTextInput"),n=document.getElementById("multiTextResults"),r=[...document.querySelectorAll("#multiTextOptions input")],a=document.getElementById("multiTextClearBtn"),o={a:".-",b:"-...",c:"-.-.",d:"-..",e:".",f:"..-.",g:"--.",h:"....",i:"..",j:".---",k:"-.-",l:".-..",m:"--",n:"-.",o:"---",p:".--.",q:"--.-",r:".-.",s:"...",t:"-",u:"..-",v:"...-",w:".--",x:"-..-",y:"-.--",z:"--..",0:"-----",1:".----",2:"..---",3:"...--",4:"....-",5:".....",6:"-....",7:"--...",8:"---..",9:"----."," ":"/",".":".-.-.-",",":"--..--","?":"..--..","!":"-.-.--"},d={binario:e=>[...e].map((e=>e.charCodeAt(0).toString(2).padStart(8,"0"))).join(" "),decimal:e=>[...e].map((e=>e.charCodeAt(0))).join(" "),octal:e=>[...e].map((e=>e.charCodeAt(0).toString(8))).join(" "),hex:e=>[...e].map((e=>e.charCodeAt(0).toString(16).padStart(2,"0"))).join(" "),base64:e=>btoa(unescape(encodeURIComponent(e))),ascii:e=>[...e].map((e=>e.charCodeAt(0))).join(" "),utf8:e=>[...unescape(encodeURIComponent(e))].map((e=>e.charCodeAt(0).toString(16).padStart(2,"0"))).join(" "),url:e=>encodeURIComponent(e),unicode:e=>[...e].map((e=>"\\u"+e.charCodeAt(0).toString(16).padStart(4,"0"))).join(" "),morse:e=>[...e.toLowerCase()].map((e=>o[e]||e)).join(" "),html:e=>[...e].map((e=>`&#${e.charCodeAt(0)};`)).join("")},l=()=>{const o=t.value,l=r.filter((e=>e.checked)).map((e=>e.value));n.innerHTML="",o.trim()?(a.classList.remove("hidden"),l.forEach((t=>{let r="";try{r=d[t](o)}catch{r="[erro na conversão]"}const a=document.createElement("div");a.className="flex flex-col gap-1";const l=document.createElement("div");l.textContent=t.toUpperCase(),l.className="text-sm text-gray-800 dark:text-gray-400";const i=document.createElement("textarea");i.value=r,i.readOnly=!0,i.rows=2,i.className="w-full bg-white border border-gray-300 text-gray-800 text-sm px-2 py-1 rounded resize-y dark:bg-gray-900 dark:border-gray-700 dark:text-green-400";const s=document.createElement("button");s.textContent=e("copy"),s.className="self-start mt-1 bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-sm text-white",s.addEventListener("click",(()=>{navigator.clipboard.writeText(i.value).then((()=>{s.textContent=e("copied"),setTimeout((()=>s.textContent=e("copy")),1500)}))})),a.appendChild(l),a.appendChild(i),a.appendChild(s),n.appendChild(a)}))):a.classList.add("hidden")};t.addEventListener("input",l),a.addEventListener("click",(()=>{t.value="",n.innerHTML="",a.classList.add("hidden")})),r.forEach((e=>e.addEventListener("change",l)))}},jr=Object.freeze(Object.defineProperty({__proto__:null,default:Lr},Symbol.toStringTag,{value:"Module"})),Cr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.4.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <input id="timestampInput" type="text" placeholder="${t("input_placeholder")}"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white" />\n\n      <select id="timestampFormat"\n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n        <option value="br">${t("format_br")}</option>\n        <option value="iso">${t("format_iso")}</option>\n        <option value="utc">${t("format_utc")}</option>\n      </select>\n\n      <button id="timestampBtn"\n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded mb-2 text-white">${t("convert")}</button>\n\n      <div class="relative">\n        <input id="timestampOutput" type="text" readonly\n          class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded pr-20 dark:bg-gray-800 dark:border-gray-700 dark:text-green-400"\n          placeholder="${t("output_placeholder")}" />\n        <button id="copyTimestampBtn"\n          class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-sm text-white">\n          ${e("copy")}\n        </button>\n        <span id="copiedTimestampMsg"\n          class="absolute top-2 right-2 text-green-400 px-2 py-1 hidden">${e("copied")}</span>\n      </div>\n\n      <small class="text-gray-600 dark:text-gray-400 block mt-2">\n        ${t("instructions")}\n      </small>\n    `},init(){const e=document.getElementById("timestampInput"),t=document.getElementById("timestampFormat"),n=document.getElementById("timestampOutput"),r=document.getElementById("copyTimestampBtn"),a=document.getElementById("copiedTimestampMsg");document.getElementById("timestampBtn").addEventListener("click",(()=>{const r=e.value.trim(),a=t.value;let o;if(/^\d+$/.test(r)){const e=parseInt(r,10);o=new Date(1e3*e)}else o=new Date(r);if(isNaN(o.getTime()))return void(n.value="Entrada inválida");let d="";switch(a){case"br":d=o.toLocaleString("pt-BR",{dateStyle:"full",timeStyle:"medium"});break;case"iso":d=o.toISOString();break;case"utc":d=o.toUTCString()}n.value=d})),r.addEventListener("click",(()=>{const e=n.value;e&&"Entrada inválida"!==e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))}))}},Sr=Object.freeze(Object.defineProperty({__proto__:null,default:Cr},Symbol.toStringTag,{value:"Module"})),Or={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"2.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea id="unicodeInput" class="w-full p-2 bg-white border border-gray-300 text-black rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white" rows="4" placeholder="${t("input_placeholder")}"></textarea>\n\n      <div class="grid grid-cols-1 md:grid-cols-2 gap-2 mb-2">\n        <select id="unicodeMode" class="w-full p-2 bg-white border border-gray-300 text-black rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n          <option value="unicode">${t("option_unicode")}</option>\n          <option value="utf8">${t("option_utf8")}</option>\n          <option value="hex">${t("option_hex")}</option>\n        </select>\n        <select id="unicodeFilter" class="w-full p-2 bg-white border border-gray-300 text-black rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white">\n          <option value="all">${t("filter_all")}</option>\n          <option value="accents">${t("filter_accents")}</option>\n          <option value="specials">${t("filter_specials")}</option>\n          <option value="cedilla">${t("filter_cedilla")}</option>\n        </select>\n      </div>\n\n      <div class="flex gap-2 mb-2">\n        <button id="textToUnicodeBtn" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">${t("convert_unicode")}</button>\n        <button id="unicodeToTextBtn" class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white">${t("convert_text")}</button>\n      </div>\n\n      <div class="relative">\n        <textarea id="unicodeOutput" class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded pr-20 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" rows="4" readonly placeholder="${t("output_placeholder")}"></textarea>\n        <button id="copyUnicodeBtn" class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-sm text-white">${e("copy")}</button>\n        <span id="copiedUnicodeMsg" class="absolute top-2 right-2 text-green-400 px-2 py-1 hidden">${e("copied")}</span>\n      </div>\n    `},init(){const e=document.getElementById("unicodeInput"),t=document.getElementById("unicodeOutput"),n=document.getElementById("unicodeMode"),r=document.getElementById("unicodeFilter"),a=document.getElementById("copyUnicodeBtn"),o=document.getElementById("copiedUnicodeMsg");document.getElementById("textToUnicodeBtn").addEventListener("click",(()=>{const a=e.value.trim(),o=n.value,d=r.value,l=[...a].map((e=>((e,t)=>{const n=/[\u0300-\u036f\u00C0-\u00FF]/.test(e.normalize("NFD")),r=/[^\w\s]/.test(e),a=/[çÇ]/.test(e);switch(t){case"all":return!0;case"accents":return n;case"specials":return r;case"cedilla":return a}})(e,d)?((e,t)=>{const n=e.charCodeAt(0);return"unicode"===t?"\\u"+n.toString(16).padStart(4,"0"):"utf8"===t?"\\x"+n.toString(16).padStart(2,"0"):n.toString(16)})(e,o):e)).join("");t.value=l})),document.getElementById("unicodeToTextBtn").addEventListener("click",(()=>{const n=e.value.trim();try{const e=n.replace(/\\u([\dA-Fa-f]{4})/g,((e,t)=>String.fromCharCode(parseInt(t,16)))).replace(/\\x([\dA-Fa-f]{2})/g,((e,t)=>String.fromCharCode(parseInt(t,16))));t.value=e}catch(r){t.value="Erro: "+r.message}})),a.addEventListener("click",(()=>{const e=t.value;e&&navigator.clipboard.writeText(e).then((()=>{a.classList.add("hidden"),o.classList.remove("hidden"),setTimeout((()=>{o.classList.add("hidden"),a.classList.remove("hidden")}),2e3)}))}))}},Mr=Object.freeze(Object.defineProperty({__proto__:null,default:Or},Symbol.toStringTag,{value:"Module"})),Dr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"2.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="gap-3 mb-4">\n        <input \n          id="unitInput" \n          type="number" \n          class="w-full p-2 bg-white border border-gray-300 text-black rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white" \n          placeholder="${t("input_placeholder")}" \n        />\n        <select \n          id="unitSelect" \n          class="w-full p-2 bg-white border border-gray-300 text-black rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white m-4 ml-0"\n        ></select>\n        <button id="unitConvertBtn" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white">${t("convert")}</button>\n      </div>\n\n      <div class="relative">\n        <textarea \n          id="unitResult" \n          class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded pr-20 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" \n          rows="3" \n          readonly \n          placeholder="${t("output_placeholder")}"\n        ></textarea>\n        <button \n          id="copyUnitBtn" \n          class="absolute top-2 right-2 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-sm text-white"\n        >\n          ${e("copy")}\n        </button>\n        <span \n          id="copiedUnitMsg" \n          class="absolute top-2 right-2 text-green-400 px-2 py-1 hidden"\n        >\n          ${e("copied")}\n        </span>\n      </div>\n    `},init(){const e=document.getElementById("unitInput"),t=document.getElementById("unitSelect"),n=document.getElementById("unitResult"),r=document.getElementById("copyUnitBtn"),a=document.getElementById("copiedUnitMsg"),o=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},d={[o("conversions.Pixels ↔ Rem (base 16)")]:e=>`${e}px = ${(e/16).toFixed(4)}rem\n${e}rem = ${(16*e).toFixed(2)}px`,[o("conversions.Celsius ↔ Fahrenheit")]:e=>`${e}°C = ${(9*e/5+32).toFixed(1)}°F\n${e}°F = ${(5*(e-32)/9).toFixed(1)}°C`,[o("conversions.Km ↔ Milhas")]:e=>`${e}km = ${(.621371*e).toFixed(3)}mi\n${e}mi = ${(e/.621371).toFixed(3)}km`,[o("conversions.Metros ↔ Pés")]:e=>`${e}m = ${(3.28084*e).toFixed(2)}ft\n${e}ft = ${(e/3.28084).toFixed(2)}m`,[o("conversions.Kg ↔ Libras")]:e=>`${e}kg = ${(2.20462*e).toFixed(2)}lb\n${e}lb = ${(e/2.20462).toFixed(2)}kg`,[o("conversions.Horas ↔ Minutos ↔ Segundos")]:e=>`${e}h = ${60*e}min = ${3600*e}s`,[o("conversions.Centímetros ↔ Polegadas")]:e=>`${e}cm = ${(e/2.54).toFixed(2)}in\n${e}in = ${(2.54*e).toFixed(2)}cm`,[o("conversions.Minutos ↔ Segundos")]:e=>`${e}min = ${60*e}s\n${e}s = ${(e/60).toFixed(2)}min`,[o("conversions.Dias ↔ Horas")]:e=>`${e}d = ${24*e}h\n${e}h = ${(e/24).toFixed(2)}d`,[o("conversions.Litros ↔ Galões (US)")]:e=>`${e}L = ${(.264172*e).toFixed(3)}gal (US)\n${e}gal = ${(e/.264172).toFixed(3)}L`,[o("conversions.Litros ↔ Mililitros")]:e=>`${e}L = ${1e3*e}mL\n${e}mL = ${(e/1e3).toFixed(3)}L`,[o("conversions.Joules ↔ Calorias")]:e=>`${e}J = ${(e/4.184).toFixed(2)}cal\n${e}cal = ${(4.184*e).toFixed(2)}J`,[o("conversions.Watts ↔ Cavalos de potência")]:e=>`${e}W = ${(e/745.7).toFixed(3)}HP\n${e}HP = ${(745.7*e).toFixed(2)}W`,[o("conversions.Bytes ↔ KB ↔ MB")]:e=>`${e}B = ${(e/1024).toFixed(2)}KB = ${(e/1048576).toFixed(2)}MB`,[o("conversions.MB ↔ GB")]:e=>`${e}MB = ${(e/1024).toFixed(2)}GB\n${e}GB = ${(1024*e).toFixed(2)}MB`,[o("conversions.Hectares ↔ Metros²")]:e=>`${e}ha = ${1e4*e}m²\n${e}m² = ${(e/1e4).toFixed(2)}ha`,[o("conversions.m² ↔ pés²")]:e=>`${e}m² = ${(10.7639*e).toFixed(2)}ft²\n${e}ft² = ${(e/10.7639).toFixed(2)}m²`,[o("conversions.Bar ↔ Pascal")]:e=>`${e}bar = ${(1e5*e).toFixed(0)}Pa\n${e}Pa = ${(e/1e5).toFixed(5)}bar`};Object.keys(d).forEach((e=>{const n=document.createElement("option");n.value=e,n.textContent=e,t.appendChild(n)})),document.getElementById("unitConvertBtn").addEventListener("click",(()=>{const r=parseFloat(e.value.trim()),a=t.value;if(isNaN(r))return n.value=o("invalid_input");n.value=d[a](r)})),r.addEventListener("click",(()=>{const e=n.value;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))}))}},Ar=Object.freeze(Object.defineProperty({__proto__:null,default:Dr},Symbol.toStringTag,{value:"Module"})),Pr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.4.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="urlInput" \n        class="w-full p-2 bg-white border border-gray-300 text-black rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white" \n        rows="3" \n        placeholder="${t("placeholder_input")}"\n      ></textarea>\n\n      <div class="grid grid-cols-1 md:grid-cols-2 gap-2 mb-2">\n        <select \n          id="urlEncodeMode" \n          class="w-full p-2 bg-white border border-gray-300 text-black rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        >\n          <option value="component">encodeURIComponent</option>\n          <option value="uri">encodeURI</option>\n        </select>\n        <div class="flex gap-2">\n          <button id="urlEncodeBtn" class="bg-green-600 hover:bg-green-700 px-3 py-1 rounded text-white">${t("encode")}</button>\n          <button id="urlDecodeBtn" class="bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-white">${t("decode")}</button>\n        </div>\n      </div>\n\n      <div class="relative mb-2">\n        <textarea \n          id="urlOutput" \n          class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded pr-24 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" \n          rows="3" \n          readonly \n          placeholder="${t("placeholder_output")}"\n        ></textarea>\n        <button \n          id="copyUrlBtn" \n          class="absolute top-2 right-20 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-sm text-white"\n        >${e("copy")}</button>\n        <button \n          id="downloadUrlBtn" \n          class="absolute top-2 right-2 bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-sm text-white"\n        >${e("download")}</button>\n        <span \n          id="copiedUrlMsg" \n          class="absolute top-2 right-20 text-green-400 px-2 py-1 hidden"\n        >${e("copied")}</span>\n      </div>\n\n      <div \n        id="urlPreview" \n        class="mt-1 text-sm text-blue-600 underline hidden dark:text-blue-400"\n      >\n        <a \n          id="urlPreviewLink" \n          href="#" \n          target="_blank" \n          rel="noopener noreferrer"\n        ></a>\n      </div>\n    `},init(){const e=document.getElementById("urlInput"),t=document.getElementById("urlOutput"),n=document.getElementById("urlEncodeMode"),r=document.getElementById("copyUrlBtn"),a=document.getElementById("copiedUrlMsg"),o=document.getElementById("downloadUrlBtn"),d=document.getElementById("urlPreview"),l=document.getElementById("urlPreviewLink"),i=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},s=e=>{(e=>{try{return new URL(e).protocol.startsWith("http")}catch{return!1}})(e)?(d.classList.remove("hidden"),l.href=e,l.textContent=e.length>60?e.slice(0,60)+"...":e):(d.classList.add("hidden"),l.href="",l.textContent="")};document.getElementById("urlEncodeBtn").addEventListener("click",(()=>{const r=e.value.trim(),a="uri"===n.value?encodeURI(r):encodeURIComponent(r);t.value=a,s(a)})),document.getElementById("urlDecodeBtn").addEventListener("click",(()=>{try{const n=decodeURIComponent(e.value.trim());t.value=n,s(n)}catch{t.value=i("invalid_url"),d.classList.add("hidden")}})),r.addEventListener("click",(()=>{const e=t.value;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))})),o.addEventListener("click",(()=>{const e=new Blob([t.value],{type:"text/plain;charset=utf-8"}),n=document.createElement("a");n.href=URL.createObjectURL(e),n.download=i("download_filename"),document.body.appendChild(n),n.click(),n.remove()}))}},Ur=Object.freeze(Object.defineProperty({__proto__:null,default:Pr},Symbol.toStringTag,{value:"Module"})),zr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"2.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="grid grid-cols-1 md:grid-cols-2 gap-2 mb-2">\n        <select \n          id="uuidVersion" \n          class="w-full p-2 bg-white border border-gray-300 text-black rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        >\n          <option value="v4" selected>${t("uuid_v4")}</option>\n          <option value="v1">${t("uuid_v1")}</option>\n        </select>\n        <input \n          id="uuidCount" \n          type="number" \n          min="1" \n          max="100" \n          value="1" \n          placeholder="${t("quantity_placeholder")}"\n          class="w-full p-2 bg-white border border-gray-300 text-black rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n        />\n      </div>\n\n      <button id="uuidBtn" class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded mb-2 text-white">${e("generate")}</button>\n\n      <div class="relative mb-2">\n        <textarea \n          id="uuidOutput" \n          class="w-full p-2 bg-white border border-gray-300 text-green-600 rounded pr-24 dark:bg-gray-700 dark:border-gray-700 dark:text-green-400" \n          rows="6" \n          readonly \n          placeholder="${t("output_placeholder")}"\n        ></textarea>\n        <button \n          id="copyUuidBtn" \n          class="absolute top-2 right-20 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white text-sm"\n        >${e("copy")}</button>\n        <button \n          id="downloadUuidBtn" \n          class="absolute top-2 right-2 bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white text-sm"\n        >${e("download")}</button>\n        <span \n          id="copiedUuidMsg" \n          class="absolute top-2 right-2 text-green-400 px-2 py-1 hidden text-sm"\n        >${e("copied")}</span>\n      </div>\n    `},init(){const e=document.getElementById("uuidOutput"),t=document.getElementById("uuidVersion"),n=document.getElementById("uuidCount"),r=document.getElementById("copyUuidBtn"),a=document.getElementById("copiedUuidMsg"),o=document.getElementById("downloadUuidBtn"),d=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},l=()=>([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16))),i=()=>{const e=(e,t)=>Math.floor(e).toString(16).padStart(t,"0"),t=Date.now(),n=crypto.getRandomValues(new Uint8Array(8));return[e(t,8),e(t/4294967296&65535,4),"1"+e(4095&n[0],3),e(63&n[1]|128,2)+e(n[2],2),Array.from(n.slice(3)).map((t=>e(t,2))).join("")].join("-")};document.getElementById("uuidBtn").addEventListener("click",(()=>{const r=t.value,a=Math.min(parseInt(n.value,10)||1,100),o="v1"===r?i:l,d=Array.from({length:a},o).join("\n");e.value=d})),r.addEventListener("click",(()=>{const t=e.value.trim();t&&navigator.clipboard.writeText(t).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))})),o.addEventListener("click",(()=>{const t=e.value.trim();if(!t)return;const n=d("filename").replace("{timestamp}",Date.now()),r=new Blob([t],{type:"text/plain;charset=utf-8"}),a=document.createElement("a");a.href=URL.createObjectURL(r),a.download=n,document.body.appendChild(a),a.click(),a.remove()}))}},Rr=Object.freeze(Object.defineProperty({__proto__:null,default:zr},Symbol.toStringTag,{value:"Module"})),Hr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <input\n        id="cnpjInput"\n        type="text"\n        placeholder="${t("placeholder_input")}"\n        class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n      />\n\n      <button\n        id="validateCnpjBtn"\n        class="bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-1 rounded"\n      >\n        ${t("validate")}\n      </button>\n\n      <div class="mt-2 flex gap-2">\n        <input\n          id="cnpjOutput"\n          type="text"\n          value=""\n          readonly\n          class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-green-700 dark:text-green-400"\n        />\n        <button\n          id="cnpjCopyBtn"\n          class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    `},init(){const t=document.getElementById("cnpjInput"),n=document.getElementById("cnpjOutput"),r=document.getElementById("validateCnpjBtn"),a=document.getElementById("cnpjCopyBtn"),o=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};r.addEventListener("click",(()=>{const e=(e=>{if(14!==(e=e.replace(/[^\d]+/g,"")).length)return!1;let t=e.length-2,n=e.substring(0,t);const r=e.substring(t);let a=0,o=t-7;for(let l=t;l>=1;l--)a+=n.charAt(t-l)*o--,o<2&&(o=9);let d=a%11<2?0:11-a%11;if(d!==parseInt(r.charAt(0),10))return!1;t+=1,n=e.substring(0,t),a=0,o=t-7;for(let l=t;l>=1;l--)a+=n.charAt(t-l)*o--,o<2&&(o=9);return d=a%11<2?0:11-a%11,d===parseInt(r.charAt(1),10)})(t.value);n.classList.remove("text-green-400","text-red-400"),e?(n.value=o("valid_cnpj"),n.classList.add("text-green-400")):(n.value=o("invalid_cnpj"),n.classList.add("text-red-400"))})),a.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{a.innerText,a.innerText=o("copied"),setTimeout((()=>{a.innerText=e("copy")}),1500)}))}))}},Jr=Object.freeze(Object.defineProperty({__proto__:null,default:Hr},Symbol.toStringTag,{value:"Module"})),Nr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <input\n        id="cpfValInput"\n        type="text"\n        class="w-full p-2 mb-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"\n        placeholder="${t("placeholder_input")}"\n      />\n\n      <button\n        id="cpfValBtn"\n        class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded"\n      >\n        ${t("validate")}\n      </button>\n\n      <div class="mt-2 flex gap-2">\n        <input\n          id="cpfValOutput"\n          type="text"\n          value=""\n          readonly\n          class="w-full p-2 rounded border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-green-700 dark:text-green-400"\n          placeholder="${t("placeholder_output")}"\n        />\n        <button\n          id="cpfValCopyBtn"\n          class="px-2 py-1 rounded bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 text-gray-900 dark:text-white"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    `},init(){const t=document.getElementById("cpfValInput"),n=document.getElementById("cpfValBtn"),r=document.getElementById("cpfValOutput"),a=document.getElementById("cpfValCopyBtn"),o=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};n.addEventListener("click",(()=>{const e=t.value;r.classList.remove("text-green-400","text-red-400"),(e=>{if(11!==(e=e.replace(/\D/g,"")).length||/^(\d)\1+$/.test(e))return!1;const t=(e,t)=>{const n=10*e.split("").reduce(((e,n,r)=>e+parseInt(n)*(t-r)),0)%11;return 10===n?0:n},n=e.slice(0,9),r=t(n,10);return e===n+r+t(n+r,11)})(e)?(r.value=o("valid"),r.classList.add("text-green-400")):(r.value=o("invalid"),r.classList.add("text-red-400"))})),a.addEventListener("click",(()=>{navigator.clipboard.writeText(r.value).then((()=>{a.innerText,a.innerText=o("copied"),setTimeout((()=>{a.innerText=e("copy")}),1500)}))}))}},qr=Object.freeze(Object.defineProperty({__proto__:null,default:Nr},Symbol.toStringTag,{value:"Module"})),Fr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="gap-2">\n        <div class="flex gap-2 items-center m-4 ml-0">\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("label_quantity")}</label>\n          <input\n            type="number"\n            id="placaQuantidade"\n            min="1"\n            value="1"\n            class="w-20 bg-white border border-gray-300 text-gray-800 rounded p-1 dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n          />\n        </div>\n\n        <div class="flex gap-2 items-center m-4 ml-0">\n          <label class="text-sm text-gray-800 dark:text-gray-300">${t("label_state")}</label>\n          <select\n            id="placaEstado"\n            class="bg-white border border-gray-300 text-gray-800 p-1 rounded dark:bg-gray-700 dark:border-gray-700 dark:text-white"\n          >\n            <option value="">${t("any_state")}</option>\n          </select>\n        </div>\n\n        <label class="text-sm flex gap-1 items-center text-gray-800 dark:text-gray-300 m-4 ml-0">\n          <input type="checkbox" id="placaMascara" checked />\n          ${t("label_mask")}\n        </label>\n\n        <button\n          id="gerarPlacaBtn"\n          class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded text-white dark:bg-blue-500 dark:hover:bg-blue-600 m-4 ml-0 mt-0"\n        >\n          ${t("generate")}\n        </button>\n\n        <textarea\n          id="placaResultado"\n          rows="6"\n          readonly\n          class="bg-white border border-gray-300 text-green-600 p-2 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n        ></textarea>\n\n        <button\n          id="placaCopiarBtn"\n          class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500 mt-2"\n        >\n          ${e("copy")}\n        </button>\n      </div>\n    `},init:async function(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("gerarPlacaBtn"),r=document.getElementById("placaCopiarBtn"),a=document.getElementById("placaResultado"),o=document.getElementById("placaEstado");let d=[];try{const e=await fetch("/data/placas.json");d=await e.json();[...new Set(d.map((e=>e.Estado)))].sort().forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,o.appendChild(t)}))}catch(i){return void alert(t("error_loading"))}const l=(e,n)=>{const r=d.filter((t=>!e||t.Estado===e));if(0===r.length)return t("no_data");const a=r[0],o=((e,t)=>{const n="ABCDEFGHIJKLMNOPQRSTUVWXYZ",r=e=>e.split("").reduce(((e,t,r)=>26*e+n.indexOf(t)),0),a=r(e),o=r(t);return(e=>{let t="";for(let r=0;r<3;r++)t=n[e%26]+t,e=Math.floor(e/26);return t})(Math.floor(Math.random()*(o-a+1))+a)})(a.Inicio,a.Final),l=Math.floor(1e4*Math.random()).toString().padStart(4,"0");return n?`${o}-${l}`:`${o}${l}`};n.addEventListener("click",(()=>{const e=parseInt(document.getElementById("placaQuantidade").value),t=o.value,n=document.getElementById("placaMascara").checked,r=Array.from({length:e},(()=>l(t,n)));a.value=r.join("\n")})),r.addEventListener("click",(()=>{navigator.clipboard.writeText(a.value).then((()=>{r.innerText,r.innerText=t("copied"),setTimeout((()=>{r.innerText=e("copy")}),1500)}))}))}},Vr=Object.freeze(Object.defineProperty({__proto__:null,default:Fr},Symbol.toStringTag,{value:"Module"})),Gr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.0.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="p-4 rounded text-gray-800 text-sm space-y-4 dark:bg-gray-800 dark:text-white">\n        <p>${t("intro")}</p>\n\n        <div>\n          <p><strong>${t("ip_label")}</strong></p>\n          <div class="flex gap-2 mt-1">\n            <input\n              id="ipOutput"\n              type="text"\n              readonly\n              value="${t("loading")}"\n              class="p-2 bg-white border border-gray-300 text-green-600 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n            />\n            <button\n              id="copyIpBtn"\n              class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n            >\n              ${e("copy")}\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <p><strong>${t("dns_label")}</strong></p>\n          <div class="flex gap-2 mt-1">\n            <input\n              id="dnsOutput"\n              type="text"\n              readonly\n              value="${t("loading")}"\n              class="p-2 bg-white border border-gray-300 text-green-600 rounded w-full dark:bg-gray-700 dark:border-gray-700 dark:text-green-400"\n            />\n            <button\n              id="copyDnsBtn"\n              class="bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white dark:bg-gray-600 dark:hover:bg-gray-500"\n            >\n              ${e("copy")}\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <p class="text-gray-700 dark:text-gray-300">${t("ip_types")}</p>\n          <ul class="list-disc pl-5 text-gray-600 dark:text-gray-400">\n            <li><strong>${t("ipv4")}</strong></li>\n            <li><strong>${t("ipv6")}</strong></li>\n          </ul>\n        </div>\n      </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};fetch("https://devutils.tools/api/ipinfo.json").then((e=>e.json())).then((n=>{const r=n.ip,a=n.hostname||t("hostname_na"),o=document.getElementById("ipOutput"),d=document.getElementById("dnsOutput"),l=document.getElementById("copyIpBtn"),i=document.getElementById("copyDnsBtn");o.value=r,d.value=a,l.addEventListener("click",(()=>{navigator.clipboard.writeText(r).then((()=>{l.textContent=t("copied"),setTimeout((()=>l.textContent=e("copy")),1500)}))})),i.addEventListener("click",(()=>{navigator.clipboard.writeText(a).then((()=>{i.textContent=t("copied"),setTimeout((()=>i.textContent=e("copy")),1500)}))}))})).catch((()=>{document.getElementById("ipOutput").value=t("error_ip"),document.getElementById("dnsOutput").value=t("error_dns")}))}},Yr=Object.freeze(Object.defineProperty({__proto__:null,default:Gr},Symbol.toStringTag,{value:"Module"})),Xr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="wcInput" \n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white" \n        rows="6" \n        placeholder="${e("placeholder")}"\n      ></textarea>\n\n      <div class="grid grid-cols-2 gap-2 text-sm text-gray-700 dark:text-gray-300 mt-2">\n        <div>${e("words")}: <span id="wcWords" class="text-green-600 dark:text-green-400">0</span></div>\n        <div>${e("chars")}: <span id="wcChars" class="text-green-600 dark:text-green-400">0</span></div>\n        <div>${e("chars_no_space")}: <span id="wcCharsNoSpace" class="text-green-600 dark:text-green-400">0</span></div>\n        <div>${e("lines")}: <span id="wcLines" class="text-green-600 dark:text-green-400">0</span></div>\n        <div>${e("sentences")}: <span id="wcSentences" class="text-green-600 dark:text-green-400">0</span></div>\n      </div>\n    `},init(){const e=document.getElementById("wcInput"),t=document.getElementById("wcWords"),n=document.getElementById("wcChars"),r=document.getElementById("wcCharsNoSpace"),a=document.getElementById("wcLines"),o=document.getElementById("wcSentences");e.addEventListener("input",(()=>{const d=e.value;t.innerText=d.trim().split(/\s+/).filter((e=>e)).length,n.innerText=d.length,r.innerText=d.replace(/\s/g,"").length,a.innerText=d.split(/\n/).length,o.innerText=(d.match(/[\.\?!](\s|$)/g)||[]).length}))}},Wr=Object.freeze(Object.defineProperty({__proto__:null,default:Xr},Symbol.toStringTag,{value:"Module"})),Qr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!0,license:"MIT",version:"1.1.1",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div class="p-4 rounded bg-gray-100 dark:bg-gray-800 text-sm space-y-4 text-gray-800 dark:text-white">\n        <div>\n          <p class="mb-1 font-semibold">${t("choose_timezone")}</p>\n          <select id="timezoneSelect" class="p-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white rounded w-full border border-gray-300 dark:border-gray-600">\n            <option value="">${t("select_placeholder")}</option>\n          </select>\n          <div class="mt-2 flex gap-2">\n            <input\n              id="timezoneOutput"\n              type="text"\n              readonly\n              value=""\n              class="p-2 bg-white dark:bg-gray-700 text-green-600 dark:text-green-400 rounded w-full border border-gray-300 dark:border-gray-600"\n              placeholder="${t("output_placeholder")}"\n            />\n            <button\n              id="copyTimeBtn"\n              class="bg-gray-200 dark:bg-gray-700 hover:bg-gray-300 dark:hover:bg-gray-600 px-2 py-1 rounded text-gray-800 dark:text-white"\n            >\n              ${e("copy")}\n            </button>\n          </div>\n        </div>\n\n        <div>\n          <p class="font-semibold mb-1">${t("popular_times")}</p>\n          <div id="popularTimes" class="grid grid-cols-1 sm:grid-cols-2 gap-3 text-sm"></div>\n        </div>\n      </div>\n    `},init:async function(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=document.getElementById("timezoneOutput"),r=document.getElementById("copyTimeBtn"),a=document.getElementById("popularTimes"),o=document.getElementById("timezoneSelect"),d=[{zone:"America/Sao_Paulo",label:"🇧🇷 São Paulo"},{zone:"America/New_York",label:"🇺🇸 Nova York"},{zone:"Europe/London",label:"🇬🇧 Londres"},{zone:"Europe/Berlin",label:"🇩🇪 Berlim"},{zone:"Asia/Tokyo",label:"🇯🇵 Tóquio"},{zone:"Australia/Sydney",label:"🇦🇺 Sydney"}];Intl.supportedValuesOf("timeZone").forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,o.appendChild(t)}));const l=async e=>{try{const t=await fetch(`https://devutils.tools/api/timezone.json?zone=${e}`),n=await t.json(),[r,a]=n.time.split(" "),o=new Date(`${r}T${a}Z`).toLocaleString("pt-BR",{timeZone:n.zone,hour12:!1});return{original:n.time,ptbr:o,offset:n.offset}}catch{return{original:"-",ptbr:t("error_time"),offset:"-"}}};o.addEventListener("change",(async()=>{const e=o.value;if(!e)return void(n.value="");const{ptbr:t}=await l(e);n.value=t})),r.addEventListener("click",(()=>{navigator.clipboard.writeText(n.value).then((()=>{r.textContent=t("copied"),setTimeout((()=>r.textContent=e("copy")),1500)}))}));(async()=>{a.innerHTML=t("loading");const e=await Promise.all(d.map((async({zone:e,label:n})=>{const{original:r,ptbr:a,offset:o}=await l(e);return`\n          <div class="bg-gray-200 dark:bg-gray-700 p-3 rounded space-y-1 text-sm text-gray-800 dark:text-white">\n            <div class="font-semibold">${n}</div>\n            <div>\n              <span class="text-gray-600 dark:text-gray-400">${t("label_original")}</span>\n              <span class="text-green-700 dark:text-green-400 font-mono">${r}</span>\n            </div>\n            <div>\n              <span class="text-gray-600 dark:text-gray-400">${t("label_ptbr")}</span>\n              <span class="text-green-700 dark:text-green-400 font-mono">${a}</span>\n            </div>\n            <div>\n              <span class="text-gray-600 dark:text-gray-400">${t("label_offset")}</span>\n              <span class="text-yellow-600 dark:text-yellow-400">${o}</span>\n            </div>\n          </div>\n        `})));a.innerHTML=e.join("")})()}},Kr=Object.freeze(Object.defineProperty({__proto__:null,default:Qr},Symbol.toStringTag,{value:"Module"})),Zr={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.2.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="yamlInput" \n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white" \n        rows="6" \n        placeholder="${t("placeholder_input")}">\n      </textarea>\n\n      <button \n        id="yamlToJsonBtn" \n        class="bg-blue-600 hover:bg-blue-700 px-4 py-2 rounded mb-2 text-white">\n        ${t("convert")}\n      </button>\n\n      <div class="relative">\n        <textarea \n          id="yamlOutput" \n          class="w-full p-2 bg-gray-100 bg-white text-green-600 border border-gray-300 rounded pr-24 dark:bg-gray-700 dark:text-green-400 dark:border-gray-700" \n          rows="6" \n          readonly \n          placeholder="${t("placeholder_output")}">\n        </textarea>\n        \n        <button \n          id="copyYamlJsonBtn" \n          class="absolute top-2 right-20 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white">\n          ${e("copy")}\n        </button>\n\n        <button \n          id="downloadYamlJsonBtn" \n          class="absolute top-2 right-2 bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white">\n          ${e("download")}\n        </button>\n\n        <span \n          id="copiedYamlJsonMsg" \n          class="absolute top-2 right-20 text-green-600 dark:text-green-400 px-2 py-1 hidden">\n          ${t("copied")}\n        </span>\n      </div>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};(e=>{if(window.jsyaml)return e();const t=document.createElement("script");t.src="./vendor/js-yaml.min.js",t.onload=e,document.head.appendChild(t)})((()=>{const t=document.getElementById("yamlInput"),n=document.getElementById("yamlOutput"),r=document.getElementById("yamlToJsonBtn"),a=document.getElementById("copyYamlJsonBtn"),o=document.getElementById("copiedYamlJsonMsg"),d=document.getElementById("downloadYamlJsonBtn");r.addEventListener("click",(()=>{try{const e=jsyaml.load(t.value.trim());n.value=JSON.stringify(e,null,2)}catch(e){n.value="Erro: "+e.message}})),a.addEventListener("click",(()=>{const e=n.value;e&&navigator.clipboard.writeText(e).then((()=>{a.classList.add("hidden"),o.classList.remove("hidden"),setTimeout((()=>{o.classList.add("hidden"),a.classList.remove("hidden")}),2e3)}))})),d.addEventListener("click",(()=>{const t=n.value.trim();if(!t)return;const r=new Blob([t],{type:"application/json"}),a=document.createElement("a");a.href=URL.createObjectURL(r),a.download=e("download_filename"),document.body.appendChild(a),a.click(),a.remove()}))}))}},ea=Object.freeze(Object.defineProperty({__proto__:null,default:Zr},Symbol.toStringTag,{value:"Module"})),ta={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.3.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <textarea \n        id="yamlJsonInput" \n        class="w-full p-2 bg-white border border-gray-300 text-gray-800 rounded mb-2 dark:bg-gray-700 dark:border-gray-700 dark:text-white" \n        rows="6" \n        placeholder="${t("placeholder_input")}"\n      ></textarea>\n      \n      <div class="flex gap-2 mb-2">\n        <button id="yamlToJson" class="bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded text-white">${t("yaml_to_json")}</button>\n        <button id="jsonToYaml" class="bg-purple-600 hover:bg-purple-700 px-3 py-1 rounded text-white">${t("json_to_yaml")}</button>\n      </div>\n      \n      <div class="relative">\n        <textarea \n          id="yamlJsonOutput" \n          class="w-full p-2 bg-gray-100 text-green-600 bg-white border border-gray-300 rounded pr-24 dark:bg-gray-700 dark:text-green-400 dark:border-gray-700" \n          rows="6" \n          readonly \n          placeholder="${t("placeholder_output")}"\n        ></textarea>\n\n        <button id="copyYamlJsonBtn" class="absolute top-2 right-20 bg-gray-600 hover:bg-gray-500 px-2 py-1 rounded text-white">${e("copy")}</button>\n        <button id="downloadYamlJsonBtn" class="absolute top-2 right-2 bg-gray-700 hover:bg-gray-600 px-2 py-1 rounded text-white">${e("download")}</button>\n        <span id="copiedYamlJsonMsg" class="absolute top-2 right-20 text-green-600 dark:text-green-400 px-2 py-1 hidden">${t("copied")}</span>\n      </div>\n    `},init(){const e=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};(e=>{if(window.jsyaml)return e();const t=document.createElement("script");t.src="./vendor/js-yaml.min.js",t.onload=e,document.head.appendChild(t)})((()=>{const t=document.getElementById("yamlJsonInput"),n=document.getElementById("yamlJsonOutput"),r=document.getElementById("copyYamlJsonBtn"),a=document.getElementById("copiedYamlJsonMsg"),o=document.getElementById("downloadYamlJsonBtn");let d="json";document.getElementById("yamlToJson").addEventListener("click",(()=>{try{const e=jsyaml.load(t.value.trim());n.value=JSON.stringify(e,null,2),d="json"}catch(e){n.value="Erro: "+e.message}})),document.getElementById("jsonToYaml").addEventListener("click",(()=>{try{const e=JSON.parse(t.value.trim());n.value=jsyaml.dump(e),d="yaml"}catch(e){n.value="Erro: "+e.message}})),r.addEventListener("click",(()=>{const e=n.value;e&&navigator.clipboard.writeText(e).then((()=>{r.classList.add("hidden"),a.classList.remove("hidden"),setTimeout((()=>{a.classList.add("hidden"),r.classList.remove("hidden")}),2e3)}))})),o.addEventListener("click",(()=>{const t=n.value.trim();if(!t)return;const r=new Blob([t],{type:"text/plain;charset=utf-8"}),a=document.createElement("a");a.href=URL.createObjectURL(r),a.download=e("yaml"===d?"download_filename_yaml":"download_filename_json"),document.body.appendChild(a),a.click(),a.remove()}))}))}},na=Object.freeze(Object.defineProperty({__proto__:null,default:ta},Symbol.toStringTag,{value:"Module"})),ra={i18n:{},async loadI18n(){var e;await n(this,(null==(e=window.getDevutilsLang)?void 0:e.call(window))||"pt")},author:"DevUtils",hasApi:!1,license:"MIT",version:"1.1.0",render(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e};return`\n      <div id="zIndexContainer">\n        <div class="grid grid-cols-3 gap-2 mb-3">\n          ${["A","B","C"].map((e=>`\n            <div class="p-2 bg-gray-100 dark:bg-gray-800 rounded border border-gray-300 dark:border-gray-700">\n              <h3 class="text-gray-800 dark:text-white font-bold mb-1">${t("layer_label")} ${e}</h3>\n              <label class="text-xs text-gray-600 dark:text-gray-400 block mb-1">${t("position_label")}</label>\n              <select id="pos${e}" class="w-full mb-2 bg-white dark:bg-gray-700 text-gray-800 dark:text-white p-1 rounded border border-gray-300 dark:border-gray-600">\n                <option>relative</option>\n                <option>absolute</option>\n                <option>fixed</option>\n              </select>\n              <label class="text-xs text-gray-600 dark:text-gray-400 block mb-1">${t("zindex_label")}</label>\n              <input type="number" id="z${e}" value="${"A"===e?1:"B"===e?2:3}" class="w-full bg-white dark:bg-gray-700 text-gray-800 dark:text-white p-1 rounded border border-gray-300 dark:border-gray-600" />\n              <label class="text-xs text-gray-600 dark:text-gray-400 block mt-2 mb-1">${t("color_label")}</label>\n              <input type="color" id="bg${e}" value="${"A"===e?"#f87171":"B"===e?"#60a5fa":"#34d399"}" class="w-full h-10 rounded" />\n            </div>`)).join("")}\n        </div>\n\n        <button id="zCopy" class="bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white">${e("copy")}</button>\n\n        <div class="relative h-64 border border-gray-300 dark:border-gray-600 mt-4 rounded overflow-hidden bg-white dark:bg-gray-900">\n          <div id="zPreview" class="relative w-full h-full" style="transform: translateZ(0);">\n            ${["A","B","C"].map((e=>`\n                <div id="layer${e}" class="absolute inset-6 flex items-center justify-center font-bold text-white rounded shadow">\n                  ${t("layer_label")} ${e}\n                </div>`)).join("")}\n          </div>\n        </div>\n\n        <pre id="zCSS" class="mt-2 bg-white text-green-600 dark:text-green-400 bg-gray-100 dark:bg-gray-900 p-3 rounded whitespace-pre-wrap break-words text-sm border border-gray-300 dark:border-gray-700"></pre>\n      </div>\n    `},init(){const t=e=>{var t;return(null==(t=this.i18n)?void 0:t[e])??e},n=["A","B","C"],r=()=>{const e=n.map((e=>{const t=document.getElementById(`pos${e}`).value,n=document.getElementById(`z${e}`).value,r=document.getElementById(`bg${e}`).value,a=document.getElementById(`layer${e}`);return a.style.position=t,a.style.zIndex=n,a.style.backgroundColor=r,`#zIndexContainer #layer${e} {\n    position: ${t};\n    z-index: ${n};\n    background: ${r};\n  }`})).join("\n\n");document.getElementById("zCSS").innerText=e};document.getElementById("zCopy").addEventListener("click",(()=>{const n=document.getElementById("zCSS").innerText;n&&navigator.clipboard.writeText(n).then((()=>{const n=document.getElementById("zCopy");n.innerText=t("copied"),setTimeout((()=>n.innerText=e("copy")),1500)}))})),["pos","z","bg"].forEach((e=>n.forEach((t=>{const n=document.getElementById(`${e}${t}`);n&&n.addEventListener("input",r)})))),r()}},aa=Object.freeze(Object.defineProperty({__proto__:null,default:ra},Symbol.toStringTag,{value:"Module"})),oa=Object.assign({"./address_generator/address_generator.js":a,"./advanced_jwt_viewer/advanced_jwt_viewer.js":d,"./advanced_qr_code_generator/advanced_qr_code_generator.js":i,"./alphabetical_order/alphabetical_order.js":c,"./ascii_encoder_decoder/ascii_encoder_decoder.js":u,"./aspect_ratio_generator/aspect_ratio_generator.js":b,"./base58_encoder_decoder/base58_encoder_decoder.js":m,"./base64_encoder_decoder/base64_encoder_decoder.js":h,"./base64_hex_converter/base64_hex_converter.js":w,"./base64_to_image_converter/base64_to_image_converter.js":f,"./bcrypt_hash_tool_generate_verify/bcrypt_hash_tool_generate_verify.js":_,"./binary_decimal_converter/binary_decimal_converter.js":E,"./boleto_bank_slip_validator/boleto_bank_slip_validator.js":T,"./border_radius_generator/border_radius_generator.js":j,"./camelcase_snake_case_kebab_case_converter/camelcase_snake_case_kebab_case_converter.js":S,"./charcode_text_converter/charcode_text_converter.js":M,"./code_chat_with_deepseek/code_chat_with_deepseek.js":A,"./code_diff_github_style/code_diff_github_style.js":U,"./code_diff_unified/code_diff_unified.js":R,"./code_minifier_html_css_js_simple/code_minifier_html_css_js_simple.js":J,"./color_converter_hex_rgb_hsl/color_converter_hex_rgb_hsl.js":q,"./color_palette_generator/color_palette_generator.js":V,"./convert_line_breaks_to_n/convert_line_breaks_to_n.js":Y,"./credit_card_generator/credit_card_generator.js":W,"./credit_card_validator/credit_card_validator.js":K,"./cron_expression_builder/cron_expression_builder.js":ee,"./css_animation_generator/css_animation_generator.js":ne,"./css_button_generator/css_button_generator.js":ae,"./css_clamp_generator/css_clamp_generator.js":de,"./css_filters_generator/css_filters_generator.js":ie,"./css_gradient_generator/css_gradient_generator.js":ce,"./css_shadow_generator/css_shadow_generator.js":ue,"./css_variables_generator/css_variables_generator.js":be,"./csv_data_matrix_generator/csv_data_matrix_generator.js":me,"./csv_json_converter/csv_json_converter.js":he,"./csv_to_json_converter/csv_to_json_converter.js":we,"./curl_to_code_converter/curl_to_code_converter.js":fe,"./currency_formatter_brl_usd_eur/currency_formatter_brl_usd_eur.js":_e,"./data_url_base64_image_viewer/data_url_base64_image_viewer.js":Ee,"./date_difference_calculator/date_difference_calculator.js":Te,"./date_handler_days_months_years/date_handler_days_months_years.js":je,"./date_to_timestamp_converter/date_to_timestamp_converter.js":Se,"./decimal_text_converter/decimal_text_converter.js":Me,"./escape_unescape_backslashes/escape_unescape_backslashes.js":Ae,"./extract_emails_from_text/extract_emails_from_text.js":Ue,"./fake_name_email_phone_generator/fake_name_email_phone_generator.js":Re,"./fake_person_data_generator/fake_person_data_generator.js":Je,"./file_diff_side_by_side/file_diff_side_by_side.js":qe,"./flex_grid_layout_generator/flex_grid_layout_generator.js":Ve,"./generate_analyze_uuid_ulid_nanoid/generate_analyze_uuid_ulid_nanoid.js":Qe,"./gerador_de_cnpj/gerador_de_cnpj.js":Ze,"./gerador_de_cpf/gerador_de_cpf.js":tt,"./gerador_de_rg/gerador_de_rg.js":rt,"./glassmorphism_generator/glassmorphism_generator.js":ot,"./gzip_checker/gzip_checker.js":lt,"./hash_generator_md5_sha1_sha224_sha256_sha512/hash_generator_md5_sha1_sha224_sha256_sha512.js":st,"./hash_generator_md5_sha256/hash_generator_md5_sha256.js":gt,"./hello_world_in_multiple_languages/hello_world_in_multiple_languages.js":pt,"./hex_base64_converter/hex_base64_converter.js":yt,"./hex_encoder_decoder/hex_encoder_decoder.js":vt,"./hex_text_converter/hex_text_converter.js":xt,"./hexadecimal_decimal_converter/hexadecimal_decimal_converter.js":kt,"./hexdump_text_converter/hexdump_text_converter.js":Bt,"./hmac_generator_sha1_sha256_sha512/hmac_generator_sha1_sha256_sha512.js":It,"./html_entity_encode_decode/html_entity_encode_decode.js":$t,"./html_viewer/html_viewer.js":Lt,"./http_error_simulator/http_error_simulator.js":Ct,"./http_headers_viewer_raw_request/http_headers_viewer_raw_request.js":Ot,"./image_cropper/image_cropper.js":Dt,"./image_to_base64_converter/image_to_base64_converter.js":Pt,"./image_to_data_url_base64/image_to_data_url_base64.js":zt,"./json_formatter/json_formatter.js":Ht,"./json_minifier/json_minifier.js":Nt,"./json_prettifier/json_prettifier.js":Ft,"./json_schema_to_openapi/json_schema_to_openapi.js":Gt,"./json_schema_to_typescript/json_schema_to_typescript.js":Xt,"./json_to_bigquery_schema/json_to_bigquery_schema.js":Qt,"./json_to_csv_converter/json_to_csv_converter.js":Zt,"./json_to_flow_types/json_to_flow_types.js":tn,"./json_to_graphql/json_to_graphql.js":rn,"./json_to_json_schema/json_to_json_schema.js":on,"./json_to_mongoose_schema/json_to_mongoose_schema.js":ln,"./json_to_mysql/json_to_mysql.js":cn,"./json_to_typescript/json_to_typescript.js":un,"./json_to_xml_converter/json_to_xml_converter.js":bn,"./json_to_yaml_converter/json_to_yaml_converter.js":mn,"./json_validator/json_validator.js":hn,"./jwt_generator/jwt_generator.js":wn,"./jwt_viewer/jwt_viewer.js":fn,"./lorem_ipsum_generator/lorem_ipsum_generator.js":_n,"./magic_analyzer/magic_analyzer.js":En,"./markdown_to_html_preview/markdown_to_html_preview.js":Tn,"./markdown_to_html_tags/markdown_to_html_tags.js":jn,"./mercosul_plate_generator/mercosul_plate_generator.js":Sn,"./multiple_property_transitions/multiple_property_transitions.js":Mn,"./neon_effect_generator/neon_effect_generator.js":An,"./online_ping/online_ping.js":Un,"./open_ports_checker/open_ports_checker.js":Rn,"./overlay_generator/overlay_generator.js":Jn,"./placeholder_image_generator/placeholder_image_generator.js":qn,"./qr_code_reader_image/qr_code_reader_image.js":Vn,"./query_params_playground/query_params_playground.js":Yn,"./random_email_list_generator/random_email_list_generator.js":Wn,"./random_number_picker/random_number_picker.js":Kn,"./random_password_generator/random_password_generator.js":er,"./random_person_picker/random_person_picker.js":nr,"./random_text_generator_with_emojis/random_text_generator_with_emojis.js":ar,"./regex_tester/regex_tester.js":dr,"./regex_tester_with_highlighting/regex_tester_with_highlighting.js":ir,"./remove_duplicate_lines/remove_duplicate_lines.js":cr,"./rgba_color_generator/rgba_color_generator.js":ur,"./scroll_snap_generator/scroll_snap_generator.js":br,"./shannon_entropy/shannon_entropy.js":mr,"./system_information/system_information.js":hr,"./text_binary_converter/text_binary_converter.js":wr,"./text_fork_by_delimiter/text_fork_by_delimiter.js":fr,"./text_normalizer/text_normalizer.js":_r,"./text_shadow_generator/text_shadow_generator.js":Er,"./text_to_binary_converter/text_to_binary_converter.js":Tr,"./text_to_multiple_formats_converter/text_to_multiple_formats_converter.js":jr,"./timestamp_to_date_converter/timestamp_to_date_converter.js":Sr,"./unicode_to_text_converter/unicode_to_text_converter.js":Mr,"./unit_converter/unit_converter.js":Ar,"./url_encoder_decoder/url_encoder_decoder.js":Ur,"./uuid_generator/uuid_generator.js":Rr,"./validador_de_cnpj/validador_de_cnpj.js":Jr,"./validador_de_cpf/validador_de_cpf.js":qr,"./vehicle_plate_generator/vehicle_plate_generator.js":Vr,"./what_is_my_ip/what_is_my_ip.js":Yr,"./word_character_line_sentence_counter/word_character_line_sentence_counter.js":Wr,"./world_clock/world_clock.js":Kr,"./yaml_to_json_converter/yaml_to_json_converter.js":ea,"./yaml_to_json_to_yaml_converter/yaml_to_json_to_yaml_converter.js":na,"./zindex_layering_generator/zindex_layering_generator.js":aa}),da={};for(const t in oa){const e=t.split("/")[1],n=oa[t].default;n.slug=n.slug||e,da[e]=n}export{Ye as _,da as t};
